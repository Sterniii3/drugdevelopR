[{"path":"https://sterniii3.github.io/drugdevelopR/articles/introduction-to-drugdevelopR.html","id":"the-example-setting","dir":"Articles","previous_headings":"","what":"The example setting","title":"Introduction to planning phase II and phase III trials with drugdevelopR","text":"Suppose developing new tumor treatment, exper. patient variable want investigate difference tumor width one-year visit baseline. normally distributed outcome variable. Within drug development program, compare experimental treatment exper control treatment contro. Building available data, expect mean tumor difference amounts \\(20±1 \\mathrm{mm}\\) contro \\(15±1 \\mathrm{mm}\\) exper. Furthermore, variance assumed 8. treatment effect given standardized difference mean (\\(\\Delta=\\frac{\\mu_{contro} - \\mu_{exper}}{\\sigma}\\)). Thus, obtain standardized treatment difference \\(\\Delta_1 = 0.625\\).","code":""},{"path":"https://sterniii3.github.io/drugdevelopR/articles/introduction-to-drugdevelopR.html","id":"applying-the-package-to-the-example","dir":"Articles","previous_headings":"","what":"Applying the package to the example","title":"Introduction to planning phase II and phase III trials with drugdevelopR","text":"installing package according installation instructions, can load using following code:","code":"library(drugdevelopR) #> Loading required package: mvtnorm #> Loading required package: doParallel #> Loading required package: foreach #> Loading required package: iterators #> Loading required package: parallel #> Loading required package: msm #> Loading required package: cubature #> Loading required package: MASS"},{"path":"https://sterniii3.github.io/drugdevelopR/articles/introduction-to-drugdevelopR.html","id":"defining-all-necessary-parameters","dir":"Articles","previous_headings":"Applying the package to the example","what":"Defining all necessary parameters","title":"Introduction to planning phase II and phase III trials with drugdevelopR","text":"order apply package setting example, need specify following parameters: Delta1 assumed true treatment effect, defined standardized difference means treatment arm control arm. use value \\(\\Delta_1 = 0.625\\) defined . now, assume treatment effects fixed independent prior distribution. Thus, set fixed = TRUE. n2min n2max specify minimal maximal number participants phase II trial. package search optimal sample size within region. now, want program search optimal sample size interval 20 400 participants. addition, tell program search region steps four participants time setting stepn2 = 4. kappamin kappamax specify minimal maximal threshold value go/-go decision rule. package search optimal threshold value within region. now, want program search interval 0.02 0.2 going steps stepkappa = 0.02. c02 c03 fixed costs phase II phase III respectively. set phase II costs 15 phase III costs 20 (\\(10^5\\)$), .e fixed costs 1 500 000$ phase II 2 000 000$ phase III. Note currency input values matter, input value c02 15 also interpreted fixed costs 1 500 000€ necessary. c2 c3 costs phase II phase III per patient. set 0.675 phase II 0.72 phase III. , values given \\(10^5\\)$, .e per patient costs 67 500$ phase II 72 000$ phase III. b1, b2 b3 expected small, medium large benefit categories successfully launching treatment market effect size category \\(10^5\\)$. define small benefit 3000, medium benefit 8000, large benefit 10000. effect size categories directly correspond treatment effect, .e. treatment effect 0 0.5 (standardized differences mean) small treatment effect, hence yielding expected benefits drug development program 300 000 000$. alpha specified significance level. set alpha = 0.05. 1 - beta minimal power require drug development program. set beta = 0.1, meaning require power 90%. parameters: advanced settings, need pre-specify even parameters. now, can set remaining parameters NULL. use explained vignette parameters. Now defined parameters needed example, ready feed package. use function optimal_normal(), calculates optimal sample size optimal threshold value normally distributed outcome variable.","code":"res <- optimal_normal(Delta1 = 0.625, fixed = TRUE, # treatment effect                        n2min = 20, n2max = 400, # sample size region                        stepn2 = 4, # sample size step size                        kappamin = 0.02, kappamax = 0.2, # threshold region                        stepkappa = 0.02, # threshold step size                        c2 = 0.675, c3 = 0.72, # maximal total trial costs                        c02 = 15, c03 = 20, # maximal per-patient costs                        b1 = 3000, b2 = 8000, b3 = 10000, # gains for patients                        alpha = 0.05, # significance level                        beta = 0.1, # 1 - power                        Delta2 = NULL, w = NULL, in1 = NULL, in2 = NULL,                         a = NULL,b = NULL) # setting all unneeded parameters to NULL"},{"path":"https://sterniii3.github.io/drugdevelopR/articles/introduction-to-drugdevelopR.html","id":"interpreting-the-output","dir":"Articles","previous_headings":"Applying the package to the example","what":"Interpreting the output","title":"Introduction to planning phase II and phase III trials with drugdevelopR","text":"setting input parameters running function, let’s take look output program. program returns total thirteen values input values. now, look important ones: res$n2 optimal sample size phase II res$n3 resulting sample size phase III. see optimal scenario requires 84 participants phase II 166 participants phase III. res$Kappa optimal threshold value go/-go decision rule. see need treatment effect 0.06 phase II order proceed phase III. res$u expected utility program optimal sample size threshold value. case amounts 3259.83, .e expected utility 325 983 000$.","code":"res #>         u Kappa n2  n3   n pgo sProg Delta   K K2  K3 sProg1 sProg2 sProg3 #> 1 3259.83  0.06 84 166 250   1  0.85 0.625 Inf 72 139   0.68   0.17   0.01 #>   steps1 stepm1 stepl1 alpha beta c02 c03    c2   c3   b1   b2    b3 gamma #> 1      0    0.5    0.8  0.05  0.1  15  20 0.675 0.72 3000 8000 10000     0"},{"path":"https://sterniii3.github.io/drugdevelopR/articles/introduction-to-drugdevelopR.html","id":"where-to-go-from-here","dir":"Articles","previous_headings":"","what":"Where to go from here","title":"Introduction to planning phase II and phase III trials with drugdevelopR","text":"tutorial covered drugdevelopR’s basic setting. Luckily, package’s functionality extends multitude different settings. example doesn’t suit needs, can adapt specific setting: Different outcomes: Apply binary endpoints time--event endpoints. Interpreting rest output: Obtain details drug development program. Fixed prior: Model assumed treatment effect prior distribution. parameters: Define custom effect size categories. Put constraints optimization defining maximum costs, total expected sample size program minimum expected probability successful program. Define expected difference treatment effect phase II III. Skip phase II. Complex drug development programs: Adapt situations biased effect estimators, multiple phase III trials, multi-arm trials, multiple endpoints. Parallel computing: faster calculating optimum using parallel computing.","code":""},{"path":"https://sterniii3.github.io/drugdevelopR/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Stella Preussler. Author, maintainer.","code":""},{"path":"https://sterniii3.github.io/drugdevelopR/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Preussler S (2022). drugdevelopR: Utility based optimal phase II/III drug development planning. https://github.com/Sterniii3/drugdevelopR, https://sterniii3.github.io/drugdevelopR/.","code":"@Manual{,   title = {drugdevelopR: Utility based optimal phase II/III drug development planning},   author = {Stella Preussler},   year = {2022},   note = {https://github.com/Sterniii3/drugdevelopR, https://sterniii3.github.io/drugdevelopR/}, }"},{"path":"https://sterniii3.github.io/drugdevelopR/index.html","id":"drugdevelopr-utility-based-optimal-phase-iiiii-drug-development-planning","dir":"","previous_headings":"","what":"Utility based optimal phase II/III drug development planning ","title":"Utility based optimal phase II/III drug development planning ","text":"drugdevelopR package enables plan phase II/III drug development programs optimal sample size allocation go/-go decision rules. assumed true treatment effects can fixed modelled prior distribution. corresponding R Shiny application graphic user interface package thus makes accessible users without prior knowledge R. Fast computing made possible parallel programming. theoretical foundations package laid dissertation “Integrated Planning Pilot Subsequent Confirmatory Study Clinical Research – Finding Optimal Designs Utility-Based Framework” Stella Erdmann Institute Medical Biometry University Heidelberg. package webpage, supply full documentation functions well tutorial getting started drugdevelopR.","code":""},{"path":"https://sterniii3.github.io/drugdevelopR/index.html","id":"installation","dir":"","previous_headings":"","what":"Installation","title":"Utility based optimal phase II/III drug development planning ","text":"Install development version package directly GitHub using following code: access drugdevelopR App via https://web.imbi.uni-heidelberg.de/drugdevelopR/.","code":"if(!require(devtools)) { install.packages(\"devtools\"); require(devtools)}  devtools::install_github(\"Sterniii3/drugdevelopR\")"},{"path":"https://sterniii3.github.io/drugdevelopR/index.html","id":"usage","dir":"","previous_headings":"","what":"Usage","title":"Utility based optimal phase II/III drug development planning ","text":"basic example applying drugdevelopR drug development program normally distributed outcome:","code":"library(drugdevelopR) #> Lade nötiges Paket: mvtnorm #> Lade nötiges Paket: doParallel #> Lade nötiges Paket: foreach #> Lade nötiges Paket: iterators #> Lade nötiges Paket: parallel #> Lade nötiges Paket: msm #> Lade nötiges Paket: cubature # TODO: Fill example here."},{"path":"https://sterniii3.github.io/drugdevelopR/reference/EPsProg23.html","id":null,"dir":"Reference","previous_headings":"","what":"Expected probability of a successful program deciding between two or three phase III trials in a time-to-event setting — EPsProg23","title":"Expected probability of a successful program deciding between two or three phase III trials in a time-to-event setting — EPsProg23","text":"function EPsProg23() calculates expected probability successful program time--event setting. function follows special decision rule order determine whether two three phase III trials conducted. First, two phase III trials performed. Depending success, decision third phase III trial made: trials successful, third phase III trial conducted. one two trials successful trial treatment effect points direction, third phase III trial conducted sample size N3 = N3(ymin), depends assumed minimal clinical relevant effect (ymin). third trial significant level alpha one two trials successful treatment effect points opposite direction none two trials successful, third trial performed drug development development program successful. utility function, lead utility -9999.","code":""},{"path":"https://sterniii3.github.io/drugdevelopR/reference/EPsProg23.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Expected probability of a successful program deciding between two or three phase III trials in a time-to-event setting — EPsProg23","text":"","code":"EPsProg23(HRgo, d2, alpha, beta, w, hr1, hr2, id1, id2, case, size, ymin)"},{"path":"https://sterniii3.github.io/drugdevelopR/reference/EPsProg23.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Expected probability of a successful program deciding between two or three phase III trials in a time-to-event setting — EPsProg23","text":"HRgo threshold value go/-go decision rule d2 total number events phase II alpha significance level beta 1-beta power calculation sample size phase III w weight mixture prior distribution hr1 first assumed true treatment effect HR scale prior distribution hr2 second assumed true treatment effect HR scale prior distribution id1 amount information hr1 terms number events id2 amount information hr2 terms number events case choose case: \"least 1, 2 3 significant trials needed approval\" size size category \"small\", \"medium\" \"large\" ymin assumed minimal clinical relevant effect","code":""},{"path":"https://sterniii3.github.io/drugdevelopR/reference/EPsProg23.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Expected probability of a successful program deciding between two or three phase III trials in a time-to-event setting — EPsProg23","text":"output function EPsProg23() expected probability successful program.","code":""},{"path":"https://sterniii3.github.io/drugdevelopR/reference/EPsProg23.html","id":"last-edited-by","dir":"Reference","previous_headings":"","what":"Last Edited By","title":"Expected probability of a successful program deciding between two or three phase III trials in a time-to-event setting — EPsProg23","text":"Johannes Cepicka","code":""},{"path":"https://sterniii3.github.io/drugdevelopR/reference/EPsProg23.html","id":"last-edit-date","dir":"Reference","previous_headings":"","what":"Last Edit Date","title":"Expected probability of a successful program deciding between two or three phase III trials in a time-to-event setting — EPsProg23","text":"2022-04-23","code":""},{"path":"https://sterniii3.github.io/drugdevelopR/reference/EPsProg23.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Expected probability of a successful program deciding between two or three phase III trials in a time-to-event setting — EPsProg23","text":"","code":"res <- EPsProg23(HRgo = 0.8, d2 = 50,  alpha = 0.025, beta = 0.1,                                    w = 0.3, hr1 =  0.69, hr2 = 0.81,                                    id1 = 280, id2 = 420, case = 2, size = \"small\",                                   ymin = 0.5)"},{"path":"https://sterniii3.github.io/drugdevelopR/reference/EPsProg23_binary.html","id":null,"dir":"Reference","previous_headings":"","what":"Expected probability of a successful program deciding between two or three phase III trials for a binary distributed outcome — EPsProg23_binary","title":"Expected probability of a successful program deciding between two or three phase III trials for a binary distributed outcome — EPsProg23_binary","text":"function EPsProg23_binary() calculates expected probability successful program normally distributed outcome. function follows special decision rule order determine whether two three phase III trials conducted. First, two phase III trials performed. Depending success, decision third phase III trial made: trials successful, third phase III trial conducted. one two trials successful trial treatment effect points direction, third phase III trial conducted sample size N3 = N3(ymin), depends assumed minimal clinical relevant effect (ymin). third trial significant level alpha one two trials successful treatment effect points opposite direction none two trials successful, third trial performed drug development development program successful. utility function, lead utility -9999.","code":""},{"path":"https://sterniii3.github.io/drugdevelopR/reference/EPsProg23_binary.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Expected probability of a successful program deciding between two or three phase III trials for a binary distributed outcome — EPsProg23_binary","text":"","code":"EPsProg23_binary(   RRgo,   n2,   alpha,   beta,   w,   p0,   p11,   p12,   in1,   in2,   case,   size,   ymin )"},{"path":"https://sterniii3.github.io/drugdevelopR/reference/EPsProg23_binary.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Expected probability of a successful program deciding between two or three phase III trials for a binary distributed outcome — EPsProg23_binary","text":"RRgo threshold value go/-go decision rule n2 total sample size phase II; must even number alpha significance level beta 1-beta power calculation sample size phase III w weight mixture prior distribution p0 assumed true rate control group p11 assumed true rate treatment group p12 assumed true rate treatment group in1 amount information p11 terms sample size in2 amount information p12 terms sample size case choose case: \"least 1, 2 3 significant trials needed approval\" size size category \"small\", \"medium\" \"large\" ymin assumed minimal clinical relevant effect","code":""},{"path":"https://sterniii3.github.io/drugdevelopR/reference/EPsProg23_binary.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Expected probability of a successful program deciding between two or three phase III trials for a binary distributed outcome — EPsProg23_binary","text":"output function EPsProg23_binary() expected probability successful program.","code":""},{"path":"https://sterniii3.github.io/drugdevelopR/reference/EPsProg23_binary.html","id":"last-edited-by","dir":"Reference","previous_headings":"","what":"Last Edited By","title":"Expected probability of a successful program deciding between two or three phase III trials for a binary distributed outcome — EPsProg23_binary","text":"Johannes Cepicka","code":""},{"path":"https://sterniii3.github.io/drugdevelopR/reference/EPsProg23_binary.html","id":"last-edit-date","dir":"Reference","previous_headings":"","what":"Last Edit Date","title":"Expected probability of a successful program deciding between two or three phase III trials for a binary distributed outcome — EPsProg23_binary","text":"2022-04-23","code":""},{"path":"https://sterniii3.github.io/drugdevelopR/reference/EPsProg23_binary.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Expected probability of a successful program deciding between two or three phase III trials for a binary distributed outcome — EPsProg23_binary","text":"","code":"res <- EPsProg23_binary(RRgo = 0.8, n2 = 50,  alpha = 0.025, beta = 0.1,                                   w = 0.6,  p0 = 0.3, p11 =  0.3, p12 = 0.5,                                   in1 = 300, in2 = 600, case = 2, size = \"small\",                                  ymin = 0.5)"},{"path":"https://sterniii3.github.io/drugdevelopR/reference/EPsProg23_normal.html","id":null,"dir":"Reference","previous_headings":"","what":"Expected probability of a successful program deciding between two or three phase III trials for a normally distributed outcome — EPsProg23_normal","title":"Expected probability of a successful program deciding between two or three phase III trials for a normally distributed outcome — EPsProg23_normal","text":"function EPsProg23_normal() calculates expected probability successful program normally distributed outcome. function follows special decision rule order determine whether two three phase III trials conducted. First, two phase III trials performed. Depending success, decision third phase III trial made: trials successful, third phase III trial conducted. one two trials successful trial treatment effect points direction, third phase III trial conducted sample size N3 = N3(ymin), depends assumed minimal clinical relevant effect (ymin). third trial significant level alpha one two trials successful treatment effect points opposite direction none two trials successful, third trial performed drug development development program successful. utility function, lead utility -9999.","code":""},{"path":"https://sterniii3.github.io/drugdevelopR/reference/EPsProg23_normal.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Expected probability of a successful program deciding between two or three phase III trials for a normally distributed outcome — EPsProg23_normal","text":"","code":"EPsProg23_normal(   kappa,   n2,   alpha,   beta,   w,   Delta1,   Delta2,   in1,   in2,   a,   b,   case,   size,   ymin )"},{"path":"https://sterniii3.github.io/drugdevelopR/reference/EPsProg23_normal.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Expected probability of a successful program deciding between two or three phase III trials for a normally distributed outcome — EPsProg23_normal","text":"kappa threshold value go/-go decision rule n2 total sample size phase II; must even number alpha significance level beta type II error rate; means 1 - beta power calculating sample size phase III w weight mixture prior distribution Delta1 assumed true treatment effect standardized difference means Delta2 assumed true treatment effect standardized difference means in1 amount information Delta1 terms sample size in2 amount information Delta2 terms sample size lower boundary truncation b upper boundary truncation case number significant trials needed approval; possible values 2 3 function size effect size category; possible values \"small\", \"medium\", \"large\" \"\" ymin assumed minimal clinical relevant effect","code":""},{"path":"https://sterniii3.github.io/drugdevelopR/reference/EPsProg23_normal.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Expected probability of a successful program deciding between two or three phase III trials for a normally distributed outcome — EPsProg23_normal","text":"output function EPsProg23_normal() expected probability successful program.","code":""},{"path":"https://sterniii3.github.io/drugdevelopR/reference/EPsProg23_normal.html","id":"last-edited-by","dir":"Reference","previous_headings":"","what":"Last Edited By","title":"Expected probability of a successful program deciding between two or three phase III trials for a normally distributed outcome — EPsProg23_normal","text":"Johannes Cepicka, Lukas D. Sauer","code":""},{"path":"https://sterniii3.github.io/drugdevelopR/reference/EPsProg23_normal.html","id":"last-edit-date","dir":"Reference","previous_headings":"","what":"Last Edit Date","title":"Expected probability of a successful program deciding between two or three phase III trials for a normally distributed outcome — EPsProg23_normal","text":"2022-05-06","code":""},{"path":"https://sterniii3.github.io/drugdevelopR/reference/EPsProg23_normal.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Expected probability of a successful program deciding between two or three phase III trials for a normally distributed outcome — EPsProg23_normal","text":"","code":"res <- EPsProg23_normal(kappa = 0.1, n2 = 50, alpha = 0.025, beta = 0.1, w = 0.3,                                  Delta1 = 0.375, Delta2 = 0.625, in1 = 300, in2 = 600,                                   a = 0.25, b = 0.75,                                   case = 2, size = \"small\", ymin = 0.5)"},{"path":"https://sterniii3.github.io/drugdevelopR/reference/EPsProg_bias_binary.html","id":null,"dir":"Reference","previous_headings":"","what":"Expected probability of a successful program for bias adjustment programs with binary distributed outcomes — EPsProg_bias_binary","title":"Expected probability of a successful program for bias adjustment programs with binary distributed outcomes — EPsProg_bias_binary","text":"discount overoptimistic results phase II calculating optimal sample size phase III, necessary use following functions, describe specific case: EPsProg_binary_L(): calculates expected probability successful additive adjustment factor (.e adjust lower bound one-sided confidence interval), however go-decision affected bias adjustment EPsProg_binary_L2(): calculates expected probability successful additive adjustment factor (.e adjust lower bound one-sided confidence interval) go-decision also affected bias adjustment EPsProg_binary_R(): calculates expected probability successful multiplicative adjustment factor (.e. use estimate retention factor), however go-decision affected bias adjustment EPsProg_binary_R2(): calculates expected probability successful multiplicative adjustment factor (.e. use estimate retention factor) go-decision also affected bias adjustment","code":""},{"path":"https://sterniii3.github.io/drugdevelopR/reference/EPsProg_bias_binary.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Expected probability of a successful program for bias adjustment programs with binary distributed outcomes — EPsProg_bias_binary","text":"","code":"EPsProg_binary_L(   RRgo,   n2,   Adj,   alpha,   beta,   step1,   step2,   p0,   w,   p11,   p12,   in1,   in2,   fixed )  EPsProg_binary_L2(   RRgo,   n2,   Adj,   alpha,   beta,   step1,   step2,   p0,   w,   p11,   p12,   in1,   in2,   fixed )  EPsProg_binary_R(   RRgo,   n2,   Adj,   alpha,   beta,   step1,   step2,   p0,   w,   p11,   p12,   in1,   in2,   fixed )  EPsProg_binary_R2(   RRgo,   n2,   Adj,   alpha,   beta,   step1,   step2,   p0,   w,   p11,   p12,   in1,   in2,   fixed )"},{"path":"https://sterniii3.github.io/drugdevelopR/reference/EPsProg_bias_binary.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Expected probability of a successful program for bias adjustment programs with binary distributed outcomes — EPsProg_bias_binary","text":"RRgo threshold value go/-go decision rule n2 total sample size phase II; must even number Adj adjustment parameter alpha significance level beta 1-beta power calculation sample size phase III step1 lower boundary effect size step2 upper boundary effect size p0 assumed true rate control group w weight mixture prior distribution p11 assumed true rate treatment group p12 assumed true rate treatment group in1 amount information p11 terms sample size in2 amount information p12 terms sample size fixed choose true treatment effects fixed random, TRUE p11 used fixed effect","code":""},{"path":"https://sterniii3.github.io/drugdevelopR/reference/EPsProg_bias_binary.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Expected probability of a successful program for bias adjustment programs with binary distributed outcomes — EPsProg_bias_binary","text":"output functions EPsProg_binary_L(), EPsProg_binary_L2(), EPsProg_binary_R() EPsProg_binary_R2() expected probability successful program.","code":""},{"path":"https://sterniii3.github.io/drugdevelopR/reference/EPsProg_bias_binary.html","id":"last-edited-by","dir":"Reference","previous_headings":"","what":"Last Edited By","title":"Expected probability of a successful program for bias adjustment programs with binary distributed outcomes — EPsProg_bias_binary","text":"Johannes Cepicka","code":""},{"path":"https://sterniii3.github.io/drugdevelopR/reference/EPsProg_bias_binary.html","id":"last-edit-date","dir":"Reference","previous_headings":"","what":"Last Edit Date","title":"Expected probability of a successful program for bias adjustment programs with binary distributed outcomes — EPsProg_bias_binary","text":"2022-04-23","code":""},{"path":"https://sterniii3.github.io/drugdevelopR/reference/EPsProg_bias_binary.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Expected probability of a successful program for bias adjustment programs with binary distributed outcomes — EPsProg_bias_binary","text":"","code":"res <- EPsProg_binary_L(RRgo = 0.8, n2 = 50, Adj = 0,                                   alpha = 0.025, beta = 0.1,                                   step1 = 1, step2 = 0.95, p0 = 0.6,  w = 0.3,                                  p11 =  0.3, p12 = 0.5, in1 = 300, in2 = 600,                                   fixed = FALSE)           res <- EPsProg_binary_L2(RRgo = 0.8, n2 = 50, Adj = 0,                                   alpha = 0.025, beta = 0.1,                                   step1 = 1, step2 = 0.95, p0 = 0.6,  w = 0.3,                                  p11 =  0.3, p12 = 0.5, in1 = 300, in2 = 600,                                   fixed = FALSE)           res <- EPsProg_binary_R(RRgo = 0.8, n2 = 50, Adj = 1,                                   alpha = 0.025, beta = 0.1,                                   step1 = 1, step2 = 0.95, p0 = 0.6,  w = 0.3,                                  p11 =  0.3, p12 = 0.5, in1 = 300, in2 = 600,                                   fixed = FALSE)           res <- EPsProg_binary_R2(RRgo = 0.8, n2 = 50, Adj = 1,                                   alpha = 0.025, beta = 0.1,                                   step1 = 1, step2 = 0.95, p0 = 0.6,  w = 0.3,                                  p11 =  0.3, p12 = 0.5, in1 = 300, in2 = 600,                                   fixed = FALSE)"},{"path":"https://sterniii3.github.io/drugdevelopR/reference/EPsProg_bias_normal.html","id":null,"dir":"Reference","previous_headings":"","what":"Expected probability of a successful program for bias adjustment programs with normally distributed outcomes — EPsProg_bias_normal","title":"Expected probability of a successful program for bias adjustment programs with normally distributed outcomes — EPsProg_bias_normal","text":"discount overoptimistic results phase II calculating optimal sample size phase III, necessary use following functions, describe specific case: EPsProg_normal_L(): calculates expected probability successful additive adjustment factor (.e adjust lower bound one-sided confidence interval), however go-decision affected bias adjustment EPsProg_normal_L2(): calculates expected probability successful additive adjustment factor (.e adjust lower bound one-sided confidence interval) go-decision also affected bias adjustment EPsProg_normal_R(): calculates expected probability successful multiplicative adjustment factor (.e. use estimate retention factor), however go-decision affected bias adjustment EPsProg_normal_R2(): calculates expected probability successful multiplicative adjustment factor (.e. use estimate retention factor) go-decision also affected bias adjustment","code":""},{"path":"https://sterniii3.github.io/drugdevelopR/reference/EPsProg_bias_normal.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Expected probability of a successful program for bias adjustment programs with normally distributed outcomes — EPsProg_bias_normal","text":"","code":"EPsProg_normal_L(   kappa,   n2,   Adj,   alpha,   beta,   step1,   step2,   w,   Delta1,   Delta2,   in1,   in2,   a,   b,   fixed )  EPsProg_normal_L2(   kappa,   n2,   Adj,   alpha,   beta,   step1,   step2,   w,   Delta1,   Delta2,   in1,   in2,   a,   b,   fixed )  EPsProg_normal_R(   kappa,   n2,   Adj,   alpha,   beta,   step1,   step2,   w,   Delta1,   Delta2,   in1,   in2,   a,   b,   fixed )  EPsProg_normal_R2(   kappa,   n2,   Adj,   alpha,   beta,   step1,   step2,   w,   Delta1,   Delta2,   in1,   in2,   a,   b,   fixed )"},{"path":"https://sterniii3.github.io/drugdevelopR/reference/EPsProg_bias_normal.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Expected probability of a successful program for bias adjustment programs with normally distributed outcomes — EPsProg_bias_normal","text":"kappa threshold value go/-go decision rule n2 total sample size phase II; must even number Adj adjustment parameter alpha significance level beta 1-beta power calculation sample size phase III step1 lower boundary effect size step2 upper boundary effect size w weight mixture prior distribution Delta1 assumed true treatment effect standardized difference means Delta2 assumed true treatment effect standardized difference means in1 amount information Delta1 terms sample size in2 amount information Delta2 terms sample size lower boundary truncation b upper boundary truncation fixed choose true treatment effects fixed random, TRUE Delta1 used fixed effect","code":""},{"path":"https://sterniii3.github.io/drugdevelopR/reference/EPsProg_bias_normal.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Expected probability of a successful program for bias adjustment programs with normally distributed outcomes — EPsProg_bias_normal","text":"output functions EPsProg_normal_L(), EPsProg_normal_L2(), EPsProg_normal_R() EPsProg_normal_R2() expected probability successful program.","code":""},{"path":"https://sterniii3.github.io/drugdevelopR/reference/EPsProg_bias_normal.html","id":"last-edited-by","dir":"Reference","previous_headings":"","what":"Last Edited By","title":"Expected probability of a successful program for bias adjustment programs with normally distributed outcomes — EPsProg_bias_normal","text":"Johannes Cepicka","code":""},{"path":"https://sterniii3.github.io/drugdevelopR/reference/EPsProg_bias_normal.html","id":"last-edit-date","dir":"Reference","previous_headings":"","what":"Last Edit Date","title":"Expected probability of a successful program for bias adjustment programs with normally distributed outcomes — EPsProg_bias_normal","text":"2022-04-23","code":""},{"path":"https://sterniii3.github.io/drugdevelopR/reference/EPsProg_bias_normal.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Expected probability of a successful program for bias adjustment programs with normally distributed outcomes — EPsProg_bias_normal","text":"","code":"res <- EPsProg_normal_L(kappa = 0.1, n2 = 50, Adj = 0,                                   alpha = 0.025, beta = 0.1, w = 0.3,                                  step1 = 0, step2 = 0.5,                                  Delta1 = 0.375, Delta2 = 0.625,                                   in1 = 300, in2 = 600,                                   a = 0.25, b = 0.75, fixed = FALSE)           res <- EPsProg_normal_L2(kappa = 0.1, n2 = 50, Adj = 0,                                   alpha = 0.025, beta = 0.1, w = 0.3,                                  step1 = 0, step2 = 0.5,                                  Delta1 = 0.375, Delta2 = 0.625,                                   in1 = 300, in2 = 600,                                   a = 0.25, b = 0.75, fixed = FALSE)           res <- EPsProg_normal_R(kappa = 0.1, n2 = 50, Adj = 1,                                   alpha = 0.025, beta = 0.1, w = 0.3,                                  step1 = 0, step2 = 0.5,                                  Delta1 = 0.375, Delta2 = 0.625,                                   in1 = 300, in2 = 600,                                   a = 0.25, b = 0.75, fixed = FALSE)           res <- EPsProg_normal_R2(kappa = 0.1, n2 = 50, Adj = 1,                                   alpha = 0.025, beta = 0.1, w = 0.3,                                  step1 = 0, step2 = 0.5,                                  Delta1 = 0.375, Delta2 = 0.625,                                   in1 = 300, in2 = 600,                                   a = 0.25, b = 0.75, fixed = FALSE)"},{"path":"https://sterniii3.github.io/drugdevelopR/reference/EPsProg_multiple_normal.html","id":null,"dir":"Reference","previous_headings":"","what":"Expected probability of a successful program for multiple endpoints and normally distributed outcomes — EPsProg_multiple_normal","title":"Expected probability of a successful program for multiple endpoints and normally distributed outcomes — EPsProg_multiple_normal","text":"function calculates probability drug development program successful. Successful defined endpoints showing statistically significant positive treatment effect phase III.","code":""},{"path":"https://sterniii3.github.io/drugdevelopR/reference/EPsProg_multiple_normal.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Expected probability of a successful program for multiple endpoints and normally distributed outcomes — EPsProg_multiple_normal","text":"","code":"EPsProg_multiple_normal(   kappa,   n2,   alpha,   beta,   Delta1,   Delta2,   sigma1,   sigma2,   step11,   step12,   step21,   step22,   in1,   in2,   fixed,   rho )"},{"path":"https://sterniii3.github.io/drugdevelopR/reference/EPsProg_multiple_normal.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Expected probability of a successful program for multiple endpoints and normally distributed outcomes — EPsProg_multiple_normal","text":"kappa threshold value go/-go decision rule; n2 total sample size phase II; must even number alpha significance level beta 1-beta power calculation sample size phase III Delta1 assumed true treatment effect standardized difference means Delta2 assumed true treatment effect standardized difference means sigma1 standard deviation first endpoint sigma2 standard deviation second endpoint step11 lower boundary effect size first endpoint step12 lower boundary effect size second endpoint step21 upper boundary effect size first endpoint step22 upper boundary effect size second endpoint in1 amount information Delta1 terms sample size in2 amount information Delta2 terms sample size fixed choose true treatment effects fixed random, TRUE Delta1 used fixed effect rho correlation two endpoints","code":""},{"path":"https://sterniii3.github.io/drugdevelopR/reference/EPsProg_multiple_normal.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Expected probability of a successful program for multiple endpoints and normally distributed outcomes — EPsProg_multiple_normal","text":"output function EPsProg_multiple_normal() expected probability successfull program, going phase III.","code":""},{"path":"https://sterniii3.github.io/drugdevelopR/reference/EPsProg_multiple_normal.html","id":"last-edited-by","dir":"Reference","previous_headings":"","what":"Last Edited By","title":"Expected probability of a successful program for multiple endpoints and normally distributed outcomes — EPsProg_multiple_normal","text":"Johannes Cepicka","code":""},{"path":"https://sterniii3.github.io/drugdevelopR/reference/EPsProg_multiple_normal.html","id":"last-edit-date","dir":"Reference","previous_headings":"","what":"Last Edit Date","title":"Expected probability of a successful program for multiple endpoints and normally distributed outcomes — EPsProg_multiple_normal","text":"2022-04-23","code":""},{"path":"https://sterniii3.github.io/drugdevelopR/reference/EPsProg_multiple_normal.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Expected probability of a successful program for multiple endpoints and normally distributed outcomes — EPsProg_multiple_normal","text":"","code":"res <- EPsProg_multiple_normal(kappa = 0.1, n2 = 50, alpha = 0.025, beta = 0.1,                                Delta1 = 0.375, Delta2 = 0.625, sigma1 = 8, sigma2 = 4,                                step11 = 0, step12 = 0, step21 = 0.5, step22 = 0.5,                                 in1 = 300, in2 = 600, fixed = TRUE, rho = 0.3)"},{"path":"https://sterniii3.github.io/drugdevelopR/reference/EPsProg_multiple_tte.html","id":null,"dir":"Reference","previous_headings":"","what":"Expected probability of a successful program for multiple endpoints in a time-to-event setting — EPsProg_multiple_tte","title":"Expected probability of a successful program for multiple endpoints in a time-to-event setting — EPsProg_multiple_tte","text":"function calculates probability drug development program successful. Successful defined least one endpoint showing statistically significant positive treatment effect phase III.","code":""},{"path":"https://sterniii3.github.io/drugdevelopR/reference/EPsProg_multiple_tte.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Expected probability of a successful program for multiple endpoints in a time-to-event setting — EPsProg_multiple_tte","text":"","code":"EPsProg_multiple_tte(   HRgo,   n2,   alpha,   beta,   ec,   hr1,   hr2,   id1,   id2,   step1,   step2,   fixed,   rho )"},{"path":"https://sterniii3.github.io/drugdevelopR/reference/EPsProg_multiple_tte.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Expected probability of a successful program for multiple endpoints in a time-to-event setting — EPsProg_multiple_tte","text":"HRgo threshold value go/-go decision rule; n2 total sample size phase II; must even number alpha significance level beta 1-beta power calculation sample size phase III ec control arm event rate phase II III hr1 assumed true treatment effect HR scale treatment 1 hr2 assumed true treatment effect HR scale treatment 2 id1 amount information hr1 terms sample size id2 amount information hr2 terms sample size step1 lower boundary effect size step2 upper boundary effect size fixed choose true treatment effects fixed random, TRUE hr1 used fixed effect rho correlation two endpoints","code":""},{"path":"https://sterniii3.github.io/drugdevelopR/reference/EPsProg_multiple_tte.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Expected probability of a successful program for multiple endpoints in a time-to-event setting — EPsProg_multiple_tte","text":"output function EPsProg_multiple_tte() expected probability successful program, going phase III.","code":""},{"path":"https://sterniii3.github.io/drugdevelopR/reference/EPsProg_multiple_tte.html","id":"last-edited-by","dir":"Reference","previous_headings":"","what":"Last Edited By","title":"Expected probability of a successful program for multiple endpoints in a time-to-event setting — EPsProg_multiple_tte","text":"Johannes Cepicka","code":""},{"path":"https://sterniii3.github.io/drugdevelopR/reference/EPsProg_multiple_tte.html","id":"last-edit-date","dir":"Reference","previous_headings":"","what":"Last Edit Date","title":"Expected probability of a successful program for multiple endpoints in a time-to-event setting — EPsProg_multiple_tte","text":"2022-04-23","code":""},{"path":"https://sterniii3.github.io/drugdevelopR/reference/EPsProg_multiple_tte.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Expected probability of a successful program for multiple endpoints in a time-to-event setting — EPsProg_multiple_tte","text":"","code":"res <- EPsProg_multiple_tte(HRgo = 0.8, n2 = 50, alpha = 0.025, beta = 0.1,                                ec = 0.6, hr1 = 0.75, hr2 = 0.80,                                id1 = 300, id2 = 600,                                 step1 = 1, step2 = 0.95,                                fixed = TRUE, rho = 0.3)"},{"path":"https://sterniii3.github.io/drugdevelopR/reference/EPsProg_multitrial.html","id":null,"dir":"Reference","previous_headings":"","what":"Expected probability of a successful program for multitrial programs in a time-to-event setting — EPsProg_multitrial","title":"Expected probability of a successful program for multitrial programs in a time-to-event setting — EPsProg_multitrial","text":"functions calculate expected probability successful program given parameters. function represents specific strategy, e.g. function EpsProg3() calculates expected probability three phase III trials performed. parameter case specifies many trials successful, .e. many trials show significantly relevant positive treatment effect.","code":""},{"path":"https://sterniii3.github.io/drugdevelopR/reference/EPsProg_multitrial.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Expected probability of a successful program for multitrial programs in a time-to-event setting — EPsProg_multitrial","text":"","code":"EPsProg2(HRgo, d2, alpha, beta, w, hr1, hr2, id1, id2, case, size, fixed)  EPsProg3(HRgo, d2, alpha, beta, w, hr1, hr2, id1, id2, case, size, fixed)  EPsProg4(HRgo, d2, alpha, beta, w, hr1, hr2, id1, id2, case, size, fixed)"},{"path":"https://sterniii3.github.io/drugdevelopR/reference/EPsProg_multitrial.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Expected probability of a successful program for multitrial programs in a time-to-event setting — EPsProg_multitrial","text":"HRgo threshold value go/-go decision rule d2 total number events phase II alpha significance level beta 1-beta power calculation sample size phase III w weight mixture prior distribution hr1 first assumed true treatment effect HR scale prior distribution hr2 second assumed true treatment effect HR scale prior distribution id1 amount information hr1 terms number events id2 amount information hr2 terms number events case choose case: \"least 1, 2 3 significant trials needed approval\" size size category \"small\", \"medium\" \"large\" fixed choose true treatment effects fixed random","code":""},{"path":"https://sterniii3.github.io/drugdevelopR/reference/EPsProg_multitrial.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Expected probability of a successful program for multitrial programs in a time-to-event setting — EPsProg_multitrial","text":"output function EPsProg2(), EPsProg3() EPsProg4() expected probability successful program performing several phase III trials (2, 3 4 respectively)","code":""},{"path":"https://sterniii3.github.io/drugdevelopR/reference/EPsProg_multitrial.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Expected probability of a successful program for multitrial programs in a time-to-event setting — EPsProg_multitrial","text":"following cases can investigated software: Two phase III trials Case 1: Strategy 1/2; least one trial significant, treatment effect one least showing direction Case 2: Strategy 2/2; trials significant Three phase III trials Case 2: Strategy 2/3; least two trials significant, treatment effect one least showing direction Case 3: Strategy 3/3; trials significant Four phase III trials Case 3: Strategy 3/4; least three trials significant, treatment effect one least showing direction","code":""},{"path":"https://sterniii3.github.io/drugdevelopR/reference/EPsProg_multitrial.html","id":"last-edited-by","dir":"Reference","previous_headings":"","what":"Last Edited By","title":"Expected probability of a successful program for multitrial programs in a time-to-event setting — EPsProg_multitrial","text":"Johannes Cepicka","code":""},{"path":"https://sterniii3.github.io/drugdevelopR/reference/EPsProg_multitrial.html","id":"last-edit-date","dir":"Reference","previous_headings":"","what":"Last Edit Date","title":"Expected probability of a successful program for multitrial programs in a time-to-event setting — EPsProg_multitrial","text":"2022-04-23","code":""},{"path":"https://sterniii3.github.io/drugdevelopR/reference/EPsProg_multitrial.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Expected probability of a successful program for multitrial programs in a time-to-event setting — EPsProg_multitrial","text":"","code":"res <- EPsProg2(HRgo = 0.8, d2 = 50,  alpha = 0.025, beta = 0.1,                                   w = 0.3, hr1 =  0.69, hr2 = 0.81,                                   id1 = 210, id2 = 420, case = 2, size = \"small\",                                  fixed = FALSE)           res <- EPsProg3(HRgo = 0.8, d2 = 50,  alpha = 0.025, beta = 0.1,                                   w = 0.3, hr1 =  0.69, hr2 = 0.81,                                   id1 = 210, id2 = 420, case = 2, size = \"small\",                                  fixed = TRUE)           res <- EPsProg4(HRgo = 0.8, d2 = 50,  alpha = 0.025, beta = 0.1,                                   w = 0.3, hr1 =  0.69, hr2 = 0.81,                                   id1 = 210, id2 = 420, case = 3, size = \"small\",                                  fixed = TRUE)"},{"path":"https://sterniii3.github.io/drugdevelopR/reference/EPsProg_multitrial_binary.html","id":null,"dir":"Reference","previous_headings":"","what":"Expected probability of a successful program for multitrial programs with binary distributed outcomes — EPsProg_multitrial_binary","title":"Expected probability of a successful program for multitrial programs with binary distributed outcomes — EPsProg_multitrial_binary","text":"functions calculate expected probability successful program given parameters. function represents specific strategy, e.g. function EpsProg3_binary() calculates expected probability three phase III trials performed. parameter case specifies many trials successful, .e. many trials show significantly relevant positive treatment effect.","code":""},{"path":"https://sterniii3.github.io/drugdevelopR/reference/EPsProg_multitrial_binary.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Expected probability of a successful program for multitrial programs with binary distributed outcomes — EPsProg_multitrial_binary","text":"","code":"EPsProg2_binary(   RRgo,   n2,   alpha,   beta,   p0,   w,   p11,   p12,   in1,   in2,   case,   size,   fixed )  EPsProg3_binary(   RRgo,   n2,   alpha,   beta,   p0,   w,   p11,   p12,   in1,   in2,   case,   size,   fixed )  EPsProg4_binary(   RRgo,   n2,   alpha,   beta,   p0,   w,   p11,   p12,   in1,   in2,   case,   size,   fixed )"},{"path":"https://sterniii3.github.io/drugdevelopR/reference/EPsProg_multitrial_binary.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Expected probability of a successful program for multitrial programs with binary distributed outcomes — EPsProg_multitrial_binary","text":"RRgo threshold value go/-go decision rule n2 total sample size phase II; must even number alpha significance level beta 1-beta power calculation sample size phase III p0 assumed true rate control group w weight mixture prior distribution p11 assumed true rate treatment group p12 assumed true rate treatment group in1 amount information p11 terms sample size in2 amount information p12 terms sample size case choose case: \"least 1, 2 3 significant trials needed approval\" size size category \"small\", \"medium\" \"large\" fixed choose true treatment effects fixed random","code":""},{"path":"https://sterniii3.github.io/drugdevelopR/reference/EPsProg_multitrial_binary.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Expected probability of a successful program for multitrial programs with binary distributed outcomes — EPsProg_multitrial_binary","text":"output function EPsProg2_binary(), EPsProg3_binary() EPsProg4_binary() expected probability successful program performing several phase III trials (2, 3 4 respectively)","code":""},{"path":"https://sterniii3.github.io/drugdevelopR/reference/EPsProg_multitrial_binary.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Expected probability of a successful program for multitrial programs with binary distributed outcomes — EPsProg_multitrial_binary","text":"following cases can investigated software: Two phase III trials Case 1: Strategy 1/2; least one trial significant, treatment effect one least showing direction Case 2: Strategy 2/2; trials significant Three phase III trials Case 2: Strategy 2/3; least two trials significant, treatment effect one least showing direction Case 3: Strategy 3/3; trials significant Four phase III trials Case 3: Strategy 3/4; least three trials significant, treatment effect one least showing direction","code":""},{"path":"https://sterniii3.github.io/drugdevelopR/reference/EPsProg_multitrial_binary.html","id":"last-edited-by","dir":"Reference","previous_headings":"","what":"Last Edited By","title":"Expected probability of a successful program for multitrial programs with binary distributed outcomes — EPsProg_multitrial_binary","text":"Johannes Cepicka","code":""},{"path":"https://sterniii3.github.io/drugdevelopR/reference/EPsProg_multitrial_binary.html","id":"last-edit-date","dir":"Reference","previous_headings":"","what":"Last Edit Date","title":"Expected probability of a successful program for multitrial programs with binary distributed outcomes — EPsProg_multitrial_binary","text":"2022-04-23","code":""},{"path":"https://sterniii3.github.io/drugdevelopR/reference/EPsProg_multitrial_binary.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Expected probability of a successful program for multitrial programs with binary distributed outcomes — EPsProg_multitrial_binary","text":"","code":"res <- EPsProg2_binary(RRgo = 0.8, n2 = 50,  alpha = 0.025, beta = 0.1,                                   p0 = 0.6,  w = 0.3, p11 =  0.3, p12 = 0.5,                                   in1 = 300, in2 = 600, case = 2, size = \"small\",                                  fixed = FALSE)           res <- EPsProg3_binary(RRgo = 0.8, n2 = 50,  alpha = 0.025, beta = 0.1,                                   p0 = 0.6,  w = 0.3, p11 =  0.3, p12 = 0.5,                                   in1 = 300, in2 = 600, case = 2, size = \"small\",                                  fixed = FALSE)           res <- EPsProg4_binary(RRgo = 0.8, n2 = 50,  alpha = 0.025, beta = 0.1,                                   p0 = 0.6,  w = 0.3, p11 =  0.3, p12 = 0.5,                                   in1 = 300, in2 = 600, case = 3, size = \"small\",                                  fixed = FALSE)"},{"path":"https://sterniii3.github.io/drugdevelopR/reference/EPsProg_multitrial_normal.html","id":null,"dir":"Reference","previous_headings":"","what":"Expected probability of a successful program for multitrial programs with normally distributed outcomes — EPsProg_multitrial_normal","title":"Expected probability of a successful program for multitrial programs with normally distributed outcomes — EPsProg_multitrial_normal","text":"functions calculate expected probability successful program given parameters. function represents specific strategy, e.g. function EpsProg3_normal() calculates expected probability three phase III trials performed. parameter case specifies many trials successful, .e. many trials show significantly relevant positive treatment effect.","code":""},{"path":"https://sterniii3.github.io/drugdevelopR/reference/EPsProg_multitrial_normal.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Expected probability of a successful program for multitrial programs with normally distributed outcomes — EPsProg_multitrial_normal","text":"","code":"EPsProg2_normal(   kappa,   n2,   alpha,   beta,   w,   Delta1,   Delta2,   in1,   in2,   a,   b,   case,   size,   fixed )  EPsProg3_normal(   kappa,   n2,   alpha,   beta,   w,   Delta1,   Delta2,   in1,   in2,   a,   b,   case,   size,   fixed )  EPsProg4_normal(   kappa,   n2,   alpha,   beta,   w,   Delta1,   Delta2,   in1,   in2,   a,   b,   case,   size,   fixed )"},{"path":"https://sterniii3.github.io/drugdevelopR/reference/EPsProg_multitrial_normal.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Expected probability of a successful program for multitrial programs with normally distributed outcomes — EPsProg_multitrial_normal","text":"kappa threshold value go/-go decision rule n2 total sample size phase II; must even number alpha significance level beta 1-beta power calculation sample size phase III w weight mixture prior distribution Delta1 assumed true treatment effect standardized difference means Delta2 assumed true treatment effect standardized difference means in1 amount information Delta1 terms sample size in2 amount information Delta2 terms sample size lower boundary truncation b upper boundary truncation case choose case: \"least 1, 2 3 significant trials needed approval\" size size category \"small\", \"medium\" \"large\" fixed choose true treatment effects fixed random","code":""},{"path":"https://sterniii3.github.io/drugdevelopR/reference/EPsProg_multitrial_normal.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Expected probability of a successful program for multitrial programs with normally distributed outcomes — EPsProg_multitrial_normal","text":"output function EPsProg2_normal(), EPsProg3_normal() EPsProg4_normal() expected probability successful program performing several phase III trials (2, 3 4 respectively).","code":""},{"path":"https://sterniii3.github.io/drugdevelopR/reference/EPsProg_multitrial_normal.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Expected probability of a successful program for multitrial programs with normally distributed outcomes — EPsProg_multitrial_normal","text":"following cases can investigated software: Two phase III trials Case 1: Strategy 1/2; least one trial significant, treatment effect one least showing direction Case 2: Strategy 2/2; trials significant Three phase III trials Case 2: Strategy 2/3; least two trials significant, treatment effect one least showing direction Case 3: Strategy 3/3; trials significant Four phase III trials Case 3: Strategy 3/4; least three trials significant, treatment effect one least showing direction","code":""},{"path":"https://sterniii3.github.io/drugdevelopR/reference/EPsProg_multitrial_normal.html","id":"last-edited-by","dir":"Reference","previous_headings":"","what":"Last Edited By","title":"Expected probability of a successful program for multitrial programs with normally distributed outcomes — EPsProg_multitrial_normal","text":"Johannes Cepicka","code":""},{"path":"https://sterniii3.github.io/drugdevelopR/reference/EPsProg_multitrial_normal.html","id":"last-edit-date","dir":"Reference","previous_headings":"","what":"Last Edit Date","title":"Expected probability of a successful program for multitrial programs with normally distributed outcomes — EPsProg_multitrial_normal","text":"2022-04-23","code":""},{"path":"https://sterniii3.github.io/drugdevelopR/reference/EPsProg_multitrial_normal.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Expected probability of a successful program for multitrial programs with normally distributed outcomes — EPsProg_multitrial_normal","text":"","code":"res <- EPsProg2_normal(kappa = 0.1, n2 = 50, alpha = 0.025, beta = 0.1, w = 0.3,                                  Delta1 = 0.375, Delta2 = 0.625, in1 = 300, in2 = 600,                                   a = 0.25, b = 0.75,                                   case = 2, size = \"small\", fixed = FALSE)           res <- EPsProg3_normal(kappa = 0.1, n2 = 50, alpha = 0.025, beta = 0.1, w = 0.3,                                  Delta1 = 0.375, Delta2 = 0.625, in1 = 300, in2 = 600,                                   a = 0.25, b = 0.75,                                   case = 2, size = \"small\", fixed = TRUE)           res <- EPsProg4_normal(kappa = 0.1, n2 = 50, alpha = 0.025, beta = 0.1, w = 0.3,                                  Delta1 = 0.375, Delta2 = 0.625, in1 = 300, in2 = 600,                                   a = 0.25, b = 0.75,                                   case = 3, size = \"small\", fixed = TRUE)"},{"path":"https://sterniii3.github.io/drugdevelopR/reference/En3_bias_binary.html","id":null,"dir":"Reference","previous_headings":"","what":"Expected sample size for phase III for bias adjustment programs and binary distributed outcomes — En3_bias_binary","title":"Expected sample size for phase III for bias adjustment programs and binary distributed outcomes — En3_bias_binary","text":"discount overoptimistic results phase II calculating optimal sample size phase III, necessary use functions En3_binary_L(), En3_binary_L2(), En3_binary_R() En3_binary_R2(). function describes specific case: En3_binary_L(): calculates optimal sample size additive adjustment factor (.e adjust lower bound one-sided confidence interval), however go-decision affected bias adjustment En3_binary_L2(): calculates optimal sample size additive adjustment factor (.e adjust lower bound one-sided confidence interval) go-decision also affected bias adjustment En3_binary_R(): calculates optimal sample size multiplicative adjustment factor (.e. use estimate retention factor), however go-decision affected bias adjustment En3_binary_R2(): calculates optimal sample size multiplicative adjustment factor (.e. use estimate retention factor) go-decision also affected bias adjustment","code":""},{"path":"https://sterniii3.github.io/drugdevelopR/reference/En3_bias_binary.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Expected sample size for phase III for bias adjustment programs and binary distributed outcomes — En3_bias_binary","text":"","code":"En3_binary_L(RRgo, n2, Adj, alpha, beta, p0, w, p11, p12, in1, in2, fixed)  En3_binary_L2(RRgo, n2, Adj, alpha, beta, p0, w, p11, p12, in1, in2, fixed)  En3_binary_R(RRgo, n2, Adj, alpha, beta, p0, w, p11, p12, in1, in2, fixed)  En3_binary_R2(RRgo, n2, Adj, alpha, beta, p0, w, p11, p12, in1, in2, fixed)"},{"path":"https://sterniii3.github.io/drugdevelopR/reference/En3_bias_binary.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Expected sample size for phase III for bias adjustment programs and binary distributed outcomes — En3_bias_binary","text":"RRgo threshold value go/-go decision rule n2 total sample size phase II; must even number Adj adjustment parameter alpha significance level beta 1-beta power calculation sample size phase III p0 assumed true rate control group w weight mixture prior distribution p11 assumed true rate treatment group p12 assumed true rate treatment group in1 amount information p11 terms sample size in2 amount information p12 terms sample size fixed choose true treatment effects fixed random, TRUE p11 used fixed effect","code":""},{"path":"https://sterniii3.github.io/drugdevelopR/reference/En3_bias_binary.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Expected sample size for phase III for bias adjustment programs and binary distributed outcomes — En3_bias_binary","text":"output functions En3_binary_L, En3_binary_L2, En3_binary_R En3_binary_R2 expected number participants phase III.","code":""},{"path":"https://sterniii3.github.io/drugdevelopR/reference/En3_bias_binary.html","id":"last-edited-by","dir":"Reference","previous_headings":"","what":"Last Edited By","title":"Expected sample size for phase III for bias adjustment programs and binary distributed outcomes — En3_bias_binary","text":"Johannes Cepicka","code":""},{"path":"https://sterniii3.github.io/drugdevelopR/reference/En3_bias_binary.html","id":"last-edit-date","dir":"Reference","previous_headings":"","what":"Last Edit Date","title":"Expected sample size for phase III for bias adjustment programs and binary distributed outcomes — En3_bias_binary","text":"2022-04-23","code":""},{"path":"https://sterniii3.github.io/drugdevelopR/reference/En3_bias_binary.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Expected sample size for phase III for bias adjustment programs and binary distributed outcomes — En3_bias_binary","text":"","code":"res <- En3_binary_L(RRgo = 0.8, n2 = 50, Adj = 0,                                alpha = 0.025, beta = 0.1, p0 = 0.6,  w = 0.3,                               p11 =  0.3, p12 = 0.5, in1 = 300, in2 = 600,                                fixed = FALSE)           res <-  En3_binary_L2(RRgo = 0.8, n2 = 50, Adj = 0,                                alpha = 0.025, beta = 0.1, p0 = 0.6,  w = 0.3,                               p11 =  0.3, p12 = 0.5, in1 = 300, in2 = 600,                                fixed = FALSE)           res <- En3_binary_R(RRgo = 0.8, n2 = 50, Adj = 1,                                alpha = 0.025, beta = 0.1, p0 = 0.6,  w = 0.3,                               p11 =  0.3, p12 = 0.5, in1 = 300, in2 = 600,                                fixed = FALSE)           res <- En3_binary_R2(RRgo = 0.8, n2 = 50, Adj = 1,                                alpha = 0.025, beta = 0.1, p0 = 0.6,  w = 0.3,                               p11 =  0.3, p12 = 0.5, in1 = 300, in2 = 600,                                fixed = FALSE)"},{"path":"https://sterniii3.github.io/drugdevelopR/reference/En3_bias_normal.html","id":null,"dir":"Reference","previous_headings":"","what":"Expected sample size for phase III for bias adjustment programs and normally distributed outcomes — En3_bias_normal","title":"Expected sample size for phase III for bias adjustment programs and normally distributed outcomes — En3_bias_normal","text":"discount overoptimistic results phase II calculating optimal sample size phase III, necessary use functions En3_normal_L(), En3_normal_L2(), En3_normal_R() En3_normal_R2(). function describes specific case: En3_normal_L(): calculates optimal sample size additive adjustment factor (.e adjust lower bound one-sided confidence interval), however go-decision affected bias adjustment En3_normal_L2(): calculates optimal sample size additive adjustment factor (.e adjust lower bound one-sided confidence interval) go-decision also affected bias adjustment En3_normal_R(): calculates optimal sample size multiplicative adjustment factor (.e. use estimate retention factor), however go-decision affected bias adjustment En3_normal_R2(): calculates optimal sample size multiplicative adjustment factor (.e. use estimate retention factor) go-decision also affected bias adjustment","code":""},{"path":"https://sterniii3.github.io/drugdevelopR/reference/En3_bias_normal.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Expected sample size for phase III for bias adjustment programs and normally distributed outcomes — En3_bias_normal","text":"","code":"En3_normal_L(   kappa,   n2,   Adj,   alpha,   beta,   w,   Delta1,   Delta2,   in1,   in2,   a,   b,   fixed )  En3_normal_L2(   kappa,   n2,   Adj,   alpha,   beta,   w,   Delta1,   Delta2,   in1,   in2,   a,   b,   fixed )  En3_normal_R(   kappa,   n2,   Adj,   alpha,   beta,   w,   Delta1,   Delta2,   in1,   in2,   a,   b,   fixed )  En3_normal_R2(   kappa,   n2,   Adj,   alpha,   beta,   w,   Delta1,   Delta2,   in1,   in2,   a,   b,   fixed )"},{"path":"https://sterniii3.github.io/drugdevelopR/reference/En3_bias_normal.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Expected sample size for phase III for bias adjustment programs and normally distributed outcomes — En3_bias_normal","text":"kappa threshold value go/-go decision rule n2 total sample size phase II; must even number Adj adjustment parameter alpha significance level beta 1-beta power calculation sample size phase III w weight mixture prior distribution Delta1 assumed true treatment effect standardized difference means Delta2 assumed true treatment effect standardized difference means in1 amount information Delta1 terms sample size in2 amount information Delta2 terms sample size lower boundary truncation b upper boundary truncation fixed choose true treatment effects fixed random, TRUE Delta1 used fixed effect","code":""},{"path":"https://sterniii3.github.io/drugdevelopR/reference/En3_bias_normal.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Expected sample size for phase III for bias adjustment programs and normally distributed outcomes — En3_bias_normal","text":"output functions En3_normal_L, En3_normal_L2, En3_normal_R En3_normal_R2 expected number participants phase III.","code":""},{"path":"https://sterniii3.github.io/drugdevelopR/reference/En3_bias_normal.html","id":"last-edited-by","dir":"Reference","previous_headings":"","what":"Last Edited By","title":"Expected sample size for phase III for bias adjustment programs and normally distributed outcomes — En3_bias_normal","text":"Johannes Cepicka","code":""},{"path":"https://sterniii3.github.io/drugdevelopR/reference/En3_bias_normal.html","id":"last-edit-date","dir":"Reference","previous_headings":"","what":"Last Edit Date","title":"Expected sample size for phase III for bias adjustment programs and normally distributed outcomes — En3_bias_normal","text":"2022-04-23","code":""},{"path":"https://sterniii3.github.io/drugdevelopR/reference/En3_bias_normal.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Expected sample size for phase III for bias adjustment programs and normally distributed outcomes — En3_bias_normal","text":"","code":"res <- En3_normal_L(kappa = 0.1, n2 = 50, Adj = 0,                                alpha = 0.025, beta = 0.1, w = 0.3,                               Delta1 = 0.375, Delta2 = 0.625,                                in1 = 300, in2 = 600,                                a = 0.25, b = 0.75, fixed = FALSE)           res <- En3_normal_L2(kappa = 0.1, n2 = 50, Adj = 0,                                alpha = 0.025, beta = 0.1, w = 0.3,                               Delta1 = 0.375, Delta2 = 0.625,                                in1 = 300, in2 = 600,                                a = 0.25, b = 0.75, fixed = TRUE)           res <- En3_normal_R(kappa = 0.1, n2 = 50, Adj = 1,                                alpha = 0.025, beta = 0.1, w = 0.3,                               Delta1 = 0.375, Delta2 = 0.625,                                in1 = 300, in2 = 600,                                a = 0.25, b = 0.75, fixed = FALSE)           res <- En3_normal_R2(kappa = 0.1, n2 = 50, Adj = 1,                                alpha = 0.025, beta = 0.1, w = 0.3,                               Delta1 = 0.375, Delta2 = 0.625,                                in1 = 300, in2 = 600,                                a = 0.25, b = 0.75, fixed = FALSE)"},{"path":"https://sterniii3.github.io/drugdevelopR/reference/Epgo23.html","id":null,"dir":"Reference","previous_headings":"","what":"Expected probability to do third phase III trial — Epgo23","title":"Expected probability to do third phase III trial — Epgo23","text":"setting Case 2: Strategy 2/2( + 1); least two trials significant (treatment effect one least showing direction) function calculates probability third phase III trial necessary.","code":""},{"path":"https://sterniii3.github.io/drugdevelopR/reference/Epgo23.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Expected probability to do third phase III trial — Epgo23","text":"","code":"Epgo23(HRgo, d2, alpha, beta, w, hr1, hr2, id1, id2)"},{"path":"https://sterniii3.github.io/drugdevelopR/reference/Epgo23.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Expected probability to do third phase III trial — Epgo23","text":"HRgo threshold value go/-go decision rule d2 total number events phase II alpha significance level beta 1-beta power calculation sample size phase III w weight mixture prior distribution hr1 first assumed true treatment effect HR scale prior distribution hr2 second assumed true treatment effect HR scale prior distribution id1 amount information hr1 terms number events id2 amount information hr2 terms number events","code":""},{"path":"https://sterniii3.github.io/drugdevelopR/reference/Epgo23.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Expected probability to do third phase III trial — Epgo23","text":"output function Epgo23() probability third phase III trial.","code":""},{"path":"https://sterniii3.github.io/drugdevelopR/reference/Epgo23.html","id":"last-edited-by","dir":"Reference","previous_headings":"","what":"Last Edited By","title":"Expected probability to do third phase III trial — Epgo23","text":"Johannes Cepicka","code":""},{"path":"https://sterniii3.github.io/drugdevelopR/reference/Epgo23.html","id":"last-edit-date","dir":"Reference","previous_headings":"","what":"Last Edit Date","title":"Expected probability to do third phase III trial — Epgo23","text":"2022-05-09","code":""},{"path":"https://sterniii3.github.io/drugdevelopR/reference/Epgo23.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Expected probability to do third phase III trial — Epgo23","text":"","code":"res <- Epgo23(HRgo = 0.8, d2 = 50,  w = 0.3, alpha = 0.025, beta = 0.1,                                hr1 =  0.69, hr2 = 0.81, id1 = 280, id2 = 420)"},{"path":"https://sterniii3.github.io/drugdevelopR/reference/Epgo23_binary.html","id":null,"dir":"Reference","previous_headings":"","what":"Expected probability to do third phase III trial — Epgo23_binary","title":"Expected probability to do third phase III trial — Epgo23_binary","text":"setting Case 2: Strategy 2/2( + 1); least two trials significant (treatment effect one least showing direction) function calculates probability third phase III trial necessary.","code":""},{"path":"https://sterniii3.github.io/drugdevelopR/reference/Epgo23_binary.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Expected probability to do third phase III trial — Epgo23_binary","text":"","code":"Epgo23_binary(RRgo, n2, alpha, beta, p0, w, p11, p12, in1, in2)"},{"path":"https://sterniii3.github.io/drugdevelopR/reference/Epgo23_binary.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Expected probability to do third phase III trial — Epgo23_binary","text":"RRgo threshold value go/-go decision rule n2 total sample size phase II; must even number alpha significance level beta 1-beta power calculation sample size phase III p0 assumed true rate control group w weight mixture prior distribution p11 assumed true rate treatment group p12 assumed true rate treatment group in1 amount information p11 terms sample size in2 amount information p12 terms sample size","code":""},{"path":"https://sterniii3.github.io/drugdevelopR/reference/Epgo23_binary.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Expected probability to do third phase III trial — Epgo23_binary","text":"output function Epgo23_binary() probability third phase III trial.","code":""},{"path":"https://sterniii3.github.io/drugdevelopR/reference/Epgo23_binary.html","id":"last-edited-by","dir":"Reference","previous_headings":"","what":"Last Edited By","title":"Expected probability to do third phase III trial — Epgo23_binary","text":"Johannes Cepicka","code":""},{"path":"https://sterniii3.github.io/drugdevelopR/reference/Epgo23_binary.html","id":"last-edit-date","dir":"Reference","previous_headings":"","what":"Last Edit Date","title":"Expected probability to do third phase III trial — Epgo23_binary","text":"2022-05-09","code":""},{"path":"https://sterniii3.github.io/drugdevelopR/reference/Epgo23_binary.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Expected probability to do third phase III trial — Epgo23_binary","text":"","code":"res <- Epgo23_binary(RRgo = 0.8, n2 = 50,  p0 = 0.3, w = 0.3, alpha = 0.025, beta = 0.1,                                p11 =  0.3, p12 = 0.5, in1 = 300, in2 = 600)"},{"path":"https://sterniii3.github.io/drugdevelopR/reference/Epgo23_normal.html","id":null,"dir":"Reference","previous_headings":"","what":"Expected probability to do third phase III trial — Epgo23_normal","title":"Expected probability to do third phase III trial — Epgo23_normal","text":"setting Case 2: Strategy 2/2( + 1); least two trials significant (treatment effect one least showing direction) function calculates probability third phase III trial necessary.","code":""},{"path":"https://sterniii3.github.io/drugdevelopR/reference/Epgo23_normal.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Expected probability to do third phase III trial — Epgo23_normal","text":"","code":"Epgo23_normal(kappa, n2, alpha, beta, w, Delta1, Delta2, in1, in2)"},{"path":"https://sterniii3.github.io/drugdevelopR/reference/Epgo23_normal.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Expected probability to do third phase III trial — Epgo23_normal","text":"kappa threshold value go/-go decision rule n2 total sample size phase II; must even number alpha significance level beta 1-beta power calculation sample size phase III w weight mixture prior distribution Delta1 assumed true treatment effect standardized difference means Delta2 assumed true treatment effect standardized difference means in1 amount information Delta1 terms sample size in2 amount information Delta2 terms sample size","code":""},{"path":"https://sterniii3.github.io/drugdevelopR/reference/Epgo23_normal.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Expected probability to do third phase III trial — Epgo23_normal","text":"output function Epgo23_normal() probability third phase III trial.","code":""},{"path":"https://sterniii3.github.io/drugdevelopR/reference/Epgo23_normal.html","id":"last-edited-by","dir":"Reference","previous_headings":"","what":"Last Edited By","title":"Expected probability to do third phase III trial — Epgo23_normal","text":"Johannes Cepicka","code":""},{"path":"https://sterniii3.github.io/drugdevelopR/reference/Epgo23_normal.html","id":"last-edit-date","dir":"Reference","previous_headings":"","what":"Last Edit Date","title":"Expected probability to do third phase III trial — Epgo23_normal","text":"2022-04-23","code":""},{"path":"https://sterniii3.github.io/drugdevelopR/reference/Epgo23_normal.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Expected probability to do third phase III trial — Epgo23_normal","text":"","code":"res <- Epgo23_normal(kappa = 0.1, n2 = 50, w = 0.3, alpha = 0.025, beta = 0.1,                                Delta1 = 0.375, Delta2 = 0.625, in1 = 300, in2 = 600)"},{"path":"https://sterniii3.github.io/drugdevelopR/reference/Epgo_bias_binary.html","id":null,"dir":"Reference","previous_headings":"","what":"Expected probability to go to phase III for bias adjustment programs with binary distributed outcomes — Epgo_bias_binary","title":"Expected probability to go to phase III for bias adjustment programs with binary distributed outcomes — Epgo_bias_binary","text":"case want discount overoptimistic results phase II calculating sample size phase III, also deciding whether go phase III functions Epgo_binary_L2 Epgo_binary_R2 necessary. function Epgo_binary_L2 uses additive adjustment parameter (.e adjust lower bound one-sided confidence interval), function Epgo_binary_R2 uses multiplicative adjustment parameter (.e. use estimate retention factor)","code":""},{"path":"https://sterniii3.github.io/drugdevelopR/reference/Epgo_bias_binary.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Expected probability to go to phase III for bias adjustment programs with binary distributed outcomes — Epgo_bias_binary","text":"","code":"Epgo_binary_L2(RRgo, n2, Adj, p0, w, p11, p12, in1, in2, fixed)  Epgo_binary_R2(RRgo, n2, Adj, p0, w, p11, p12, in1, in2, fixed)"},{"path":"https://sterniii3.github.io/drugdevelopR/reference/Epgo_bias_binary.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Expected probability to go to phase III for bias adjustment programs with binary distributed outcomes — Epgo_bias_binary","text":"RRgo threshold value go/-go decision rule n2 total sample size phase II; must even number Adj adjustment parameter p0 assumed true rate control group w weight mixture prior distribution p11 assumed true rate treatment group p12 assumed true rate treatment group in1 amount information p11 terms sample size in2 amount information p12 terms sample size fixed choose true treatment effects fixed random, TRUE p11 used fixed effect","code":""},{"path":"https://sterniii3.github.io/drugdevelopR/reference/Epgo_bias_binary.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Expected probability to go to phase III for bias adjustment programs with binary distributed outcomes — Epgo_bias_binary","text":"output functions Epgo_normal_L2 Epgo_normal_R2 expected number participants phase III conservative decision rule sample size calculation.","code":""},{"path":"https://sterniii3.github.io/drugdevelopR/reference/Epgo_bias_binary.html","id":"last-edited-by","dir":"Reference","previous_headings":"","what":"Last Edited By","title":"Expected probability to go to phase III for bias adjustment programs with binary distributed outcomes — Epgo_bias_binary","text":"Johannes Cepicka","code":""},{"path":"https://sterniii3.github.io/drugdevelopR/reference/Epgo_bias_binary.html","id":"last-edit-date","dir":"Reference","previous_headings":"","what":"Last Edit Date","title":"Expected probability to go to phase III for bias adjustment programs with binary distributed outcomes — Epgo_bias_binary","text":"2022-04-23","code":""},{"path":"https://sterniii3.github.io/drugdevelopR/reference/Epgo_bias_binary.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Expected probability to go to phase III for bias adjustment programs with binary distributed outcomes — Epgo_bias_binary","text":"","code":"res <- Epgo_binary_L2(RRgo = 0.8, n2 = 50, Adj = 0,  p0 = 0.6,  w = 0.3,                               p11 =  0.3, p12 = 0.5, in1 = 300, in2 = 600,                                fixed = FALSE)           res <- Epgo_binary_R2(RRgo = 0.8, n2 = 50, Adj = 1,  p0 = 0.6,  w = 0.3,                               p11 =  0.3, p12 = 0.5, in1 = 300, in2 = 600,                                fixed = FALSE)"},{"path":"https://sterniii3.github.io/drugdevelopR/reference/Epgo_bias_normal.html","id":null,"dir":"Reference","previous_headings":"","what":"Expected probability to go to phase III for bias adjustment programs with normally distributed outcomes — Epgo_bias_normal","title":"Expected probability to go to phase III for bias adjustment programs with normally distributed outcomes — Epgo_bias_normal","text":"case want discount overoptimistic results phase II calculating sample size phase III, also deciding whether go phase III functions Epgo_normal_L2 Epgo_normal_R2 necessary. function Epgo_normal_L2 uses additive adjustment parameter (.e adjust lower bound one-sided confidence interval), function Epgo_normal_R2 uses multiplicative adjustment parameter (.e. use estimate retention factor)","code":""},{"path":"https://sterniii3.github.io/drugdevelopR/reference/Epgo_bias_normal.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Expected probability to go to phase III for bias adjustment programs with normally distributed outcomes — Epgo_bias_normal","text":"","code":"Epgo_normal_L2(kappa, n2, Adj, w, Delta1, Delta2, in1, in2, a, b, fixed)  Epgo_normal_R2(kappa, n2, Adj, w, Delta1, Delta2, in1, in2, a, b, fixed)"},{"path":"https://sterniii3.github.io/drugdevelopR/reference/Epgo_bias_normal.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Expected probability to go to phase III for bias adjustment programs with normally distributed outcomes — Epgo_bias_normal","text":"kappa threshold value go/-go decision rule n2 total sample size phase II; must even number Adj adjustment parameter w weight mixture prior distribution Delta1 assumed true treatment effect standardized difference means Delta2 assumed true treatment effect standardized difference means in1 amount information Delta1 terms sample size in2 amount information Delta2 terms sample size lower boundary truncation b upper boundary truncation fixed choose true treatment effects fixed random, TRUE Delta1 used fixed effect","code":""},{"path":"https://sterniii3.github.io/drugdevelopR/reference/Epgo_bias_normal.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Expected probability to go to phase III for bias adjustment programs with normally distributed outcomes — Epgo_bias_normal","text":"output functions Epgo_normal_L2 Epgo_normal_R2 expected number participants phase III conservative decision rule sample size calculation.","code":""},{"path":"https://sterniii3.github.io/drugdevelopR/reference/Epgo_bias_normal.html","id":"last-edited-by","dir":"Reference","previous_headings":"","what":"Last Edited By","title":"Expected probability to go to phase III for bias adjustment programs with normally distributed outcomes — Epgo_bias_normal","text":"Johannes Cepicka","code":""},{"path":"https://sterniii3.github.io/drugdevelopR/reference/Epgo_bias_normal.html","id":"last-edit-date","dir":"Reference","previous_headings":"","what":"Last Edit Date","title":"Expected probability to go to phase III for bias adjustment programs with normally distributed outcomes — Epgo_bias_normal","text":"2022-04-23","code":""},{"path":"https://sterniii3.github.io/drugdevelopR/reference/Epgo_bias_normal.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Expected probability to go to phase III for bias adjustment programs with normally distributed outcomes — Epgo_bias_normal","text":"","code":"res <- Epgo_normal_L2(kappa = 0.1, n2 = 50, Adj = 0, w = 0.3,                                Delta1 = 0.375, Delta2 = 0.625, in1 = 300, in2 = 600,                                 a = 0.25, b = 0.75, fixed = FALSE)           res <- Epgo_normal_R2(kappa = 0.1, n2 = 50, Adj = 1, w = 0.3,                                Delta1 = 0.375, Delta2 = 0.625, in1 = 300, in2 = 600,                                 a = 0.25, b = 0.75, fixed = FALSE)"},{"path":"https://sterniii3.github.io/drugdevelopR/reference/Ess_binary.html","id":null,"dir":"Reference","previous_headings":"","what":"Expected sample size for phase III for multiarm programs with binary distributed outcomes — Ess_binary","title":"Expected sample size for phase III for multiarm programs with binary distributed outcomes — Ess_binary","text":"Given phase II results promising enough get \"go\"-decision go phase III function now calculates expected sample size phase III given cases strategies listed . results function necessary calculating utility program, step maximized optimal_multiarm_binary() function","code":""},{"path":"https://sterniii3.github.io/drugdevelopR/reference/Ess_binary.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Expected sample size for phase III for multiarm programs with binary distributed outcomes — Ess_binary","text":"","code":"Ess_binary(RRgo, n2, alpha, beta, p0, p11, p12, strategy, case)"},{"path":"https://sterniii3.github.io/drugdevelopR/reference/Ess_binary.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Expected sample size for phase III for multiarm programs with binary distributed outcomes — Ess_binary","text":"RRgo threshold value go/-go decision rule n2 total sample size phase II; must even number alpha significance level beta 1-beta power calculation sample size phase III p0 assumed true rate control group p11 assumed true rate treatment group p12 assumed true rate treatment group strategy choose Strategy: 1 (\"best promising\"), 2 (\"promising\") 3 () case different cases: 1 (\"nogo\"), 21 (treatment 1 promising, treatment 2 ), 22 (treatment 2 promising, treatment 1 ), 31 (treatments promising, treatment 1 better), 32 (treatments promising, treatment 2 better)","code":""},{"path":"https://sterniii3.github.io/drugdevelopR/reference/Ess_binary.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Expected sample size for phase III for multiarm programs with binary distributed outcomes — Ess_binary","text":"function Ess_binary() returns expected sample size phase III going phase III","code":""},{"path":"https://sterniii3.github.io/drugdevelopR/reference/Ess_binary.html","id":"last-edited-by","dir":"Reference","previous_headings":"","what":"Last Edited By","title":"Expected sample size for phase III for multiarm programs with binary distributed outcomes — Ess_binary","text":"Johannes Cepicka","code":""},{"path":"https://sterniii3.github.io/drugdevelopR/reference/Ess_binary.html","id":"last-edit-date","dir":"Reference","previous_headings":"","what":"Last Edit Date","title":"Expected sample size for phase III for multiarm programs with binary distributed outcomes — Ess_binary","text":"2022-05-08","code":""},{"path":"https://sterniii3.github.io/drugdevelopR/reference/Ess_binary.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Expected sample size for phase III for multiarm programs with binary distributed outcomes — Ess_binary","text":"","code":"res <- Ess_binary(RRgo = 0.8 ,n2 = 50 ,alpha = 0.05, beta = 0.1,                             p0 = 0.6, p11 =  0.3, p12 = 0.5,strategy = 3, case = 31)"},{"path":"https://sterniii3.github.io/drugdevelopR/reference/Ess_multiple_normal.html","id":null,"dir":"Reference","previous_headings":"","what":"Expected sample size for phase III for multiple endpoints with normally distributed outcomes — Ess_multiple_normal","title":"Expected sample size for phase III for multiple endpoints with normally distributed outcomes — Ess_multiple_normal","text":"Given phase II results promising enough get \"go\"-decision go phase III function now calculates expected sample size phase III. results function necessary calculating utility program, step maximized optimal_multiple_normal() function","code":""},{"path":"https://sterniii3.github.io/drugdevelopR/reference/Ess_multiple_normal.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Expected sample size for phase III for multiple endpoints with normally distributed outcomes — Ess_multiple_normal","text":"","code":"Ess_multiple_normal(   kappa,   n2,   alpha,   beta,   Delta1,   Delta2,   in1,   in2,   sigma1,   sigma2,   fixed,   rho )"},{"path":"https://sterniii3.github.io/drugdevelopR/reference/Ess_multiple_normal.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Expected sample size for phase III for multiple endpoints with normally distributed outcomes — Ess_multiple_normal","text":"kappa threshold value go/-go decision rule; vector endpoints n2 total sample size phase II; must even number alpha significance level beta 1-beta power calculation sample size phase III Delta1 assumed true treatment effect standardized difference means Delta2 assumed true treatment effect standardized difference means in1 amount information Delta1 terms sample size in2 amount information Delta2 terms sample size sigma1 standard deviation first endpoint sigma2 standard deviation second endpoint fixed choose true treatment effects fixed random, TRUE Delta1 used fixed effect rho correlation two endpoints","code":""},{"path":"https://sterniii3.github.io/drugdevelopR/reference/Ess_multiple_normal.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Expected sample size for phase III for multiple endpoints with normally distributed outcomes — Ess_multiple_normal","text":"output function Ess_multiple_normal expected number participants phase III","code":""},{"path":"https://sterniii3.github.io/drugdevelopR/reference/Ess_multiple_normal.html","id":"last-edited-by","dir":"Reference","previous_headings":"","what":"Last Edited By","title":"Expected sample size for phase III for multiple endpoints with normally distributed outcomes — Ess_multiple_normal","text":"Johannes Cepicka","code":""},{"path":"https://sterniii3.github.io/drugdevelopR/reference/Ess_multiple_normal.html","id":"last-edit-date","dir":"Reference","previous_headings":"","what":"Last Edit Date","title":"Expected sample size for phase III for multiple endpoints with normally distributed outcomes — Ess_multiple_normal","text":"2022-04-23","code":""},{"path":"https://sterniii3.github.io/drugdevelopR/reference/Ess_multiple_normal.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Expected sample size for phase III for multiple endpoints with normally distributed outcomes — Ess_multiple_normal","text":"","code":"res <- Ess_multiple_normal(kappa = 0.1, n2 = 50, alpha = 0.025, beta = 0.1,                                Delta1 = 0.375, Delta2 = 0.625, in1 = 300, in2 = 600,                                 sigma1 = 8, sigma2 = 4, fixed = TRUE, rho = 0.3)"},{"path":"https://sterniii3.github.io/drugdevelopR/reference/Ess_multiple_tte.html","id":null,"dir":"Reference","previous_headings":"","what":"Expected sample size for phase III for multiple endpoints with normally distributed outcomes — Ess_multiple_tte","title":"Expected sample size for phase III for multiple endpoints with normally distributed outcomes — Ess_multiple_tte","text":"Given phase II results promising enough get \"go\"-decision go phase III function now calculates expected sample size phase III. results function necessary calculating utility program, step maximized optimal_multiple_tte() function","code":""},{"path":"https://sterniii3.github.io/drugdevelopR/reference/Ess_multiple_tte.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Expected sample size for phase III for multiple endpoints with normally distributed outcomes — Ess_multiple_tte","text":"","code":"Ess_multiple_tte(HRgo, n2, alpha, beta, ec, hr1, hr2, id1, id2, fixed, rho)"},{"path":"https://sterniii3.github.io/drugdevelopR/reference/Ess_multiple_tte.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Expected sample size for phase III for multiple endpoints with normally distributed outcomes — Ess_multiple_tte","text":"HRgo threshold value go/-go decision rule; n2 total sample size phase II; must even number alpha one- sided significance level beta 1-beta power calculation number events phase III Schoenfeld (1981) formula ec control arm event rate phase II III hr1 assumed true treatment effect HR scale treatment 1 hr2 assumed true treatment effect HR scale treatment 2 id1 amount information hr1 terms number events id2 amount information hr2 terms number events fixed choose true treatment effects fixed random, TRUE hr1 used fixed effect rho correlation two endpoints","code":""},{"path":"https://sterniii3.github.io/drugdevelopR/reference/Ess_multiple_tte.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Expected sample size for phase III for multiple endpoints with normally distributed outcomes — Ess_multiple_tte","text":"output function Ess_multiple_tte() expected number participants phase III","code":""},{"path":"https://sterniii3.github.io/drugdevelopR/reference/Ess_multiple_tte.html","id":"last-edited-by","dir":"Reference","previous_headings":"","what":"Last Edited By","title":"Expected sample size for phase III for multiple endpoints with normally distributed outcomes — Ess_multiple_tte","text":"Johannes Cepicka","code":""},{"path":"https://sterniii3.github.io/drugdevelopR/reference/Ess_multiple_tte.html","id":"last-edit-date","dir":"Reference","previous_headings":"","what":"Last Edit Date","title":"Expected sample size for phase III for multiple endpoints with normally distributed outcomes — Ess_multiple_tte","text":"2022-04-23","code":""},{"path":"https://sterniii3.github.io/drugdevelopR/reference/Ess_multiple_tte.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Expected sample size for phase III for multiple endpoints with normally distributed outcomes — Ess_multiple_tte","text":"","code":"res <- Ess_multiple_tte(HRgo = 0.8, n2 = 50, alpha = 0.05, beta = 0.1,                                ec = 0.6,hr1 = 0.75, hr2 = 0.80,                                 id1 = 300, id2 = 600,                                 fixed = TRUE, rho = 0.3)"},{"path":"https://sterniii3.github.io/drugdevelopR/reference/Ess_normal.html","id":null,"dir":"Reference","previous_headings":"","what":"Expected sample size for phase III for multiarm programs with normally distributed outcomes — Ess_normal","title":"Expected sample size for phase III for multiarm programs with normally distributed outcomes — Ess_normal","text":"Given phase II results promising enough get \"go\"-decision go phase III function now calculates expected sample size phase III given cases strategies listed . results function necessary calculating utility program, step maximized optimal_multiarm_normal() function","code":""},{"path":"https://sterniii3.github.io/drugdevelopR/reference/Ess_normal.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Expected sample size for phase III for multiarm programs with normally distributed outcomes — Ess_normal","text":"","code":"Ess_normal(kappa, n2, alpha, beta, Delta1, Delta2, strategy, case)"},{"path":"https://sterniii3.github.io/drugdevelopR/reference/Ess_normal.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Expected sample size for phase III for multiarm programs with normally distributed outcomes — Ess_normal","text":"kappa threshold value go/-go decision rule n2 total sample size phase II; must even number alpha significance level beta 1-beta power calculation sample size phase III Delta1 assumed true treatment effect standardized difference means Delta2 assumed true treatment effect standardized difference means strategy choose Strategy: 1 (\"best promising\"), 2 (\"promising\") 3 () case different cases: 1 (\"nogo\"), 21 (treatment 1 promising, treatment 2 ), 22 (treatment 2 promising, treatment 1 ), 31 (treatments promising, treatment 1 better), 32 (treatments promising, treatment 2 better)","code":""},{"path":"https://sterniii3.github.io/drugdevelopR/reference/Ess_normal.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Expected sample size for phase III for multiarm programs with normally distributed outcomes — Ess_normal","text":"function Ess_normal() returns expected sample size phase III going phase III outcomes normally distributed consider multiarm programs, .e. several phase III trials different doses different treatments performed","code":""},{"path":"https://sterniii3.github.io/drugdevelopR/reference/Ess_normal.html","id":"last-edited-by","dir":"Reference","previous_headings":"","what":"Last Edited By","title":"Expected sample size for phase III for multiarm programs with normally distributed outcomes — Ess_normal","text":"Johannes Cepicka","code":""},{"path":"https://sterniii3.github.io/drugdevelopR/reference/Ess_normal.html","id":"last-edit-date","dir":"Reference","previous_headings":"","what":"Last Edit Date","title":"Expected sample size for phase III for multiarm programs with normally distributed outcomes — Ess_normal","text":"2022-05-08","code":""},{"path":"https://sterniii3.github.io/drugdevelopR/reference/Ess_normal.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Expected sample size for phase III for multiarm programs with normally distributed outcomes — Ess_normal","text":"","code":"res <- Ess_normal(kappa = 0.1 ,n2 = 50 ,alpha = 0.05, beta = 0.1,                             Delta1 = 0.375, Delta2 = 0.625, strategy = 3, case = 31)"},{"path":"https://sterniii3.github.io/drugdevelopR/reference/Ess_tte.html","id":null,"dir":"Reference","previous_headings":"","what":"Expected sample size for phase III for multiarm programs with time-to-event outcomes — Ess_tte","title":"Expected sample size for phase III for multiarm programs with time-to-event outcomes — Ess_tte","text":"Given phase II results promising enough get \"go\"-decision go phase III function now calculates expected sample size phase III given cases strategies listed . results function necessary calculating utility program, step maximized optimal_multiarm() function","code":""},{"path":"https://sterniii3.github.io/drugdevelopR/reference/Ess_tte.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Expected sample size for phase III for multiarm programs with time-to-event outcomes — Ess_tte","text":"","code":"Ess_tte(HRgo, n2, alpha, beta, ec, hr1, hr2, strategy, case)"},{"path":"https://sterniii3.github.io/drugdevelopR/reference/Ess_tte.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Expected sample size for phase III for multiarm programs with time-to-event outcomes — Ess_tte","text":"HRgo threshold value go/-go decision rule n2 total sample size phase II; must even number alpha significance level beta 1-beta power calculation sample size phase III ec control arm event rate phase II III hr1 assumed true treatment effect HR scale treatment 1 hr2 assumed true treatment effect HR scale treatment 2 strategy choose Strategy: 1 (\"best promising\"), 2 (\"promising\") 3 () case different cases: 1 (\"nogo\"), 21 (treatment 1 promising, treatment 2 ), 22 (treatment 2 promising, treatment 1 ), 31 (treatments promising, treatment 1 better), 32 (treatments promising, treatment 2 better)","code":""},{"path":"https://sterniii3.github.io/drugdevelopR/reference/Ess_tte.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Expected sample size for phase III for multiarm programs with time-to-event outcomes — Ess_tte","text":"function Ess_tte() returns expected sample size phase III going phase III","code":""},{"path":"https://sterniii3.github.io/drugdevelopR/reference/Ess_tte.html","id":"last-edited-by","dir":"Reference","previous_headings":"","what":"Last Edited By","title":"Expected sample size for phase III for multiarm programs with time-to-event outcomes — Ess_tte","text":"Johannes Cepicka","code":""},{"path":"https://sterniii3.github.io/drugdevelopR/reference/Ess_tte.html","id":"last-edit-date","dir":"Reference","previous_headings":"","what":"Last Edit Date","title":"Expected sample size for phase III for multiarm programs with time-to-event outcomes — Ess_tte","text":"2022-05-08","code":""},{"path":"https://sterniii3.github.io/drugdevelopR/reference/Ess_tte.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Expected sample size for phase III for multiarm programs with time-to-event outcomes — Ess_tte","text":"","code":"res <- Ess_tte(HRgo = 0.8 ,n2 = 50 ,alpha = 0.05, beta = 0.1,                             ec = 0.6, hr1 = 0.7, hr2 = 0.8, strategy = 2, case = 21)"},{"path":"https://sterniii3.github.io/drugdevelopR/reference/PsProg_binary.html","id":null,"dir":"Reference","previous_headings":"","what":"Probability of a successful program for multiarm programs with binary distributed outcomes — PsProg_binary","title":"Probability of a successful program for multiarm programs with binary distributed outcomes — PsProg_binary","text":"Given get \"go\"-decision phase II, functions now calculates probability results confirmatory trial (phase III) significant, .e. statistically relevant positive effect treatment.","code":""},{"path":"https://sterniii3.github.io/drugdevelopR/reference/PsProg_binary.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Probability of a successful program for multiarm programs with binary distributed outcomes — PsProg_binary","text":"","code":"PsProg_binary(   RRgo,   n2,   alpha,   beta,   p0,   p11,   p12,   step1,   step2,   strategy,   case )"},{"path":"https://sterniii3.github.io/drugdevelopR/reference/PsProg_binary.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Probability of a successful program for multiarm programs with binary distributed outcomes — PsProg_binary","text":"RRgo threshold value go/-go decision rule n2 total sample size phase II; must divisible three alpha significance level beta 1-beta power calculation sample size phase III p0 assumed true rate control group p11 assumed true rate treatment group p12 assumed true rate treatment group step1 lower boundary effect size step2 upper boundary effect size strategy choose Strategy: 1 (\"best promising\"), 2 (\"promising\") 3 () case different cases: 1 (\"nogo\"), 21 (treatment 1 promising, treatment 2 ), 22 (treatment 2 promising, treatment 1 ), 31 (treatments promising, treatment 1 better), 32 (treatments promising, treatment 2 better)","code":""},{"path":"https://sterniii3.github.io/drugdevelopR/reference/PsProg_binary.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Probability of a successful program for multiarm programs with binary distributed outcomes — PsProg_binary","text":"function PsProg_binary() returns probability successful program","code":""},{"path":"https://sterniii3.github.io/drugdevelopR/reference/PsProg_binary.html","id":"last-edited-by","dir":"Reference","previous_headings":"","what":"Last Edited By","title":"Probability of a successful program for multiarm programs with binary distributed outcomes — PsProg_binary","text":"Johannes Cepicka","code":""},{"path":"https://sterniii3.github.io/drugdevelopR/reference/PsProg_binary.html","id":"last-edit-date","dir":"Reference","previous_headings":"","what":"Last Edit Date","title":"Probability of a successful program for multiarm programs with binary distributed outcomes — PsProg_binary","text":"2022-05-08","code":""},{"path":"https://sterniii3.github.io/drugdevelopR/reference/PsProg_binary.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Probability of a successful program for multiarm programs with binary distributed outcomes — PsProg_binary","text":"","code":"res <- PsProg_binary(RRgo = 0.8 ,n2 = 50 ,alpha = 0.05, beta = 0.1,                             p0 = 0.6, p11 =  0.3, p12 = 0.5, step1 = 1, step2 = 0.95,                             strategy = 3, case = 31)"},{"path":"https://sterniii3.github.io/drugdevelopR/reference/PsProg_normal.html","id":null,"dir":"Reference","previous_headings":"","what":"Probability of a successful program for multiarm programs with normally distributed outcomes — PsProg_normal","title":"Probability of a successful program for multiarm programs with normally distributed outcomes — PsProg_normal","text":"Given get \"go\"-decision phase II, functions now calculates probability results confirmatory trial (phase III) significant, .e. statistically relevant positive effect treatment.","code":""},{"path":"https://sterniii3.github.io/drugdevelopR/reference/PsProg_normal.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Probability of a successful program for multiarm programs with normally distributed outcomes — PsProg_normal","text":"","code":"PsProg_normal(   kappa,   n2,   alpha,   beta,   Delta1,   Delta2,   step1,   step2,   strategy,   case )"},{"path":"https://sterniii3.github.io/drugdevelopR/reference/PsProg_normal.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Probability of a successful program for multiarm programs with normally distributed outcomes — PsProg_normal","text":"kappa threshold value go/-go decision rule n2 total sample size phase II; must even number alpha significance level beta 1-beta power calculation sample size phase III Delta1 assumed true treatment effect standardized difference means Delta2 assumed true treatment effect standardized difference means step1 lower boundary effect size step2 upper boundary effect size strategy choose Strategy: 1 (\"best promising\"), 2 (\"promising\") 3 () case different cases: 1 (\"nogo\"), 21 (treatment 1 promising, treatment 2 ), 22 (treatment 2 promising, treatment 1 ), 31 (treatments promising, treatment 1 better), 32 (treatments promising, treatment 2 better)","code":""},{"path":"https://sterniii3.github.io/drugdevelopR/reference/PsProg_normal.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Probability of a successful program for multiarm programs with normally distributed outcomes — PsProg_normal","text":"function PsProg_normal() returns probability successful program.","code":""},{"path":"https://sterniii3.github.io/drugdevelopR/reference/PsProg_normal.html","id":"last-edited-by","dir":"Reference","previous_headings":"","what":"Last Edited By","title":"Probability of a successful program for multiarm programs with normally distributed outcomes — PsProg_normal","text":"Johannes Cepicka","code":""},{"path":"https://sterniii3.github.io/drugdevelopR/reference/PsProg_normal.html","id":"last-edit-date","dir":"Reference","previous_headings":"","what":"Last Edit Date","title":"Probability of a successful program for multiarm programs with normally distributed outcomes — PsProg_normal","text":"2022-04-23","code":""},{"path":"https://sterniii3.github.io/drugdevelopR/reference/PsProg_normal.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Probability of a successful program for multiarm programs with normally distributed outcomes — PsProg_normal","text":"","code":"res <- PsProg_normal(kappa = 0.1 ,n2 = 50 ,alpha = 0.05, beta = 0.1,                             Delta1 = 0.375, Delta2 = 0.625,  step1 = 0, step2 = 0.5,                             strategy = 3, case = 31)"},{"path":"https://sterniii3.github.io/drugdevelopR/reference/PsProg_tte.html","id":null,"dir":"Reference","previous_headings":"","what":"Probability of a successful program for multiarm programs with time-to-event outcomes — PsProg_tte","title":"Probability of a successful program for multiarm programs with time-to-event outcomes — PsProg_tte","text":"Given get \"go\"-decision phase II, functions now calculates probability results confirmatory trial (phase III) significant, .e. statistically relevant positive effect treatment.","code":""},{"path":"https://sterniii3.github.io/drugdevelopR/reference/PsProg_tte.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Probability of a successful program for multiarm programs with time-to-event outcomes — PsProg_tte","text":"","code":"PsProg_tte(HRgo, n2, alpha, beta, ec, hr1, hr2, step1, step2, strategy, case)"},{"path":"https://sterniii3.github.io/drugdevelopR/reference/PsProg_tte.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Probability of a successful program for multiarm programs with time-to-event outcomes — PsProg_tte","text":"HRgo threshold value go/-go decision rule n2 total sample size phase II; must divisible three alpha significance level beta 1-beta power calculation sample size phase III ec control arm event rate phase II III hr1 assumed true treatment effect HR scale treatment 1 hr2 assumed true treatment effect HR scale treatment 2 step1 lower boundary effect size step2 upper boundary effect size strategy choose Strategy: 1 (\"best promising\"), 2 (\"promising\") 3 () case different cases: 1 (\"nogo\"), 21 (treatment 1 promising, treatment 2 ), 22 (treatment 2 promising, treatment 1 ), 31 (treatments promising, treatment 1 better), 32 (treatments promising, treatment 2 better)","code":""},{"path":"https://sterniii3.github.io/drugdevelopR/reference/PsProg_tte.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Probability of a successful program for multiarm programs with time-to-event outcomes — PsProg_tte","text":"function PsProg_tte() returns probability successful program","code":""},{"path":"https://sterniii3.github.io/drugdevelopR/reference/PsProg_tte.html","id":"last-edited-by","dir":"Reference","previous_headings":"","what":"Last Edited By","title":"Probability of a successful program for multiarm programs with time-to-event outcomes — PsProg_tte","text":"Johannes Cepicka","code":""},{"path":"https://sterniii3.github.io/drugdevelopR/reference/PsProg_tte.html","id":"last-edit-date","dir":"Reference","previous_headings":"","what":"Last Edit Date","title":"Probability of a successful program for multiarm programs with time-to-event outcomes — PsProg_tte","text":"2022-05-08","code":""},{"path":"https://sterniii3.github.io/drugdevelopR/reference/PsProg_tte.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Probability of a successful program for multiarm programs with time-to-event outcomes — PsProg_tte","text":"","code":"res <- PsProg_tte(HRgo = 0.8 ,n2 = 50 ,alpha = 0.05, beta = 0.1,                             ec = 0.6, hr1 = 0.7, hr2 = 0.8, step1 = 1, step2 = 0.95,                             strategy = 2, case = 21)"},{"path":"https://sterniii3.github.io/drugdevelopR/reference/dbivanorm.html","id":null,"dir":"Reference","previous_headings":"","what":"Density of the bivariate normal distribution — dbivanorm","title":"Density of the bivariate normal distribution — dbivanorm","text":"Density bivariate normal distribution","code":""},{"path":"https://sterniii3.github.io/drugdevelopR/reference/dbivanorm.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Density of the bivariate normal distribution — dbivanorm","text":"","code":"dbivanorm(x, y, mu1, mu2, sigma1, sigma2, rho)  dbivanorm(x, y, mu1, mu2, sigma1, sigma2, rho)"},{"path":"https://sterniii3.github.io/drugdevelopR/reference/dbivanorm.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Density of the bivariate normal distribution — dbivanorm","text":"x integral variable y integral variable mu1 mean second endpoint mu2 mean first endpoint sigma1 standard deviation first endpoint sigma2 standard deviation second endpoint rho correlation two endpoints","code":""},{"path":"https://sterniii3.github.io/drugdevelopR/reference/dbivanorm.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Density of the bivariate normal distribution — dbivanorm","text":"Function dbivanorm() return density bivariate normal distribution.","code":""},{"path":"https://sterniii3.github.io/drugdevelopR/reference/dbivanorm.html","id":"last-edited-by","dir":"Reference","previous_headings":"","what":"Last Edited By","title":"Density of the bivariate normal distribution — dbivanorm","text":"Johannes Cepicka","code":""},{"path":"https://sterniii3.github.io/drugdevelopR/reference/dbivanorm.html","id":"last-edit-date","dir":"Reference","previous_headings":"","what":"Last Edit Date","title":"Density of the bivariate normal distribution — dbivanorm","text":"2022-04-23","code":""},{"path":"https://sterniii3.github.io/drugdevelopR/reference/dbivanorm.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Density of the bivariate normal distribution — dbivanorm","text":"","code":"res <- dbivanorm(x = 0.5, y = 0.5, mu1 = 0.375, mu2 = 0.25, sigma1 = 8, sigma2 = 12, rho = 0.4 )"},{"path":"https://sterniii3.github.io/drugdevelopR/reference/drugdevelopR.html","id":null,"dir":"Reference","previous_headings":"","what":"Utility based optimal phase II/III drug development planning — drugdevelopR","title":"Utility based optimal phase II/III drug development planning — drugdevelopR","text":"drugdevelopR package enables utility based planning phase II/III drug development programs optimal sample size allocation go/-go decision rules. assumed true treatment effects can assumed fixed (planning also possible via user friendly R Shiny App: drugdevelopR) modelled prior distribution. R Shiny application prior visualizes prior distributions used package. Fast computing enabled parallel programming.","code":""},{"path":"https://sterniii3.github.io/drugdevelopR/reference/drugdevelopR.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Utility based optimal phase II/III drug development planning — drugdevelopR","text":"","code":"drugdevelopR()"},{"path":"https://sterniii3.github.io/drugdevelopR/reference/drugdevelopR.html","id":"drugdevelopr-package-and-r-shiny-app","dir":"Reference","previous_headings":"","what":"drugdevelopR package and R Shiny App","title":"Utility based optimal phase II/III drug development planning — drugdevelopR","text":"drugdevelopR package provides functions plan optimal phase II/III drug development programs time--event endpoint (optimal_tte), binary endpoint (optimal_binary) normally distributed endpoint (optimal_normal), treatment effect assumed fixed modelled prior. settings, optimal phase II/III drug development planning fixed assumed treatment effects can also done help R Shiny application basic. Extensions basic setting optimal planning programs including methods discounting phase II results (function: optimal_bias, App: bias), optimal planning programs several phase III trials (function: optimal_multitrial, App: multitrial) optimal planning programs multiple arms (function: optimal_multiarm, App: multiarm). R Shiny App drugdevelopR serves homepage, navigating different parts drugdevelopR via links.","code":""},{"path":"https://sterniii3.github.io/drugdevelopR/reference/drugdevelopR.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Utility based optimal phase II/III drug development planning — drugdevelopR","text":"Kirchner, M., Kieser, M., Goette, H., & Schueler, . (2016). Utility-based optimization phase II/III programs. Statistics Medicine, 35(2), 305-316. Preussler, S., Kieser, M., Kirchner, M. (2019). Optimal sample size allocation go/-go decision rules phase II/III programs several phase III trials performed. Biometrical Journal, 61(2), 357-378. Preussler, S., Kirchner, M., Goette, H., Kieser, M. (2019). Optimal designs phase II/III drug development programs including methods discounting phase II results. Submitted peer-review journal. Preussler, S., Kirchner, M., Goette, H., Kieser, M. (2019). Optimal designs multi-arm Phase II/III drug development programs. Submitted peer-review journal.","code":""},{"path":"https://sterniii3.github.io/drugdevelopR/reference/fmax.html","id":null,"dir":"Reference","previous_headings":"","what":"Density for the maximum of two normally distributed random variables — fmax","title":"Density for the maximum of two normally distributed random variables — fmax","text":"function fmax() return value f(z), value density function maximum two normally distributed random variables.","code":""},{"path":"https://sterniii3.github.io/drugdevelopR/reference/fmax.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Density for the maximum of two normally distributed random variables — fmax","text":"","code":"fmax(z, mu1, mu2, sigma1, sigma2, rho)"},{"path":"https://sterniii3.github.io/drugdevelopR/reference/fmax.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Density for the maximum of two normally distributed random variables — fmax","text":"z integral variable mu1 mean second endpoint mu2 mean first endpoint sigma1 standard deviation first endpoint sigma2 standard deviation second endpoint rho correlation two endpoints","code":""},{"path":"https://sterniii3.github.io/drugdevelopR/reference/fmax.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Density for the maximum of two normally distributed random variables — fmax","text":"function fmax() return value f(z), value density function maximum two normally distributed random variables.","code":""},{"path":"https://sterniii3.github.io/drugdevelopR/reference/fmax.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Density for the maximum of two normally distributed random variables — fmax","text":"Z = max(X,Y) X ~ N(mu1,sigma1^2), Y ~ N(mu2,sigma2^2) f(z)=f1(-z)+f2(-z)","code":""},{"path":"https://sterniii3.github.io/drugdevelopR/reference/fmax.html","id":"last-edited-by","dir":"Reference","previous_headings":"","what":"Last Edited By","title":"Density for the maximum of two normally distributed random variables — fmax","text":"Johannes Cepicka","code":""},{"path":"https://sterniii3.github.io/drugdevelopR/reference/fmax.html","id":"last-edit-date","dir":"Reference","previous_headings":"","what":"Last Edit Date","title":"Density for the maximum of two normally distributed random variables — fmax","text":"2022-04-23","code":""},{"path":"https://sterniii3.github.io/drugdevelopR/reference/fmax.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Density for the maximum of two normally distributed random variables — fmax","text":"","code":"res <- fmax(z = 0.5, mu1 = 0.375, mu2 = 0.25, sigma1 = 8, sigma2 = 12, rho = 0.4 )"},{"path":"https://sterniii3.github.io/drugdevelopR/reference/fmin.html","id":null,"dir":"Reference","previous_headings":"","what":"Density for the minimum of two normally distributed random variables — fmin","title":"Density for the minimum of two normally distributed random variables — fmin","text":"function fmin() return value f(z), value density function minimum two normally distributed random variables.","code":""},{"path":"https://sterniii3.github.io/drugdevelopR/reference/fmin.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Density for the minimum of two normally distributed random variables — fmin","text":"","code":"fmin(y, mu1, mu2, sigma1, sigma2, rho)"},{"path":"https://sterniii3.github.io/drugdevelopR/reference/fmin.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Density for the minimum of two normally distributed random variables — fmin","text":"y integral variable mu1 mean second endpoint mu2 mean first endpoint sigma1 standard deviation first endpoint sigma2 standard deviation second endpoint rho correlation two endpoints","code":""},{"path":"https://sterniii3.github.io/drugdevelopR/reference/fmin.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Density for the minimum of two normally distributed random variables — fmin","text":"function fmin() return value f(z), value density function minimum two normally distributed random variables.","code":""},{"path":"https://sterniii3.github.io/drugdevelopR/reference/fmin.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Density for the minimum of two normally distributed random variables — fmin","text":"Z= min(X,Y) X ~ N(mu1,sigma1^2), Y ~ N(mu2,sigma2^2) f(z)=f1(z)+f2(z)","code":""},{"path":"https://sterniii3.github.io/drugdevelopR/reference/fmin.html","id":"last-edited-by","dir":"Reference","previous_headings":"","what":"Last Edited By","title":"Density for the minimum of two normally distributed random variables — fmin","text":"Johannes Cepicka","code":""},{"path":"https://sterniii3.github.io/drugdevelopR/reference/fmin.html","id":"last-edit-date","dir":"Reference","previous_headings":"","what":"Last Edit Date","title":"Density for the minimum of two normally distributed random variables — fmin","text":"2022-04-23","code":""},{"path":"https://sterniii3.github.io/drugdevelopR/reference/fmin.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Density for the minimum of two normally distributed random variables — fmin","text":"","code":"res <- fmin(y = 0.5, mu1 = 0.375, mu2 = 0.25, sigma1 = 8, sigma2 = 12, rho = 0.4 )"},{"path":"https://sterniii3.github.io/drugdevelopR/reference/optimal_bias.html","id":null,"dir":"Reference","previous_headings":"","what":"Optimal phase II/III drug development planning when discounting phase II results — optimal_bias","title":"Optimal phase II/III drug development planning when discounting phase II results — optimal_bias","text":"function optimal_bias drugdevelopR package enables planning phase II/III drug development programs optimal sample size allocation go/-go decision rules including methods discounting phase II results (Preussler et. al, 2020). assumed true treatment effects can assumed fixed (planning also possible via user friendly R Shiny App: bias) modelled prior distribution. R Shiny application prior visualizes prior distributions used package. Fast computing enabled parallel programming.","code":""},{"path":"https://sterniii3.github.io/drugdevelopR/reference/optimal_bias.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Optimal phase II/III drug development planning when discounting phase II results — optimal_bias","text":"","code":"optimal_bias(   w,   hr1,   hr2,   id1,   id2,   d2min,   d2max,   stepd2,   hrgomin,   hrgomax,   stephrgo,   adj = \"both\",   lambdamin = NULL,   lambdamax = NULL,   steplambda = NULL,   alphaCImin = NULL,   alphaCImax = NULL,   stepalphaCI = NULL,   alpha,   beta,   xi2,   xi3,   c2,   c3,   c02,   c03,   K = Inf,   N = Inf,   S = -Inf,   steps1 = 1,   stepm1 = 0.95,   stepl1 = 0.85,   b1,   b2,   b3,   fixed = FALSE,   num_cl = 1 )"},{"path":"https://sterniii3.github.io/drugdevelopR/reference/optimal_bias.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Optimal phase II/III drug development planning when discounting phase II results — optimal_bias","text":"w weight mixture prior distribution hr1 first assumed true treatment effect HR scale prior distribution hr2 second assumed true treatment effect HR scale prior distribution id1 amount information hr1 terms number events id2 amount information hr2 terms number events d2min minimal number events phase II d2max maximal number events phase II stepd2 stepsize optimization d2 hrgomin minimal threshold value go/-go decision rule hrgomax maximal threshold value go/-go decision rule stephrgo stepsize optimization HRgo adj choose type adjustment: \"multiplicative\", \"additive\", \"\" (\"\") lambdamin minimal adjustment parameter lambda lambdamax maximal adjustment parameter lambda steplambda stepsize adjustment parameter lambda alphaCImin minimal alphaCI alphaCImax maximal alphaCI stepalphaCI stepsize alphaCI alpha one-sided significance level beta 1-beta power calculation number events phase III Schoenfeld (1981) formula xi2 event rate phase II xi3 event rate phase III c2 variable per-patient cost phase II c3 variable per-patient cost phase III c02 fixed cost phase II c03 fixed cost phase III K constraint costs program, default: Inf, e.g. constraint N constraint total expected sample size program, default: Inf, e.g., constraint S constraint expected probability successful program, default: -Inf, e.g., constraint steps1 lower boundary effect size category \"small\" HR scale, default: 1 stepm1 lower boundary effect size category \"medium\" HR scale = upper boundary effect size category \"small\" HR scale, default: 0.95 stepl1 lower boundary effect size category \"large\" HR scale = upper boundary effect size category \"medium\" HR scale, default: 0.85 b1 expected gain effect size category \"small\" b2 expected gain effect size category \"medium\" b3 expected gain effect size category \"large\" fixed choose true treatment effects fixed random, TRUE hr1 used fixed effect num_cl number clusters used parallel computing, default: 1","code":""},{"path":"https://sterniii3.github.io/drugdevelopR/reference/optimal_bias.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Optimal phase II/III drug development planning when discounting phase II results — optimal_bias","text":"output function optimal_bias data.frame containing optimization results: Method Type adjustment: multipl. (multiplicative) add. (additive) u maximal expected utility Adj optimal adjustment parameter (lambda alphaCI according Method) HRgo optimal threshold value decision rule go phase III d2 optimal total number events phase II d3 total expected number events phase III; rounded next natural number d total expected number events program; d = d2 + d3 n2 total sample size phase II; rounded next even natural number n3 total sample size phase III; rounded next even natural number n total sample size program; n = n2 + n3 K maximal costs program pgo probability go phase III sProg probability successful program sProg1 probability successful program \"small\" treatment effect Phase III sProg2 probability successful program \"medium\" treatment effect Phase III sProg3 probability successful program \"large\" treatment effect Phase III K2 expected costs phase II K3 expected costs phase III input parameters. Taking cat(comment()) data.frame object lists used optimization sequences, start finish date optimization procedure.","code":""},{"path":"https://sterniii3.github.io/drugdevelopR/reference/optimal_bias.html","id":"drugdevelopr-functions","dir":"Reference","previous_headings":"","what":"drugdevelopR functions","title":"Optimal phase II/III drug development planning when discounting phase II results — optimal_bias","text":"drugdevelopR package provides functions optimal_tte, optimal_binary optimal_normal plan optimal phase II/III drug development programs time--event (treatment effect measured hazard ratio (HR)), binary (treatment effect measured risk ratio (RR)) normally distributed (treatment effect measured standardized difference means (Delta)) endpoint, treatment effect modelled prior. Optimal phase II/III drug development planning fixed treatment effects can done help R Shiny application basic. Extensions optimal planning programs including methods discounting phase II results (function: optimal_bias, App: bias), optimal planning programs several phase III trials (function: optimal_multitrial, App: multitrial) optimal planning programs multiple arms (function: optimal_multiarm, App: multiarm).","code":""},{"path":"https://sterniii3.github.io/drugdevelopR/reference/optimal_bias.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Optimal phase II/III drug development planning when discounting phase II results — optimal_bias","text":"IQWiG (2016). Allgemeine Methoden. Version 5.0, 10.07.2016, Technical Report. Available https://www.iqwig.de/de/methoden/methodenpapier.3020.html, assessed last 15.05.19. Preussler, S., Kirchner, M., Goette, H., Kieser, M. (2020). Optimal designs phase II/III drug development programs including methods discounting phase II results. Submitted peer-review journal. Schoenfeld, D. (1981). asymptotic properties nonparametric tests comparing survival distributions. Biometrika, 68(1), 316-319.","code":""},{"path":"https://sterniii3.github.io/drugdevelopR/reference/optimal_bias.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Optimal phase II/III drug development planning when discounting phase II results — optimal_bias","text":"","code":"res <- optimal_bias(w = 0.3,                                 # define parameters for prior   hr1 = 0.69, hr2 = 0.88, id1 = 210, id2 = 420,              # (https://web.imbi.uni-heidelberg.de/prior/)   d2min = 20, d2max = 100, stepd2 = 5,                       # define optimization set for d2   hrgomin = 0.7, hrgomax = 0.9, stephrgo = 0.05,             # define optimization set for HRgo   adj = \"both\",                                              # choose type of adjustment   lambdamin = 0.2, lambdamax = 1, steplambda = 0.05,         # define optimization set for lambda   alphaCImin = 0.025, alphaCImax = 0.5, stepalphaCI = 0.025, # define optimization set for alphaCI   alpha = 0.025, beta = 0.1, xi2 = 0.7, xi3 = 0.7,            # drug development planning parameters   c2 = 0.75, c3 = 1, c02 = 100, c03 = 150,                   # define fixed and variable costs for phase II and III   K = Inf, N = Inf, S = -Inf,                                # set maximal costs/ expected sample size for the program or minimal expected probability of a successful program   steps1 = 1,                                                # define lower boundary for \"small\"   stepm1 = 0.95,                                             # \"medium\"   stepl1 = 0.85,                                             # and \"large\" treatment effect size categories as proposed by IQWiG (2016)   b1 = 1000, b2 = 2000, b3 = 3000,                           # define expected benefit for a \"small\", \"medium\" and \"large\" treatment effect   fixed = FALSE,                                             # choose if true treatment effects are fixed or random   num_cl = 1)                                                # set number of cores used for parallelized computing (check maximum number possible with detectCores()) #>  #> Optimization progess for adjustment type  multiplicative #>  #>    |                                                                               |                                                                      |   0%   |                                                                               |====                                                                  |   6%   |                                                                               |========                                                              |  12%   |                                                                               |============                                                          |  18%   |                                                                               |================                                                      |  24%   |                                                                               |=====================                                                 |  29%   |                                                                               |=========================                                             |  35%   |                                                                               |=============================                                         |  41%   |                                                                               |=================================                                     |  47%   |                                                                               |=====================================                                 |  53%   |                                                                               |=========================================                             |  59%   |                                                                               |=============================================                         |  65%   |                                                                               |=================================================                     |  71%   |                                                                               |======================================================                |  76%   |                                                                               |==========================================================            |  82%   |                                                                               |==============================================================        |  88%   |                                                                               |==================================================================    |  94%   |                                                                               |======================================================================| 100% #> Optimization progess for adjustment type  additive #>  #>    |                                                                               |                                                                      |   0%   |                                                                               |====                                                                  |   5%   |                                                                               |=======                                                               |  10%   |                                                                               |==========                                                            |  15%   |                                                                               |==============                                                        |  20%   |                                                                               |==================                                                    |  25%   |                                                                               |=====================                                                 |  30%   |                                                                               |========================                                              |  35%   |                                                                               |============================                                          |  40%   |                                                                               |================================                                      |  45%   |                                                                               |===================================                                   |  50%   |                                                                               |======================================                                |  55%   |                                                                               |==========================================                            |  60%   |                                                                               |==============================================                        |  65%   |                                                                               |=================================================                     |  70%   |                                                                               |====================================================                  |  75%   |                                                                               |========================================================              |  80%   |                                                                               |============================================================          |  85%   |                                                                               |===============================================================       |  90%   |                                                                               |==================================================================    |  95%   |                                                                               |======================================================================| 100% #>  #>  #> Optimization result: #>  #>      Method     u   Adj HRgo d2  d3   d  n2  n3   n  pgo sProg   w  hr1  hr2 #> 12 multipl. 98.28 0.750 0.75 85 153 238 122 218 340 0.36  0.24 0.3 0.69 0.88 #> 19     add. 75.95 0.475 0.80 90 161 251 130 230 360 0.45  0.26 0.3 0.69 0.88 #>    id1 id2   K   N    S  K2  K3 sProg1 sProg2 sProg3 steps1 stepm1 stepl1 alpha #> 12 210 420 Inf Inf -Inf 192 273   0.04   0.08   0.12      1   0.95   0.85 0.025 #> 19 210 420 Inf Inf -Inf 198 298   0.05   0.09   0.11      1   0.95   0.85 0.025 #>    beta xi2 xi3 c02 c03   c2 c3   b1   b2   b3 #> 12  0.1 0.7 0.7 100 150 0.75  1 1000 2000 3000 #> 19  0.1 0.7 0.7 100 150 0.75  1 1000 2000 3000 #>  res #>      Method     u   Adj HRgo d2  d3   d  n2  n3   n  pgo sProg   w  hr1  hr2 #> 12 multipl. 98.28 0.750 0.75 85 153 238 122 218 340 0.36  0.24 0.3 0.69 0.88 #> 19     add. 75.95 0.475 0.80 90 161 251 130 230 360 0.45  0.26 0.3 0.69 0.88 #>    id1 id2   K   N    S  K2  K3 sProg1 sProg2 sProg3 steps1 stepm1 stepl1 alpha #> 12 210 420 Inf Inf -Inf 192 273   0.04   0.08   0.12      1   0.95   0.85 0.025 #> 19 210 420 Inf Inf -Inf 198 298   0.05   0.09   0.11      1   0.95   0.85 0.025 #>    beta xi2 xi3 c02 c03   c2 c3   b1   b2   b3 #> 12  0.1 0.7 0.7 100 150 0.75  1 1000 2000 3000 #> 19  0.1 0.7 0.7 100 150 0.75  1 1000 2000 3000 cat(comment(res))                                            # displays the optimization sequence, start and finish date of the optimization procedure. #>  #> optimization sequence HRgo: 0.7 0.75 0.8 0.85 0.9  #> optimization sequence d2: 20 25 30 35 40 45 50 55 60 65 70 75 80 85 90 95 100  #> set on date: 2022-08-12 07:48:42  #> finish date: 2022-08-12 07:54:33"},{"path":"https://sterniii3.github.io/drugdevelopR/reference/optimal_bias_binary.html","id":null,"dir":"Reference","previous_headings":"","what":"Optimal phase II/III drug development planning when discounting phase II results with binary endpoint — optimal_bias_binary","title":"Optimal phase II/III drug development planning when discounting phase II results with binary endpoint — optimal_bias_binary","text":"drugdevelopR package enables planning phase II/III drug development programs optimal sample size allocation go/-go decision rules including methods discounting phase II results (Preussler et. al, 2020).. binary endpoints treatment effect measured risk ratio (RR).assumed true treatment effects can assumed fixed modelled prior distribution. R Shiny application prior visualizes prior distributions used package. Fast coputing enabled parallel programming.","code":""},{"path":"https://sterniii3.github.io/drugdevelopR/reference/optimal_bias_binary.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Optimal phase II/III drug development planning when discounting phase II results with binary endpoint — optimal_bias_binary","text":"","code":"optimal_bias_binary(   w,   p0,   p11,   p12,   in1,   in2,   n2min,   n2max,   stepn2,   rrgomin,   rrgomax,   steprrgo,   adj = \"both\",   lambdamin = NULL,   lambdamax = NULL,   steplambda = NULL,   alphaCImin = NULL,   alphaCImax = NULL,   stepalphaCI = NULL,   alpha,   beta,   c2,   c3,   c02,   c03,   K = Inf,   N = Inf,   S = -Inf,   steps1 = 1,   stepm1 = 0.95,   stepl1 = 0.85,   b1,   b2,   b3,   fixed = FALSE,   num_cl = 1 )"},{"path":"https://sterniii3.github.io/drugdevelopR/reference/optimal_bias_binary.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Optimal phase II/III drug development planning when discounting phase II results with binary endpoint — optimal_bias_binary","text":"w weight mixture prior distribution p0 assumed true rate control group p11 assumed true rate treatment group p12 assumed true rate treatment group in1 amount information p11 terms sample size in2 amount information p12 terms sample size n2min minimal total sample size phase II; must even number n2max maximal total sample size phase II, must even number stepn2 stepsize optimization n2; must even number rrgomin minimal threshold value go/-go decision rule rrgomax maximal threshold value go/-go decision rule steprrgo stepsize optimization RRgo adj type adjustment, \"additive\", \"multiplicative\" \"\" lambdamin minimal adjustment parameter lambda lambdamax maximal adjustment parameter lambda steplambda stepsize adjustment parameter lambda alphaCImin minimal alphaCI alphaCImax maximal alphaCI stepalphaCI stepsize alphaCI alpha significance level beta 1-beta power calculation sample size phase III c2 variable per-patient cost phase II c3 variable per-patient cost phase III c02 fixed cost phase II c03 fixed cost phase III K constraint costs program, default: Inf, e.g. constraint N constraint total expected sample size program, default: Inf, e.g. constraint S constraint expected probability successful program, default: -Inf, e.g. constraint steps1 lower boundary effect size category \"small\" RR scale, default: 1 stepm1 lower boundary effect size category \"medium\" RR scale = upper boundary effect size category \"small\" RR scale, default: 0.95 stepl1 lower boundary effect size category \"large\" RR scale = upper boundary effect size category \"medium\" RR scale, default: 0.85 b1 expected gain effect size category \"small\" b2 expected gain effect size category \"medium\" b3 expected gain effect size category \"large\" fixed choose true treatment effects fixed random, TRUE p11 used fixed effect p1 num_cl number clusters used parallel computing, default: 1","code":""},{"path":"https://sterniii3.github.io/drugdevelopR/reference/optimal_bias_binary.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Optimal phase II/III drug development planning when discounting phase II results with binary endpoint — optimal_bias_binary","text":"output function optimal_binary data.frame containing optimization results: Method Type adjustment: multipl. (multiplicative) add. (additive) u maximal expected utility Adj optimal adjustment parameter (lambda alphaCI according Method) RRgo optimal threshold value decision rule go phase III n2 total sample size phase II n3 total sample size phase III; rounded next even natural number n total sample size program; n = n2 + n3 K maximal costs program pgo probability go phase III sProg probability successful program sProg1 probability successful program \"small\" treatment effect Phase III sProg2 probability successful program \"medium\" treatment effect Phase III sProg3 probability successful program \"large\" treatment effect Phase III K2 expected costs phase II K3 expected costs phase III input parameters. Taking cat(comment()) data.frame object lists used optimization sequences, start finish date optimization procedure.","code":""},{"path":"https://sterniii3.github.io/drugdevelopR/reference/optimal_bias_binary.html","id":"drugdevelopr-functions","dir":"Reference","previous_headings":"","what":"drugdevelopR functions","title":"Optimal phase II/III drug development planning when discounting phase II results with binary endpoint — optimal_bias_binary","text":"drugdevelopR package provides functions optimal_tte, optimal_binary optimal_normal plan optimal phase II/III drug development programs time--event (treatment effect measured hazard ratio (HR)), binary (treatment effect measured risk ratio (RR)) normally distributed (treatment effect measured standardized difference means (Delta)) endpoint, treatment effect modelled prior. Optimal phase II/III drug development planning fixed treatment effects can done help R Shiny application basic. Extensions optimal planning programs including methods discounting phase II results (function: optimal_bias, App: bias), optimal planning programs several phase III trials (function: optimal_multitrial, App: multitrial) optimal planning programs multiple arms (function: optimal_multiarm, App: multiarm).","code":""},{"path":"https://sterniii3.github.io/drugdevelopR/reference/optimal_bias_binary.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Optimal phase II/III drug development planning when discounting phase II results with binary endpoint — optimal_bias_binary","text":"IQWiG (2016). Allgemeine Methoden. Version 5.0, 10.07.2016, Technical Report. Available https://www.iqwig.de/de/methoden/methodenpapier.3020.html, assessed last 15.05.19.","code":""},{"path":"https://sterniii3.github.io/drugdevelopR/reference/optimal_bias_binary.html","id":"last-edited-by","dir":"Reference","previous_headings":"","what":"Last Edited By","title":"Optimal phase II/III drug development planning when discounting phase II results with binary endpoint — optimal_bias_binary","text":"Johannes Cepicka","code":""},{"path":"https://sterniii3.github.io/drugdevelopR/reference/optimal_bias_binary.html","id":"last-edit-date","dir":"Reference","previous_headings":"","what":"Last Edit Date","title":"Optimal phase II/III drug development planning when discounting phase II results with binary endpoint — optimal_bias_binary","text":"2022-04-23","code":""},{"path":"https://sterniii3.github.io/drugdevelopR/reference/optimal_bias_binary.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Optimal phase II/III drug development planning when discounting phase II results with binary endpoint — optimal_bias_binary","text":"","code":"res <- optimal_bias_binary(w = 0.3,                           # define parameters for prior   p0 = 0.6, p11 =  0.3, p12 = 0.5, in1 = 30, in2 = 60,   # (https://web.imbi.uni-heidelberg.de/prior/)   n2min = 20, n2max = 100, stepn2 = 4,                   # define optimization set for n2   rrgomin = 0.7, rrgomax = 0.9, steprrgo = 0.05,         # define optimization set for RRgo   adj = \"both\",                                          # choose type of adjustment   alpha = 0.05, beta = 0.1,                              # drug development planning parameters   lambdamin = 0.2, lambdamax = 1, steplambda = 0.05,     # define optimization set for lambda   alphaCImin = 0.025, alphaCImax = 0.5, stepalphaCI = 0.025, # define optimization set for alphaCI   c2 = 0.75, c3 = 1, c02 = 100, c03 = 150,               # define fixed and variable costs for phase II and III,   K = Inf, N = Inf, S = -Inf,                            # set maximal costs/ expected sample size for the program or minimal expected probability of a successful program   steps1 = 1,                                            # define lower boundary for \"small\"   stepm1 = 0.95,                                         # \"medium\"   stepl1 = 0.85,                                         # and \"large\" treatment effect size categories as proposed by IQWiG (2016)   b1 = 1000, b2 = 2000, b3 = 3000,                       # define expected benefit for a \"small\", \"medium\" and \"large\" treatment effect   fixed = FALSE,                                         # choose if true treatment effects are fixed or random   num_cl = 1)                                            # set number of cores used for parallelized computing (check maximum number possible with detectCores()) #>  #> Optimization progess for adjustment type  multiplicative #>  #>    |                                                                               |                                                                      |   0%   |                                                                               |====                                                                  |   6%   |                                                                               |========                                                              |  12%   |                                                                               |============                                                          |  18%   |                                                                               |================                                                      |  24%   |                                                                               |=====================                                                 |  29%   |                                                                               |====                                                                  |   6%   |                                                                               |========                                                              |  12%   |                                                                               |============                                                          |  18%   |                                                                               |================                                                      |  24%   |                                                                               |=====================                                                 |  29%   |                                                                               |====                                                                  |   6%   |                                                                               |========                                                              |  12%   |                                                                               |============                                                          |  18%   |                                                                               |================                                                      |  24%   |                                                                               |=====================                                                 |  29%   |                                                                               |====                                                                  |   6%   |                                                                               |========                                                              |  12%   |                                                                               |============                                                          |  18%   |                                                                               |================                                                      |  24%   |                                                                               |=====================                                                 |  29%   |                                                                               |====                                                                  |   6%   |                                                                               |========                                                              |  12%   |                                                                               |============                                                          |  18%   |                                                                               |================                                                      |  24%   |                                                                               |=====================                                                 |  29%   |                                                                               |====                                                                  |   6%   |                                                                               |========                                                              |  12%   |                                                                               |============                                                          |  18%   |                                                                               |================                                                      |  24%   |                                                                               |=====================                                                 |  29%   |                                                                               |====                                                                  |   6%   |                                                                               |========                                                              |  12%   |                                                                               |============                                                          |  18%   |                                                                               |================                                                      |  24%   |                                                                               |=====================                                                 |  29%   |                                                                               |====                                                                  |   6%   |                                                                               |========                                                              |  12%   |                                                                               |============                                                          |  18%   |                                                                               |================                                                      |  24%   |                                                                               |=====================                                                 |  29%   |                                                                               |====                                                                  |   6%   |                                                                               |========                                                              |  12%   |                                                                               |============                                                          |  18%   |                                                                               |================                                                      |  24%   |                                                                               |=====================                                                 |  29%   |                                                                               |====                                                                  |   6%   |                                                                               |========                                                              |  12%   |                                                                               |============                                                          |  18%   |                                                                               |================                                                      |  24%   |                                                                               |=====================                                                 |  29%   |                                                                               |====                                                                  |   6%   |                                                                               |========                                                              |  12%   |                                                                               |============                                                          |  18%   |                                                                               |================                                                      |  24%   |                                                                               |=====================                                                 |  29%   |                                                                               |====                                                                  |   6%   |                                                                               |========                                                              |  12%   |                                                                               |============                                                          |  18%   |                                                                               |================                                                      |  24%   |                                                                               |=====================                                                 |  29%   |                                                                               |====                                                                  |   6%   |                                                                               |========                                                              |  12%   |                                                                               |============                                                          |  18%   |                                                                               |================                                                      |  24%   |                                                                               |=====================                                                 |  29%   |                                                                               |====                                                                  |   6%   |                                                                               |========                                                              |  12%   |                                                                               |============                                                          |  18%   |                                                                               |================                                                      |  24%   |                                                                               |=====================                                                 |  29%   |                                                                               |====                                                                  |   6%   |                                                                               |========                                                              |  12%   |                                                                               |============                                                          |  18%   |                                                                               |================                                                      |  24%   |                                                                               |=====================                                                 |  29%   |                                                                               |====                                                                  |   6%   |                                                                               |========                                                              |  12%   |                                                                               |============                                                          |  18%   |                                                                               |================                                                      |  24%   |                                                                               |=====================                                                 |  29%   |                                                                               |====                                                                  |   6%   |                                                                               |========                                                              |  12%   |                                                                               |============                                                          |  18%   |                                                                               |================                                                      |  24%   |                                                                               |=====================                                                 |  29% #> Optimization progess for adjustment type  additive #>  #>    |                                                                               |                                                                      |   0%   |                                                                               |====                                                                  |   5%   |                                                                               |=======                                                               |  10%   |                                                                               |==========                                                            |  15%   |                                                                               |==============                                                        |  20%   |                                                                               |==================                                                    |  25%   |                                                                               |====                                                                  |   5%   |                                                                               |=======                                                               |  10%   |                                                                               |==========                                                            |  15%   |                                                                               |==============                                                        |  20%   |                                                                               |==================                                                    |  25%   |                                                                               |====                                                                  |   5%   |                                                                               |=======                                                               |  10%   |                                                                               |==========                                                            |  15%   |                                                                               |==============                                                        |  20%   |                                                                               |==================                                                    |  25%   |                                                                               |====                                                                  |   5%   |                                                                               |=======                                                               |  10%   |                                                                               |==========                                                            |  15%   |                                                                               |==============                                                        |  20%   |                                                                               |==================                                                    |  25%   |                                                                               |====                                                                  |   5%   |                                                                               |=======                                                               |  10%   |                                                                               |==========                                                            |  15%   |                                                                               |==============                                                        |  20%   |                                                                               |==================                                                    |  25%   |                                                                               |====                                                                  |   5%   |                                                                               |=======                                                               |  10%   |                                                                               |==========                                                            |  15%   |                                                                               |==============                                                        |  20%   |                                                                               |==================                                                    |  25%   |                                                                               |====                                                                  |   5%   |                                                                               |=======                                                               |  10%   |                                                                               |==========                                                            |  15%   |                                                                               |==============                                                        |  20%   |                                                                               |==================                                                    |  25%   |                                                                               |====                                                                  |   5%   |                                                                               |=======                                                               |  10%   |                                                                               |==========                                                            |  15%   |                                                                               |==============                                                        |  20%   |                                                                               |==================                                                    |  25%   |                                                                               |====                                                                  |   5%   |                                                                               |=======                                                               |  10%   |                                                                               |==========                                                            |  15%   |                                                                               |==============                                                        |  20%   |                                                                               |==================                                                    |  25%   |                                                                               |====                                                                  |   5%   |                                                                               |=======                                                               |  10%   |                                                                               |==========                                                            |  15%   |                                                                               |==============                                                        |  20%   |                                                                               |==================                                                    |  25%   |                                                                               |====                                                                  |   5%   |                                                                               |=======                                                               |  10%   |                                                                               |==========                                                            |  15%   |                                                                               |==============                                                        |  20%   |                                                                               |==================                                                    |  25%   |                                                                               |====                                                                  |   5%   |                                                                               |=======                                                               |  10%   |                                                                               |==========                                                            |  15%   |                                                                               |==============                                                        |  20%   |                                                                               |==================                                                    |  25%   |                                                                               |====                                                                  |   5%   |                                                                               |=======                                                               |  10%   |                                                                               |==========                                                            |  15%   |                                                                               |==============                                                        |  20%   |                                                                               |==================                                                    |  25%   |                                                                               |====                                                                  |   5%   |                                                                               |=======                                                               |  10%   |                                                                               |==========                                                            |  15%   |                                                                               |==============                                                        |  20%   |                                                                               |==================                                                    |  25%   |                                                                               |====                                                                  |   5%   |                                                                               |=======                                                               |  10%   |                                                                               |==========                                                            |  15%   |                                                                               |==============                                                        |  20%   |                                                                               |==================                                                    |  25%   |                                                                               |====                                                                  |   5%   |                                                                               |=======                                                               |  10%   |                                                                               |==========                                                            |  15%   |                                                                               |==============                                                        |  20%   |                                                                               |==================                                                    |  25%   |                                                                               |====                                                                  |   5%   |                                                                               |=======                                                               |  10%   |                                                                               |==========                                                            |  15%   |                                                                               |==============                                                        |  20%   |                                                                               |==================                                                    |  25%   |                                                                               |====                                                                  |   5%   |                                                                               |=======                                                               |  10%   |                                                                               |==========                                                            |  15%   |                                                                               |==============                                                        |  20%   |                                                                               |==================                                                    |  25%   |                                                                               |====                                                                  |   5%   |                                                                               |=======                                                               |  10%   |                                                                               |==========                                                            |  15%   |                                                                               |==============                                                        |  20%   |                                                                               |==================                                                    |  25%   |                                                                               |====                                                                  |   5%   |                                                                               |=======                                                               |  10%   |                                                                               |==========                                                            |  15%   |                                                                               |==============                                                        |  20%   |                                                                               |==================                                                    |  25% #>  #>  #> Optimization result: #>  #>         u   Adj RRgo  n2  n3   n  pgo sProg   w  p0 p11 p12 in1 in2   K  K2  K3 #> 11 776.51 0.700 0.85 100 370 470 0.66  0.56 0.3 0.6 0.3 0.5  30  60 Inf 175 469 #> 17 688.38 0.425 0.85 100 216 316 0.66  0.48 0.3 0.6 0.3 0.5  30  60 Inf 175 315 #>    sProg1 sProg2 sProg3 steps1 stepm1 stepl1 alpha beta c02 c03   c2 c3   b1 #> 11   0.06   0.14   0.36      1   0.95   0.85  0.05  0.1 100 150 0.75  1 1000 #> 17   0.06   0.13   0.28      1   0.95   0.85  0.05  0.1 100 150 0.75  1 1000 #>      b2   b3 #> 11 2000 3000 #> 17 2000 3000 #>  res #>         u   Adj RRgo  n2  n3   n  pgo sProg   w  p0 p11 p12 in1 in2   K  K2  K3 #> 11 776.51 0.700 0.85 100 370 470 0.66  0.56 0.3 0.6 0.3 0.5  30  60 Inf 175 469 #> 17 688.38 0.425 0.85 100 216 316 0.66  0.48 0.3 0.6 0.3 0.5  30  60 Inf 175 315 #>    sProg1 sProg2 sProg3 steps1 stepm1 stepl1 alpha beta c02 c03   c2 c3   b1 #> 11   0.06   0.14   0.36      1   0.95   0.85  0.05  0.1 100 150 0.75  1 1000 #> 17   0.06   0.13   0.28      1   0.95   0.85  0.05  0.1 100 150 0.75  1 1000 #>      b2   b3 #> 11 2000 3000 #> 17 2000 3000 cat(comment(res))                                        # displays the optimization sequence, start and finish date of the optimization procedure. #>  #> optimization sequence RRgo: 0.7 0.75 0.8 0.85 0.9  #> optimization sequence n2: 20 24 28 32 36 40 44 48 52 56 60 64 68 72 76 80 84 88 92 96 100  #> set on date: 2022-08-12 07:54:33  #> finish date: 2022-08-12 08:04:36"},{"path":"https://sterniii3.github.io/drugdevelopR/reference/optimal_bias_normal.html","id":null,"dir":"Reference","previous_headings":"","what":"Optimal phase II/III drug development planning with normally distributed endpoint — optimal_bias_normal","title":"Optimal phase II/III drug development planning with normally distributed endpoint — optimal_bias_normal","text":"drugdevelopR package enables planning phase II/III drug development programs optimal sample size allocation go/-go decision rules including methods discounting phase II results (Preussler et. al, 2020). normally distributed endpoints treatment effect measured standardized difference means (Delta). assumed true treatment effects can assumed fixed modelled prior distribution. R Shiny application prior visualizes prior distributions used package. Fast coputing enabled parallel programming.","code":""},{"path":"https://sterniii3.github.io/drugdevelopR/reference/optimal_bias_normal.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Optimal phase II/III drug development planning with normally distributed endpoint — optimal_bias_normal","text":"","code":"optimal_bias_normal(   w,   Delta1,   Delta2,   in1,   in2,   a,   b,   n2min,   n2max,   stepn2,   kappamin,   kappamax,   stepkappa,   adj = \"both\",   lambdamin = NULL,   lambdamax = NULL,   steplambda = NULL,   alphaCImin = NULL,   alphaCImax = NULL,   stepalphaCI = NULL,   alpha,   beta,   c2,   c3,   c02,   c03,   K = Inf,   N = Inf,   S = -Inf,   steps1 = 0,   stepm1 = 0.5,   stepl1 = 0.8,   b1,   b2,   b3,   fixed = FALSE,   num_cl = 1 )"},{"path":"https://sterniii3.github.io/drugdevelopR/reference/optimal_bias_normal.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Optimal phase II/III drug development planning with normally distributed endpoint — optimal_bias_normal","text":"w weight mixture prior distribution Delta1 assumed true treatment effect standardized difference means Delta2 assumed true treatment effect standardized difference means in1 amount information Delta1 terms sample size in2 amount information Delta2 terms sample size lower boundary truncation b upper boundary truncation n2min minimal total sample size phase II; must even number n2max maximal total sample size phase II, must even number stepn2 stepsize optimization n2; must even number kappamin minimal threshold value go/-go decision rule kappamax maximal threshold value go/-go decision rule stepkappa stepsize optimization kappa adj choose type adjustment: \"multiplicative\", \"additive\", \"\" (\"\") lambdamin minimal adjustment parameter lambda lambdamax maximal adjustment parameter lambda steplambda stepsize adjustment parameter lambda alphaCImin minimal alphaCI alphaCImax maximal alphaCI stepalphaCI stepsize alphaCI alpha significance level beta 1-beta power calculation sample size phase III c2 variable per-patient cost phase II c3 variable per-patient cost phase III c02 fixed cost phase II c03 fixed cost phase III K constraint costs program, default: Inf, e.g. constraint N constraint total expected sample size program, default: Inf, e.g. constraint S constraint expected probability successful program, default: -Inf, e.g. constraint steps1 lower boundary effect size category \"small\", default: 0 stepm1 lower boundary effect size category \"medium\" = upper boundary effect size category \"small\" default: 0.5 stepl1 lower boundary effect size category \"large\" = upper boundary effect size category \"medium\", default: 0.8 b1 expected gain effect size category \"small\" b2 expected gain effect size category \"medium\" b3 expected gain effect size category \"large\" fixed choose true treatment effects fixed random, TRUE hr1 used fixed effect num_cl number clusters used parallel computing, default: 1","code":""},{"path":"https://sterniii3.github.io/drugdevelopR/reference/optimal_bias_normal.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Optimal phase II/III drug development planning with normally distributed endpoint — optimal_bias_normal","text":"output function optimal_bias_normal data.frame containing optimization results: Method Type adjustment: multipl. (multiplicative) add. (additive) u maximal expected utility Adj optimal adjustment parameter (lambda alphaCI according Method) kappa optimal threshold value decision rule go phase III n2 total sample size phase II n3 total sample size phase III; rounded next even natural number n total sample size program; n = n2 + n3 K maximal costs program pgo probability go phase III sProg probability successful program sProg1 probability successful program \"small\" treatment effect Phase III sProg2 probability successful program \"medium\" treatment effect Phase III sProg3 probability successful program \"large\" treatment effect Phase III K2 expected costs phase II K3 expected costs phase III input parameters. Taking cat(comment()) data.frame object lists used optimization sequences, start finish date optimization procedure.","code":""},{"path":"https://sterniii3.github.io/drugdevelopR/reference/optimal_bias_normal.html","id":"drugdevelopr-functions","dir":"Reference","previous_headings":"","what":"drugdevelopR functions","title":"Optimal phase II/III drug development planning with normally distributed endpoint — optimal_bias_normal","text":"drugdevelopR package provides functions optimal_tte, optimal_binary optimal_normal plan optimal phase II/III drug development programs time--event (treatment effect measured hazard ratio (HR)), binary (treatment effect measured risk ratio (RR)) normally distributed (treatment effect measured standardized difference means (Delta)) endpoint, treatment effect assumed fixed modelled prior. Optimal phase II/III drug development planning fixed treatment effects can also done help R Shiny application basic. Extensions optimal planning programs including methods discounting phase II results (function: optimal_bias, App: bias), optimal planning programs several phase III trials (function: optimal_multitrial, App: multitrial) optimal planning programs multiple arms (function: optimal_multiarm, App: multiarm).","code":""},{"path":"https://sterniii3.github.io/drugdevelopR/reference/optimal_bias_normal.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Optimal phase II/III drug development planning with normally distributed endpoint — optimal_bias_normal","text":"Cohen, J. (1988). Statistical power analysis behavioral sciences.","code":""},{"path":"https://sterniii3.github.io/drugdevelopR/reference/optimal_bias_normal.html","id":"last-edited-by","dir":"Reference","previous_headings":"","what":"Last Edited By","title":"Optimal phase II/III drug development planning with normally distributed endpoint — optimal_bias_normal","text":"Johannes Cepicka","code":""},{"path":"https://sterniii3.github.io/drugdevelopR/reference/optimal_bias_normal.html","id":"last-edit-date","dir":"Reference","previous_headings":"","what":"Last Edit Date","title":"Optimal phase II/III drug development planning with normally distributed endpoint — optimal_bias_normal","text":"2022-04-23","code":""},{"path":"https://sterniii3.github.io/drugdevelopR/reference/optimal_bias_normal.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Optimal phase II/III drug development planning with normally distributed endpoint — optimal_bias_normal","text":"","code":"res <- optimal_bias_normal(w=0.3,                                 # define parameters for prior   Delta1 = 0.375, Delta2 = 0.625, in1=300, in2=600,          # (https://web.imbi.uni-heidelberg.de/prior/)   a = 0.25, b = 0.75,   n2min = 20, n2max = 100, stepn2 = 4,                       # define optimization set for n2   kappamin = 0.02, kappamax = 0.2, stepkappa = 0.02,         # define optimization set for kappa   adj = \"both\",                                              # choose type of adjustment   lambdamin = 0.2, lambdamax = 1, steplambda = 0.05,         # define optimization set for lambda   alphaCImin = 0.025, alphaCImax = 0.5, stepalphaCI = 0.025, # define optimization set for alphaCI   alpha = 0.05, beta = 0.1,                                  # drug development planning parameters   c2 = 0.675, c3 = 0.72, c02 = 15, c03 = 20,                 # define fixed and variable costs for phase II and III   K = Inf, N = Inf, S = -Inf,                                # set maximal costs/ expected sample size for the program or minimal expected probability of a successful program   steps1 = 0,                                                # define lower boundary for \"small\"   stepm1 = 0.5,                                              # \"medium\"   stepl1 = 0.8,                                              # and \"large\" treatment effect size categories as proposed by e.g. Cohen (1988)   b1 = 3000, b2 = 8000, b3 = 10000,                          # define expected benefit for a \"small\", \"medium\" and \"large\" treatment effect   fixed = FALSE,                                             # choose if true treatment effects are fixed or random   num_cl = 1)                                                # set number of cores used for parallelized computing (check maximum number possible with detectCores()) #>  #> Optimization progess for adjustment type  multiplicative #>  #>    |                                                                               |                                                                      |   0%   |                                                                               |====                                                                  |   6%   |                                                                               |========                                                              |  12%   |                                                                               |============                                                          |  18%   |                                                                               |================                                                      |  24%   |                                                                               |=====================                                                 |  29%   |                                                                               |=========================                                             |  35%   |                                                                               |=============================                                         |  41%   |                                                                               |=================================                                     |  47%   |                                                                               |=====================================                                 |  53%   |                                                                               |=========================================                             |  59%   |                                                                               |=============================================                         |  65%   |                                                                               |=================================================                     |  71%   |                                                                               |======================================================                |  76%   |                                                                               |==========================================================            |  82%   |                                                                               |==============================================================        |  88%   |                                                                               |==================================================================    |  94%   |                                                                               |======================================================================| 100% #> Optimization progess for adjustment type  additive #>  #>    |                                                                               |                                                                      |   0%   |                                                                               |====                                                                  |   5%   |                                                                               |=======                                                               |  10%   |                                                                               |==========                                                            |  15%   |                                                                               |==============                                                        |  20%   |                                                                               |==================                                                    |  25%   |                                                                               |=====================                                                 |  30%   |                                                                               |========================                                              |  35%   |                                                                               |============================                                          |  40%   |                                                                               |================================                                      |  45%   |                                                                               |===================================                                   |  50%   |                                                                               |======================================                                |  55%   |                                                                               |==========================================                            |  60%   |                                                                               |==============================================                        |  65%   |                                                                               |=================================================                     |  70%   |                                                                               |====================================================                  |  75%   |                                                                               |========================================================              |  80%   |                                                                               |============================================================          |  85%   |                                                                               |===============================================================       |  90%   |                                                                               |==================================================================    |  95%   |                                                                               |======================================================================| 100% #>  #>  #> Optimization result: #>  #>        u   Adj Kappa n2    n3     n   pgo sProg   w Delta1 Delta2 in1 in2    a #> 1  -9999 0.200  0.02 20 -9999 -9979 -9999 -9999 0.3  0.375  0.625 300 600 0.25 #> 2  -9999 0.250  0.02 20 -9999 -9979 -9999 -9999 0.3  0.375  0.625 300 600 0.25 #> 3  -9999 0.300  0.02 20 -9999 -9979 -9999 -9999 0.3  0.375  0.625 300 600 0.25 #> 4  -9999 0.350  0.02 20 -9999 -9979 -9999 -9999 0.3  0.375  0.625 300 600 0.25 #> 5  -9999 0.400  0.02 20 -9999 -9979 -9999 -9999 0.3  0.375  0.625 300 600 0.25 #> 6  -9999 0.450  0.02 20 -9999 -9979 -9999 -9999 0.3  0.375  0.625 300 600 0.25 #> 7  -9999 0.500  0.02 20 -9999 -9979 -9999 -9999 0.3  0.375  0.625 300 600 0.25 #> 8  -9999 0.550  0.02 20 -9999 -9979 -9999 -9999 0.3  0.375  0.625 300 600 0.25 #> 9  -9999 0.600  0.02 20 -9999 -9979 -9999 -9999 0.3  0.375  0.625 300 600 0.25 #> 10 -9999 0.650  0.02 20 -9999 -9979 -9999 -9999 0.3  0.375  0.625 300 600 0.25 #> 11 -9999 0.700  0.02 20 -9999 -9979 -9999 -9999 0.3  0.375  0.625 300 600 0.25 #> 12 -9999 0.750  0.02 20 -9999 -9979 -9999 -9999 0.3  0.375  0.625 300 600 0.25 #> 13 -9999 0.800  0.02 20 -9999 -9979 -9999 -9999 0.3  0.375  0.625 300 600 0.25 #> 14 -9999 0.850  0.02 20 -9999 -9979 -9999 -9999 0.3  0.375  0.625 300 600 0.25 #> 15 -9999 0.900  0.02 20 -9999 -9979 -9999 -9999 0.3  0.375  0.625 300 600 0.25 #> 16 -9999 0.950  0.02 20 -9999 -9979 -9999 -9999 0.3  0.375  0.625 300 600 0.25 #> 17 -9999 1.000  0.02 20 -9999 -9979 -9999 -9999 0.3  0.375  0.625 300 600 0.25 #> 18 -9999 0.025  0.02 20 -9999 -9979 -9999 -9999 0.3  0.375  0.625 300 600 0.25 #> 19 -9999 0.050  0.02 20 -9999 -9979 -9999 -9999 0.3  0.375  0.625 300 600 0.25 #> 20 -9999 0.075  0.02 20 -9999 -9979 -9999 -9999 0.3  0.375  0.625 300 600 0.25 #> 21 -9999 0.100  0.02 20 -9999 -9979 -9999 -9999 0.3  0.375  0.625 300 600 0.25 #> 22 -9999 0.125  0.02 20 -9999 -9979 -9999 -9999 0.3  0.375  0.625 300 600 0.25 #> 23 -9999 0.150  0.02 20 -9999 -9979 -9999 -9999 0.3  0.375  0.625 300 600 0.25 #> 24 -9999 0.175  0.02 20 -9999 -9979 -9999 -9999 0.3  0.375  0.625 300 600 0.25 #> 25 -9999 0.200  0.02 20 -9999 -9979 -9999 -9999 0.3  0.375  0.625 300 600 0.25 #> 26 -9999 0.225  0.02 20 -9999 -9979 -9999 -9999 0.3  0.375  0.625 300 600 0.25 #> 27 -9999 0.250  0.02 20 -9999 -9979 -9999 -9999 0.3  0.375  0.625 300 600 0.25 #> 28 -9999 0.275  0.02 20 -9999 -9979 -9999 -9999 0.3  0.375  0.625 300 600 0.25 #> 29 -9999 0.300  0.02 20 -9999 -9979 -9999 -9999 0.3  0.375  0.625 300 600 0.25 #> 30 -9999 0.325  0.02 20 -9999 -9979 -9999 -9999 0.3  0.375  0.625 300 600 0.25 #> 31 -9999 0.350  0.02 20 -9999 -9979 -9999 -9999 0.3  0.375  0.625 300 600 0.25 #> 32 -9999 0.375  0.02 20 -9999 -9979 -9999 -9999 0.3  0.375  0.625 300 600 0.25 #> 33 -9999 0.400  0.02 20 -9999 -9979 -9999 -9999 0.3  0.375  0.625 300 600 0.25 #> 34 -9999 0.425  0.02 20 -9999 -9979 -9999 -9999 0.3  0.375  0.625 300 600 0.25 #> 35 -9999 0.450  0.02 20 -9999 -9979 -9999 -9999 0.3  0.375  0.625 300 600 0.25 #> 36 -9999 0.475  0.02 20 -9999 -9979 -9999 -9999 0.3  0.375  0.625 300 600 0.25 #> 37 -9999 0.500  0.02 20 -9999 -9979 -9999 -9999 0.3  0.375  0.625 300 600 0.25 #>       b   K    K2    K3 sProg1 sProg2 sProg3 steps1 stepm1 stepl1 alpha beta #> 1  0.75 Inf -9999 -9999  -9999  -9999  -9999      0    0.5    0.8  0.05  0.1 #> 2  0.75 Inf -9999 -9999  -9999  -9999  -9999      0    0.5    0.8  0.05  0.1 #> 3  0.75 Inf -9999 -9999  -9999  -9999  -9999      0    0.5    0.8  0.05  0.1 #> 4  0.75 Inf -9999 -9999  -9999  -9999  -9999      0    0.5    0.8  0.05  0.1 #> 5  0.75 Inf -9999 -9999  -9999  -9999  -9999      0    0.5    0.8  0.05  0.1 #> 6  0.75 Inf -9999 -9999  -9999  -9999  -9999      0    0.5    0.8  0.05  0.1 #> 7  0.75 Inf -9999 -9999  -9999  -9999  -9999      0    0.5    0.8  0.05  0.1 #> 8  0.75 Inf -9999 -9999  -9999  -9999  -9999      0    0.5    0.8  0.05  0.1 #> 9  0.75 Inf -9999 -9999  -9999  -9999  -9999      0    0.5    0.8  0.05  0.1 #> 10 0.75 Inf -9999 -9999  -9999  -9999  -9999      0    0.5    0.8  0.05  0.1 #> 11 0.75 Inf -9999 -9999  -9999  -9999  -9999      0    0.5    0.8  0.05  0.1 #> 12 0.75 Inf -9999 -9999  -9999  -9999  -9999      0    0.5    0.8  0.05  0.1 #> 13 0.75 Inf -9999 -9999  -9999  -9999  -9999      0    0.5    0.8  0.05  0.1 #> 14 0.75 Inf -9999 -9999  -9999  -9999  -9999      0    0.5    0.8  0.05  0.1 #> 15 0.75 Inf -9999 -9999  -9999  -9999  -9999      0    0.5    0.8  0.05  0.1 #> 16 0.75 Inf -9999 -9999  -9999  -9999  -9999      0    0.5    0.8  0.05  0.1 #> 17 0.75 Inf -9999 -9999  -9999  -9999  -9999      0    0.5    0.8  0.05  0.1 #> 18 0.75 Inf -9999 -9999  -9999  -9999  -9999      0    0.5    0.8  0.05  0.1 #> 19 0.75 Inf -9999 -9999  -9999  -9999  -9999      0    0.5    0.8  0.05  0.1 #> 20 0.75 Inf -9999 -9999  -9999  -9999  -9999      0    0.5    0.8  0.05  0.1 #> 21 0.75 Inf -9999 -9999  -9999  -9999  -9999      0    0.5    0.8  0.05  0.1 #> 22 0.75 Inf -9999 -9999  -9999  -9999  -9999      0    0.5    0.8  0.05  0.1 #> 23 0.75 Inf -9999 -9999  -9999  -9999  -9999      0    0.5    0.8  0.05  0.1 #> 24 0.75 Inf -9999 -9999  -9999  -9999  -9999      0    0.5    0.8  0.05  0.1 #> 25 0.75 Inf -9999 -9999  -9999  -9999  -9999      0    0.5    0.8  0.05  0.1 #> 26 0.75 Inf -9999 -9999  -9999  -9999  -9999      0    0.5    0.8  0.05  0.1 #> 27 0.75 Inf -9999 -9999  -9999  -9999  -9999      0    0.5    0.8  0.05  0.1 #> 28 0.75 Inf -9999 -9999  -9999  -9999  -9999      0    0.5    0.8  0.05  0.1 #> 29 0.75 Inf -9999 -9999  -9999  -9999  -9999      0    0.5    0.8  0.05  0.1 #> 30 0.75 Inf -9999 -9999  -9999  -9999  -9999      0    0.5    0.8  0.05  0.1 #> 31 0.75 Inf -9999 -9999  -9999  -9999  -9999      0    0.5    0.8  0.05  0.1 #> 32 0.75 Inf -9999 -9999  -9999  -9999  -9999      0    0.5    0.8  0.05  0.1 #> 33 0.75 Inf -9999 -9999  -9999  -9999  -9999      0    0.5    0.8  0.05  0.1 #> 34 0.75 Inf -9999 -9999  -9999  -9999  -9999      0    0.5    0.8  0.05  0.1 #> 35 0.75 Inf -9999 -9999  -9999  -9999  -9999      0    0.5    0.8  0.05  0.1 #> 36 0.75 Inf -9999 -9999  -9999  -9999  -9999      0    0.5    0.8  0.05  0.1 #> 37 0.75 Inf -9999 -9999  -9999  -9999  -9999      0    0.5    0.8  0.05  0.1 #>    c02 c03    c2   c3   b1   b2    b3 #> 1   15  20 0.675 0.72 3000 8000 10000 #> 2   15  20 0.675 0.72 3000 8000 10000 #> 3   15  20 0.675 0.72 3000 8000 10000 #> 4   15  20 0.675 0.72 3000 8000 10000 #> 5   15  20 0.675 0.72 3000 8000 10000 #> 6   15  20 0.675 0.72 3000 8000 10000 #> 7   15  20 0.675 0.72 3000 8000 10000 #> 8   15  20 0.675 0.72 3000 8000 10000 #> 9   15  20 0.675 0.72 3000 8000 10000 #> 10  15  20 0.675 0.72 3000 8000 10000 #> 11  15  20 0.675 0.72 3000 8000 10000 #> 12  15  20 0.675 0.72 3000 8000 10000 #> 13  15  20 0.675 0.72 3000 8000 10000 #> 14  15  20 0.675 0.72 3000 8000 10000 #> 15  15  20 0.675 0.72 3000 8000 10000 #> 16  15  20 0.675 0.72 3000 8000 10000 #> 17  15  20 0.675 0.72 3000 8000 10000 #> 18  15  20 0.675 0.72 3000 8000 10000 #> 19  15  20 0.675 0.72 3000 8000 10000 #> 20  15  20 0.675 0.72 3000 8000 10000 #> 21  15  20 0.675 0.72 3000 8000 10000 #> 22  15  20 0.675 0.72 3000 8000 10000 #> 23  15  20 0.675 0.72 3000 8000 10000 #> 24  15  20 0.675 0.72 3000 8000 10000 #> 25  15  20 0.675 0.72 3000 8000 10000 #> 26  15  20 0.675 0.72 3000 8000 10000 #> 27  15  20 0.675 0.72 3000 8000 10000 #> 28  15  20 0.675 0.72 3000 8000 10000 #> 29  15  20 0.675 0.72 3000 8000 10000 #> 30  15  20 0.675 0.72 3000 8000 10000 #> 31  15  20 0.675 0.72 3000 8000 10000 #> 32  15  20 0.675 0.72 3000 8000 10000 #> 33  15  20 0.675 0.72 3000 8000 10000 #> 34  15  20 0.675 0.72 3000 8000 10000 #> 35  15  20 0.675 0.72 3000 8000 10000 #> 36  15  20 0.675 0.72 3000 8000 10000 #> 37  15  20 0.675 0.72 3000 8000 10000 #>  res #>        u   Adj Kappa n2    n3     n   pgo sProg   w Delta1 Delta2 in1 in2    a #> 1  -9999 0.200  0.02 20 -9999 -9979 -9999 -9999 0.3  0.375  0.625 300 600 0.25 #> 2  -9999 0.250  0.02 20 -9999 -9979 -9999 -9999 0.3  0.375  0.625 300 600 0.25 #> 3  -9999 0.300  0.02 20 -9999 -9979 -9999 -9999 0.3  0.375  0.625 300 600 0.25 #> 4  -9999 0.350  0.02 20 -9999 -9979 -9999 -9999 0.3  0.375  0.625 300 600 0.25 #> 5  -9999 0.400  0.02 20 -9999 -9979 -9999 -9999 0.3  0.375  0.625 300 600 0.25 #> 6  -9999 0.450  0.02 20 -9999 -9979 -9999 -9999 0.3  0.375  0.625 300 600 0.25 #> 7  -9999 0.500  0.02 20 -9999 -9979 -9999 -9999 0.3  0.375  0.625 300 600 0.25 #> 8  -9999 0.550  0.02 20 -9999 -9979 -9999 -9999 0.3  0.375  0.625 300 600 0.25 #> 9  -9999 0.600  0.02 20 -9999 -9979 -9999 -9999 0.3  0.375  0.625 300 600 0.25 #> 10 -9999 0.650  0.02 20 -9999 -9979 -9999 -9999 0.3  0.375  0.625 300 600 0.25 #> 11 -9999 0.700  0.02 20 -9999 -9979 -9999 -9999 0.3  0.375  0.625 300 600 0.25 #> 12 -9999 0.750  0.02 20 -9999 -9979 -9999 -9999 0.3  0.375  0.625 300 600 0.25 #> 13 -9999 0.800  0.02 20 -9999 -9979 -9999 -9999 0.3  0.375  0.625 300 600 0.25 #> 14 -9999 0.850  0.02 20 -9999 -9979 -9999 -9999 0.3  0.375  0.625 300 600 0.25 #> 15 -9999 0.900  0.02 20 -9999 -9979 -9999 -9999 0.3  0.375  0.625 300 600 0.25 #> 16 -9999 0.950  0.02 20 -9999 -9979 -9999 -9999 0.3  0.375  0.625 300 600 0.25 #> 17 -9999 1.000  0.02 20 -9999 -9979 -9999 -9999 0.3  0.375  0.625 300 600 0.25 #> 18 -9999 0.025  0.02 20 -9999 -9979 -9999 -9999 0.3  0.375  0.625 300 600 0.25 #> 19 -9999 0.050  0.02 20 -9999 -9979 -9999 -9999 0.3  0.375  0.625 300 600 0.25 #> 20 -9999 0.075  0.02 20 -9999 -9979 -9999 -9999 0.3  0.375  0.625 300 600 0.25 #> 21 -9999 0.100  0.02 20 -9999 -9979 -9999 -9999 0.3  0.375  0.625 300 600 0.25 #> 22 -9999 0.125  0.02 20 -9999 -9979 -9999 -9999 0.3  0.375  0.625 300 600 0.25 #> 23 -9999 0.150  0.02 20 -9999 -9979 -9999 -9999 0.3  0.375  0.625 300 600 0.25 #> 24 -9999 0.175  0.02 20 -9999 -9979 -9999 -9999 0.3  0.375  0.625 300 600 0.25 #> 25 -9999 0.200  0.02 20 -9999 -9979 -9999 -9999 0.3  0.375  0.625 300 600 0.25 #> 26 -9999 0.225  0.02 20 -9999 -9979 -9999 -9999 0.3  0.375  0.625 300 600 0.25 #> 27 -9999 0.250  0.02 20 -9999 -9979 -9999 -9999 0.3  0.375  0.625 300 600 0.25 #> 28 -9999 0.275  0.02 20 -9999 -9979 -9999 -9999 0.3  0.375  0.625 300 600 0.25 #> 29 -9999 0.300  0.02 20 -9999 -9979 -9999 -9999 0.3  0.375  0.625 300 600 0.25 #> 30 -9999 0.325  0.02 20 -9999 -9979 -9999 -9999 0.3  0.375  0.625 300 600 0.25 #> 31 -9999 0.350  0.02 20 -9999 -9979 -9999 -9999 0.3  0.375  0.625 300 600 0.25 #> 32 -9999 0.375  0.02 20 -9999 -9979 -9999 -9999 0.3  0.375  0.625 300 600 0.25 #> 33 -9999 0.400  0.02 20 -9999 -9979 -9999 -9999 0.3  0.375  0.625 300 600 0.25 #> 34 -9999 0.425  0.02 20 -9999 -9979 -9999 -9999 0.3  0.375  0.625 300 600 0.25 #> 35 -9999 0.450  0.02 20 -9999 -9979 -9999 -9999 0.3  0.375  0.625 300 600 0.25 #> 36 -9999 0.475  0.02 20 -9999 -9979 -9999 -9999 0.3  0.375  0.625 300 600 0.25 #> 37 -9999 0.500  0.02 20 -9999 -9979 -9999 -9999 0.3  0.375  0.625 300 600 0.25 #>       b   K    K2    K3 sProg1 sProg2 sProg3 steps1 stepm1 stepl1 alpha beta #> 1  0.75 Inf -9999 -9999  -9999  -9999  -9999      0    0.5    0.8  0.05  0.1 #> 2  0.75 Inf -9999 -9999  -9999  -9999  -9999      0    0.5    0.8  0.05  0.1 #> 3  0.75 Inf -9999 -9999  -9999  -9999  -9999      0    0.5    0.8  0.05  0.1 #> 4  0.75 Inf -9999 -9999  -9999  -9999  -9999      0    0.5    0.8  0.05  0.1 #> 5  0.75 Inf -9999 -9999  -9999  -9999  -9999      0    0.5    0.8  0.05  0.1 #> 6  0.75 Inf -9999 -9999  -9999  -9999  -9999      0    0.5    0.8  0.05  0.1 #> 7  0.75 Inf -9999 -9999  -9999  -9999  -9999      0    0.5    0.8  0.05  0.1 #> 8  0.75 Inf -9999 -9999  -9999  -9999  -9999      0    0.5    0.8  0.05  0.1 #> 9  0.75 Inf -9999 -9999  -9999  -9999  -9999      0    0.5    0.8  0.05  0.1 #> 10 0.75 Inf -9999 -9999  -9999  -9999  -9999      0    0.5    0.8  0.05  0.1 #> 11 0.75 Inf -9999 -9999  -9999  -9999  -9999      0    0.5    0.8  0.05  0.1 #> 12 0.75 Inf -9999 -9999  -9999  -9999  -9999      0    0.5    0.8  0.05  0.1 #> 13 0.75 Inf -9999 -9999  -9999  -9999  -9999      0    0.5    0.8  0.05  0.1 #> 14 0.75 Inf -9999 -9999  -9999  -9999  -9999      0    0.5    0.8  0.05  0.1 #> 15 0.75 Inf -9999 -9999  -9999  -9999  -9999      0    0.5    0.8  0.05  0.1 #> 16 0.75 Inf -9999 -9999  -9999  -9999  -9999      0    0.5    0.8  0.05  0.1 #> 17 0.75 Inf -9999 -9999  -9999  -9999  -9999      0    0.5    0.8  0.05  0.1 #> 18 0.75 Inf -9999 -9999  -9999  -9999  -9999      0    0.5    0.8  0.05  0.1 #> 19 0.75 Inf -9999 -9999  -9999  -9999  -9999      0    0.5    0.8  0.05  0.1 #> 20 0.75 Inf -9999 -9999  -9999  -9999  -9999      0    0.5    0.8  0.05  0.1 #> 21 0.75 Inf -9999 -9999  -9999  -9999  -9999      0    0.5    0.8  0.05  0.1 #> 22 0.75 Inf -9999 -9999  -9999  -9999  -9999      0    0.5    0.8  0.05  0.1 #> 23 0.75 Inf -9999 -9999  -9999  -9999  -9999      0    0.5    0.8  0.05  0.1 #> 24 0.75 Inf -9999 -9999  -9999  -9999  -9999      0    0.5    0.8  0.05  0.1 #> 25 0.75 Inf -9999 -9999  -9999  -9999  -9999      0    0.5    0.8  0.05  0.1 #> 26 0.75 Inf -9999 -9999  -9999  -9999  -9999      0    0.5    0.8  0.05  0.1 #> 27 0.75 Inf -9999 -9999  -9999  -9999  -9999      0    0.5    0.8  0.05  0.1 #> 28 0.75 Inf -9999 -9999  -9999  -9999  -9999      0    0.5    0.8  0.05  0.1 #> 29 0.75 Inf -9999 -9999  -9999  -9999  -9999      0    0.5    0.8  0.05  0.1 #> 30 0.75 Inf -9999 -9999  -9999  -9999  -9999      0    0.5    0.8  0.05  0.1 #> 31 0.75 Inf -9999 -9999  -9999  -9999  -9999      0    0.5    0.8  0.05  0.1 #> 32 0.75 Inf -9999 -9999  -9999  -9999  -9999      0    0.5    0.8  0.05  0.1 #> 33 0.75 Inf -9999 -9999  -9999  -9999  -9999      0    0.5    0.8  0.05  0.1 #> 34 0.75 Inf -9999 -9999  -9999  -9999  -9999      0    0.5    0.8  0.05  0.1 #> 35 0.75 Inf -9999 -9999  -9999  -9999  -9999      0    0.5    0.8  0.05  0.1 #> 36 0.75 Inf -9999 -9999  -9999  -9999  -9999      0    0.5    0.8  0.05  0.1 #> 37 0.75 Inf -9999 -9999  -9999  -9999  -9999      0    0.5    0.8  0.05  0.1 #>    c02 c03    c2   c3   b1   b2    b3 #> 1   15  20 0.675 0.72 3000 8000 10000 #> 2   15  20 0.675 0.72 3000 8000 10000 #> 3   15  20 0.675 0.72 3000 8000 10000 #> 4   15  20 0.675 0.72 3000 8000 10000 #> 5   15  20 0.675 0.72 3000 8000 10000 #> 6   15  20 0.675 0.72 3000 8000 10000 #> 7   15  20 0.675 0.72 3000 8000 10000 #> 8   15  20 0.675 0.72 3000 8000 10000 #> 9   15  20 0.675 0.72 3000 8000 10000 #> 10  15  20 0.675 0.72 3000 8000 10000 #> 11  15  20 0.675 0.72 3000 8000 10000 #> 12  15  20 0.675 0.72 3000 8000 10000 #> 13  15  20 0.675 0.72 3000 8000 10000 #> 14  15  20 0.675 0.72 3000 8000 10000 #> 15  15  20 0.675 0.72 3000 8000 10000 #> 16  15  20 0.675 0.72 3000 8000 10000 #> 17  15  20 0.675 0.72 3000 8000 10000 #> 18  15  20 0.675 0.72 3000 8000 10000 #> 19  15  20 0.675 0.72 3000 8000 10000 #> 20  15  20 0.675 0.72 3000 8000 10000 #> 21  15  20 0.675 0.72 3000 8000 10000 #> 22  15  20 0.675 0.72 3000 8000 10000 #> 23  15  20 0.675 0.72 3000 8000 10000 #> 24  15  20 0.675 0.72 3000 8000 10000 #> 25  15  20 0.675 0.72 3000 8000 10000 #> 26  15  20 0.675 0.72 3000 8000 10000 #> 27  15  20 0.675 0.72 3000 8000 10000 #> 28  15  20 0.675 0.72 3000 8000 10000 #> 29  15  20 0.675 0.72 3000 8000 10000 #> 30  15  20 0.675 0.72 3000 8000 10000 #> 31  15  20 0.675 0.72 3000 8000 10000 #> 32  15  20 0.675 0.72 3000 8000 10000 #> 33  15  20 0.675 0.72 3000 8000 10000 #> 34  15  20 0.675 0.72 3000 8000 10000 #> 35  15  20 0.675 0.72 3000 8000 10000 #> 36  15  20 0.675 0.72 3000 8000 10000 #> 37  15  20 0.675 0.72 3000 8000 10000 cat(comment(res))                                        # displays the optimization sequence, start and finish date of the optimization procedure. #>  #> optimization sequence kappa: 0.02 0.04 0.06 0.08 0.1 0.12 0.14 0.16 0.18 0.2  #> optimization sequence n2: 20 24 28 32 36 40 44 48 52 56 60 64 68 72 76 80 84 88 92 96 100  #> set on date: 2022-08-12 08:04:36  #> finish date: 2022-08-12 08:09:15"},{"path":"https://sterniii3.github.io/drugdevelopR/reference/optimal_binary.html","id":null,"dir":"Reference","previous_headings":"","what":"Optimal phase II/III drug development planning with binary endpoint — optimal_binary","title":"Optimal phase II/III drug development planning with binary endpoint — optimal_binary","text":"drugdevelopR package enables planning phase II/III drug development programs optimal sample size allocation go/-go decision rules. binary endpoints treatment effect measured risk ratio (RR).assumed true treatment effects can assumed fixed modelled prior distribution. R Shiny application prior visualizes prior distributions used package. Fast coputing enabled parallel programming.","code":""},{"path":"https://sterniii3.github.io/drugdevelopR/reference/optimal_binary.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Optimal phase II/III drug development planning with binary endpoint — optimal_binary","text":"","code":"optimal_binary(   w,   p0,   p11,   p12,   in1,   in2,   n2min,   n2max,   stepn2,   rrgomin,   rrgomax,   steprrgo,   alpha,   beta,   c2,   c3,   c02,   c03,   K = Inf,   N = Inf,   S = -Inf,   steps1 = 1,   stepm1 = 0.95,   stepl1 = 0.85,   b1,   b2,   b3,   gamma = 0,   fixed = FALSE,   skipII = FALSE,   num_cl = 1 )"},{"path":"https://sterniii3.github.io/drugdevelopR/reference/optimal_binary.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Optimal phase II/III drug development planning with binary endpoint — optimal_binary","text":"w weight mixture prior distribution p0 assumed true rate control group p11 assumed true rate treatment group p12 assumed true rate treatment group in1 amount information p11 terms sample size in2 amount information p12 terms sample size n2min minimal total sample size phase II; must even number n2max maximal total sample size phase II, must even number stepn2 stepsize optimization n2; must even number rrgomin minimal threshold value go/-go decision rule rrgomax maximal threshold value go/-go decision rule steprrgo stepsize optimization RRgo alpha significance level beta 1-beta power calculation sample size phase III c2 variable per-patient cost phase II c3 variable per-patient cost phase III c02 fixed cost phase II c03 fixed cost phase III K constraint costs program, default: Inf, e.g. constraint N constraint total expected sample size program, default: Inf, e.g. constraint S constraint expected probability successful program, default: -Inf, e.g. constraint steps1 lower boundary effect size category \"small\" RR scale, default: 1 stepm1 lower boundary effect size category \"medium\" RR scale = upper boundary effect size category \"small\" RR scale, default: 0.95 stepl1 lower boundary effect size category \"large\" RR scale = upper boundary effect size category \"medium\" RR scale, default: 0.85 b1 expected gain effect size category \"small\" b2 expected gain effect size category \"medium\" b3 expected gain effect size category \"large\" gamma model different populations phase II III choose gamma!=0, default: 0 fixed choose true treatment effects fixed random, TRUE p11 used fixed effect p1 skipII choose skipping phase II option, default: FALSE num_cl number clusters used parallel computing, default: 1","code":""},{"path":"https://sterniii3.github.io/drugdevelopR/reference/optimal_binary.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Optimal phase II/III drug development planning with binary endpoint — optimal_binary","text":"output function optimal_binary data.frame containing optimization results: u maximal expected utility RRgo optimal threshold value decision rule go phase III n2 total sample size phase II n3 total sample size phase III; rounded next even natural number n total sample size program; n = n2 + n3 K maximal costs program pgo probability go phase III sProg probability successful program sProg1 probability successful program \"small\" treatment effect Phase III sProg2 probability successful program \"medium\" treatment effect Phase III sProg3 probability successful program \"large\" treatment effect Phase III K2 expected costs phase II K3 expected costs phase III input parameters. Taking cat(comment()) data.frame object lists used optimization sequences, start finish date optimization procedure.","code":""},{"path":"https://sterniii3.github.io/drugdevelopR/reference/optimal_binary.html","id":"drugdevelopr-functions","dir":"Reference","previous_headings":"","what":"drugdevelopR functions","title":"Optimal phase II/III drug development planning with binary endpoint — optimal_binary","text":"drugdevelopR package provides functions optimal_tte, optimal_binary optimal_normal plan optimal phase II/III drug development programs time--event (treatment effect measured hazard ratio (HR)), binary (treatment effect measured risk ratio (RR)) normally distributed (treatment effect measured standardized difference means (Delta)) endpoint, treatment effect modelled prior. Optimal phase II/III drug development planning fixed treatment effects can done help R Shiny application basic. Extensions optimal planning programs including methods discounting phase II results (function: optimal_bias, App: bias), optimal planning programs several phase III trials (function: optimal_multitrial, App: multitrial) optimal planning programs multiple arms (function: optimal_multiarm, App: multiarm).","code":""},{"path":"https://sterniii3.github.io/drugdevelopR/reference/optimal_binary.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Optimal phase II/III drug development planning with binary endpoint — optimal_binary","text":"IQWiG (2016). Allgemeine Methoden. Version 5.0, 10.07.2016, Technical Report. Available https://www.iqwig.de/de/methoden/methodenpapier.3020.html, assessed last 15.05.19.","code":""},{"path":"https://sterniii3.github.io/drugdevelopR/reference/optimal_binary.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Optimal phase II/III drug development planning with binary endpoint — optimal_binary","text":"","code":"res <- optimal_binary(w = 0.3,                           # define parameters for prior   p0 = 0.6, p11 =  0.3, p12 = 0.5, in1 = 30, in2 = 60,   # (https://web.imbi.uni-heidelberg.de/prior/)   n2min = 20, n2max = 100, stepn2 = 4,                   # define optimization set for n2   rrgomin = 0.7, rrgomax = 0.9, steprrgo = 0.05,         # define optimization set for RRgo   alpha = 0.05, beta = 0.1,                              # drug development planning parameters   c2 = 0.75, c3 = 1, c02 = 100, c03 = 150,               # define fixed and variable costs for phase II and III,   K = Inf, N = Inf, S = -Inf,                            # set maximal costs/ expected sample size for the program or minimal expected probability of a successful program   steps1 = 1,                                            # define lower boundary for \"small\"   stepm1 = 0.95,                                         # \"medium\"   stepl1 = 0.85,                                         # and \"large\" treatment effect size categories as proposed by IQWiG (2016)   b1 = 1000, b2 = 2000, b3 = 3000,                       # define expected benefit for a \"small\", \"medium\" and \"large\" treatment effect   gamma = 0,                                             # assume different/same population structures in phase II and III   fixed = FALSE,                                         # choose if true treatment effects are fixed or random   skipII = FALSE,                                        # choose if skipping phase II would be an option   num_cl = 1)                                            # set number of cores used for parallelized computing (check maximum number possible with detectCores()) #> Optimization progress: #>  #>    |                                                                               |                                                                      |   0%   |                                                                               |==============                                                        |  20%   |                                                                               |============================                                          |  40%   |                                                                               |==========================================                            |  60%   |                                                                               |========================================================              |  80%   |                                                                               |======================================================================| 100% #>  #>  #> Optimization result: #>  #>  res #>        u RRgo  n2  n3   n  pgo sProg   w  p0 p11 p12 in1 in2   K  K2  K3 sProg1 #> 1 678.04 0.85 100 182 282 0.66  0.46 0.3 0.6 0.3 0.5  30  60 Inf 175 281   0.06 #>   sProg2 sProg3 steps1 stepm1 stepl1 alpha beta c02 c03   c2 c3   b1   b2   b3 #> 1   0.13   0.27      1   0.95   0.85  0.05  0.1 100 150 0.75  1 1000 2000 3000 #>   gamma #> 1     0 cat(comment(res))                                        # displays the optimization sequence, start and finish date of the optimization procedure. #>  #> optimization sequence RRgo: 0.7 0.75 0.8 0.85 0.9  #> optimization sequence n2: 20 24 28 32 36 40 44 48 52 56 60 64 68 72 76 80 84 88 92 96 100  #> set on date: 2022-08-12 08:09:15  #> finish date: 2022-08-12 08:09:28"},{"path":"https://sterniii3.github.io/drugdevelopR/reference/optimal_multiarm.html","id":null,"dir":"Reference","previous_headings":"","what":"Optimal phase II/III drug development planning for multi-arm programs — optimal_multiarm","title":"Optimal phase II/III drug development planning for multi-arm programs — optimal_multiarm","text":"function optimal_multiarm drugdevelopR package enables planning multi-arm phase II/III drug development programs optimal sample size allocation go/-go decision rules (Preussler et. al, 2019). assumed true treatment effects assumed fixed (planning also possible via user friendly R Shiny App: multiarm). Fast coputing enabled parallel programming.","code":""},{"path":"https://sterniii3.github.io/drugdevelopR/reference/optimal_multiarm.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Optimal phase II/III drug development planning for multi-arm programs — optimal_multiarm","text":"","code":"optimal_multiarm(   hr1,   hr2,   ec,   n2min,   n2max,   stepn2,   hrgomin,   hrgomax,   stephrgo,   alpha,   beta,   c2,   c3,   c02,   c03,   K = Inf,   N = Inf,   S = -Inf,   steps1 = 1,   stepm1 = 0.95,   stepl1 = 0.85,   b1,   b2,   b3,   strategy,   num_cl = 1 )"},{"path":"https://sterniii3.github.io/drugdevelopR/reference/optimal_multiarm.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Optimal phase II/III drug development planning for multi-arm programs — optimal_multiarm","text":"hr1 assumed true treatment effect HR scale treatment 1 hr2 assumed true treatment effect HR scale treatment 2 ec control arm event rate phase II III n2min minimal total sample size phase II, must divisible 3 n2max maximal total sample size phase II, must divisible 3 stepn2 stepsize optimization n2, must divisible 3 hrgomin minimal threshold value go/-go decision rule hrgomax maximal threshold value go/-go decision rule stephrgo stepsize optimization HRgo alpha one-sided significance level/ family wise error rate beta 1-beta (-pair) power calculation number events phase III c2 variable per-patient cost phase II c3 variable per-patient cost phase III c02 fixed cost phase II c03 fixed cost phase III K constraint costs program, default: Inf, e.g. constraint N constraint total expected sample size program, default: Inf, e.g. constraint S constraint expected probability successful program, default: -Inf, e.g. constraint steps1 lower boundary effect size category \"small\" HR scale, default: 1 stepm1 lower boundary effect size category \"medium\" HR scale = upper boundary effect size category \"small\" HR scale, default: 0.95 stepl1 lower boundary effect size category \"large\" HR scale = upper boundary effect size category \"medium\" HR scale, default: 0.85 b1 expected gain effect size category \"small\" b2 expected gain effect size category \"medium\" b3 expected gain effect size category \"large\" strategy choose Strategy: 1 (\"best promising\"), 2 (\"promising\") 3 () num_cl number clusters used parallel computing, default: 1","code":""},{"path":"https://sterniii3.github.io/drugdevelopR/reference/optimal_multiarm.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Optimal phase II/III drug development planning for multi-arm programs — optimal_multiarm","text":"output function optimal_multiarm data.frame containing optimization results: Strategy Strategy, 1: \"best promising\" 2: \"promising\" u maximal expected utility HRgo optimal threshold value decision rule go phase III n2 optimal total sample size phase II n3 total expected sample size phase III; rounded next natural number n total sample size program; n = n2 + n3 K maximal costs program pgo probability go phase III sProg probability successful program sProg1 probability successful program \"small\" treatment effect Phase III sProg2 probability successful program \"medium\" treatment effect Phase III sProg3 probability successful program \"large\" treatment effect Phase III K2 expected costs phase II K3 expected costs phase III input parameters. res Taking cat(comment()) data.frame object lists used optimization sequences, start finish date optimization procedure.","code":""},{"path":"https://sterniii3.github.io/drugdevelopR/reference/optimal_multiarm.html","id":"drugdevelopr-functions","dir":"Reference","previous_headings":"","what":"drugdevelopR functions","title":"Optimal phase II/III drug development planning for multi-arm programs — optimal_multiarm","text":"drugdevelopR package provides functions optimal_tte, optimal_binary optimal_normal plan optimal phase II/III drug development programs time--event (treatment effect measured hazard ratio (HR)), binary (treatment effect measured risk ratio (RR)) normally distributed (treatment effect measured standardized difference means (Delta)) endpoint, treatment effect modelled prior. Optimal phase II/III drug development planning fixed treatment effects can done help R Shiny application basic. Extensions optimal planning programs including methods discounting phase II results (function: optimal_bias, App: bias), optimal planning programs several phase III trials (function: optimal_multitrial, App: multitrial) optimal planning programs multiple arms (function: optimal_multiarm, App: multiarm).","code":""},{"path":"https://sterniii3.github.io/drugdevelopR/reference/optimal_multiarm.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Optimal phase II/III drug development planning for multi-arm programs — optimal_multiarm","text":"Preussler, S., Kirchner, M., Goette, H., Kieser, M. (2019). Optimal Designs Multi-Arm Phase II/III Drug Development Programs. Submitted peer-review journal. IQWiG (2016). Allgemeine Methoden. Version 5.0, 10.07.2016, Technical Report. Available https://www.iqwig.de/de/methoden/methodenpapier.3020.html, assessed last 15.05.19.","code":""},{"path":"https://sterniii3.github.io/drugdevelopR/reference/optimal_multiarm.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Optimal phase II/III drug development planning for multi-arm programs — optimal_multiarm","text":"","code":"res <- optimal_multiarm(hr1 = 0.75, hr2 = 0.80, ec = 0.6,# define assumed true HRs and control arm event rate   n2min = 30, n2max = 90, stepn2 = 6,                    # define optimization set for n2   hrgomin = 0.7, hrgomax = 0.9, stephrgo = 0.05,         # define optimization set for HRgo   alpha = 0.05, beta = 0.1,                              # drug development planning parameters   c2 = 0.75, c3 = 1, c02 = 100, c03 = 150,               # define fixed and variable costs for phase II and III   K = Inf, N = Inf, S = -Inf,                            # set maximal costs/ expected sample size for the program or minimal expected probability of a successful program   steps1 = 1,                                            # define lower boundary for \"small\"   stepm1 = 0.95,                                         # \"medium\"   stepl1 = 0.85,                                         # and \"large\" treatment effect size categories as proposed by IQWiG (2016)   b1 = 1000, b2 = 2000, b3 = 3000,                       # define expected benefit for a \"small\", \"medium\" and \"large\" treatment effect   strategy = 1,                                          # choose strategy: 1, 2 or 3   num_cl = 1)                                            # set number of cores used for parallelized computing (check maximum number possible with detectCores()) #> Optimization progress: #>  #>    |                                                                               |                                                                      |   0%   |                                                                               |==============                                                        |  20%   |                                                                               |============================                                          |  40%   |                                                                               |==========================================                            |  60%   |                                                                               |========================================================              |  80%   |                                                                               |======================================================================| 100% #>  #>  #> Optimization result: #>  #>   Strategy      u HRgo n2  n3   n  pgo sProg  hr1 hr2  ec   K   N    S  K2  K3 #> 1        1 241.46 0.85 90 342 432 0.77   0.4 0.75 0.8 0.6 Inf Inf -Inf 168 457 #>   sProg2 sProg3 steps1 stepm1 stepl1 alpha beta c02 c03   c2 c3   b1   b2   b3 #> 1    0.4      0      1   0.95   0.85  0.05  0.1 100 150 0.75  1 1000 2000 3000 #>  res #>   Strategy      u HRgo n2  n3   n  pgo sProg  hr1 hr2  ec   K   N    S  K2  K3 #> 1        1 241.46 0.85 90 342 432 0.77   0.4 0.75 0.8 0.6 Inf Inf -Inf 168 457 #>   sProg2 sProg3 steps1 stepm1 stepl1 alpha beta c02 c03   c2 c3   b1   b2   b3 #> 1    0.4      0      1   0.95   0.85  0.05  0.1 100 150 0.75  1 1000 2000 3000 cat(comment(res))                                        # displays the optimization sequence, start and finish date of the optimization procedure. #>  #> optimization sequence HRgo: 0.7 0.75 0.8 0.85 0.9  #> optimization sequence n2: 30 36 42 48 54 60 66 72 78 84 90  #> set on date: 2022-08-12 08:09:29  #> finish date: 2022-08-12 08:09:49"},{"path":"https://sterniii3.github.io/drugdevelopR/reference/optimal_multiarm_binary.html","id":null,"dir":"Reference","previous_headings":"","what":"Optimal phase II/III drug development planning with binary endpoint — optimal_multiarm_binary","title":"Optimal phase II/III drug development planning with binary endpoint — optimal_multiarm_binary","text":"drugdevelopR package enables planning phase II/III drug development programs optimal sample size allocation go/-go decision rules. binary endpoints treatment effect measured risk ratio (RR).assumed true treatment effects can assumed fixed modelled prior distribution. R Shiny application prior visualizes prior distributions used package. Fast coputing enabled parallel programming.","code":""},{"path":"https://sterniii3.github.io/drugdevelopR/reference/optimal_multiarm_binary.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Optimal phase II/III drug development planning with binary endpoint — optimal_multiarm_binary","text":"","code":"optimal_multiarm_binary(   p0,   p11,   p12,   n2min,   n2max,   stepn2,   rrgomin,   rrgomax,   steprrgo,   alpha,   beta,   c2,   c3,   c02,   c03,   K = Inf,   N = Inf,   S = -Inf,   steps1 = 1,   stepm1 = 0.95,   stepl1 = 0.85,   b1,   b2,   b3,   strategy,   num_cl = 1 )"},{"path":"https://sterniii3.github.io/drugdevelopR/reference/optimal_multiarm_binary.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Optimal phase II/III drug development planning with binary endpoint — optimal_multiarm_binary","text":"p0 assumed true rate control group p11 assumed true rate treatment group p12 assumed true rate treatment group n2min minimal total sample size phase II; must even number n2max maximal total sample size phase II, must even number stepn2 stepsize optimization n2; must even number rrgomin minimal threshold value go/-go decision rule rrgomax maximal threshold value go/-go decision rule steprrgo stepsize optimization RRgo alpha significance level beta 1-beta power calculation sample size phase III c2 variable per-patient cost phase II c3 variable per-patient cost phase III c02 fixed cost phase II c03 fixed cost phase III K constraint costs program, default: Inf, e.g. constraint N constraint total expected sample size program, default: Inf, e.g. constraint S constraint expected probability successful program, default: -Inf, e.g. constraint steps1 lower boundary effect size category \"small\" RR scale, default: 1 stepm1 lower boundary effect size category \"medium\" RR scale = upper boundary effect size category \"small\" RR scale, default: 0.95 stepl1 lower boundary effect size category \"large\" RR scale = upper boundary effect size category \"medium\" RR scale, default: 0.85 b1 expected gain effect size category \"small\" b2 expected gain effect size category \"medium\" b3 expected gain effect size category \"large\" strategy choose Strategy: 1 (\"best promising\"), 2 (\"promising\") 3 () num_cl number clusters used parallel computing, default: 1","code":""},{"path":"https://sterniii3.github.io/drugdevelopR/reference/optimal_multiarm_binary.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Optimal phase II/III drug development planning with binary endpoint — optimal_multiarm_binary","text":"output function optimal_binary data.frame containing optimization results: u maximal expected utility RRgo optimal threshold value decision rule go phase III n2 total sample size phase II n3 total sample size phase III; rounded next even natural number n total sample size program; n = n2 + n3 K maximal costs program pgo probability go phase III sProg probability successful program sProg1 probability successful program \"small\" treatment effect Phase III sProg2 probability successful program \"medium\" treatment effect Phase III sProg3 probability successful program \"large\" treatment effect Phase III K2 expected costs phase II K3 expected costs phase III input parameters. Taking cat(comment()) data.frame object lists used optimization sequences, start finish date optimization procedure.","code":""},{"path":"https://sterniii3.github.io/drugdevelopR/reference/optimal_multiarm_binary.html","id":"drugdevelopr-functions","dir":"Reference","previous_headings":"","what":"drugdevelopR functions","title":"Optimal phase II/III drug development planning with binary endpoint — optimal_multiarm_binary","text":"drugdevelopR package provides functions optimal_tte, optimal_binary optimal_normal plan optimal phase II/III drug development programs time--event (treatment effect measured hazard ratio (HR)), binary (treatment effect measured risk ratio (RR)) normally distributed (treatment effect measured standardized difference means (Delta)) endpoint, treatment effect modelled prior. Optimal phase II/III drug development planning fixed treatment effects can done help R Shiny application basic. Extensions optimal planning programs including methods discounting phase II results (function: optimal_bias, App: bias), optimal planning programs several phase III trials (function: optimal_multitrial, App: multitrial) optimal planning programs multiple arms (function: optimal_multiarm, App: multiarm).","code":""},{"path":"https://sterniii3.github.io/drugdevelopR/reference/optimal_multiarm_binary.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Optimal phase II/III drug development planning with binary endpoint — optimal_multiarm_binary","text":"IQWiG (2016). Allgemeine Methoden. Version 5.0, 10.07.2016, Technical Report. Available https://www.iqwig.de/de/methoden/methodenpapier.3020.html, assessed last 15.05.19.","code":""},{"path":"https://sterniii3.github.io/drugdevelopR/reference/optimal_multiarm_binary.html","id":"last-edited-by","dir":"Reference","previous_headings":"","what":"Last Edited By","title":"Optimal phase II/III drug development planning with binary endpoint — optimal_multiarm_binary","text":"Johannes Cepicka","code":""},{"path":"https://sterniii3.github.io/drugdevelopR/reference/optimal_multiarm_binary.html","id":"last-edit-date","dir":"Reference","previous_headings":"","what":"Last Edit Date","title":"Optimal phase II/III drug development planning with binary endpoint — optimal_multiarm_binary","text":"2022-04-23","code":""},{"path":"https://sterniii3.github.io/drugdevelopR/reference/optimal_multiarm_binary.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Optimal phase II/III drug development planning with binary endpoint — optimal_multiarm_binary","text":"","code":"res <- optimal_multiarm_binary( p0 = 0.6, p11 =  0.3, p12 = 0.5,    n2min = 20, n2max = 100, stepn2 = 4,                   # define optimization set for n2   rrgomin = 0.7, rrgomax = 0.9, steprrgo = 0.05,         # define optimization set for RRgo   alpha = 0.05, beta = 0.1,                              # drug development planning parameters   c2 = 0.75, c3 = 1, c02 = 100, c03 = 150,               # define fixed and variable costs for phase II and III,   K = Inf, N = Inf, S = -Inf,                            # set maximal costs/ expected sample size for the program or minimal expected probability of a successful program   steps1 = 1,                                            # define lower boundary for \"small\"   stepm1 = 0.95,                                         # \"medium\"   stepl1 = 0.85,                                         # and \"large\" treatment effect size categories as proposed by IQWiG (2016)   b1 = 1000, b2 = 2000, b3 = 3000,                       # define expected benefit for a \"small\", \"medium\" and \"large\" treatment effect   strategy = 1, num_cl = 1)                              # set number of cores used for parallelized computing (check maximum number possible with detectCores()) #> Optimization progress: #>  #>    |                                                                               |                                                                      |   0%   |                                                                               |==============                                                        |  20%   |                                                                               |============================                                          |  40%   |                                                                               |==========================================                            |  60%   |                                                                               |========================================================              |  80%   |                                                                               |======================================================================| 100% #>  #>  #> Optimization result: #>  #>   Strategy       u RRgo  n2  n3   n  pgo sProg  p0 p11 p12   K   N    S  K2  K3 #> 1        1 1671.27  0.9 100 192 292 0.98  0.79 0.6 0.3 0.5 Inf Inf -Inf 175 339 #>   sProg2 sProg3 steps1 stepm1 stepl1 alpha beta c02 c03   c2 c3   b1   b2   b3 #> 1   0.79      0      1   0.95   0.85  0.05  0.1 100 150 0.75  1 1000 2000 3000 #>  res #>   Strategy       u RRgo  n2  n3   n  pgo sProg  p0 p11 p12   K   N    S  K2  K3 #> 1        1 1671.27  0.9 100 192 292 0.98  0.79 0.6 0.3 0.5 Inf Inf -Inf 175 339 #>   sProg2 sProg3 steps1 stepm1 stepl1 alpha beta c02 c03   c2 c3   b1   b2   b3 #> 1   0.79      0      1   0.95   0.85  0.05  0.1 100 150 0.75  1 1000 2000 3000 cat(comment(res))                                        # displays the optimization sequence, start and finish date of the optimization procedure. #>  #> optimization sequence RRgo: 0.7 0.75 0.8 0.85 0.9  #> optimization sequence n2: 20 24 28 32 36 40 44 48 52 56 60 64 68 72 76 80 84 88 92 96 100  #> set on date: 2022-08-12 08:09:49  #> finish date: 2022-08-12 08:10:32"},{"path":"https://sterniii3.github.io/drugdevelopR/reference/optimal_multiarm_normal.html","id":null,"dir":"Reference","previous_headings":"","what":"Optimal phase II/III drug development planning with normally distributed endpoint — optimal_multiarm_normal","title":"Optimal phase II/III drug development planning with normally distributed endpoint — optimal_multiarm_normal","text":"drugdevelopR package enables planning phase II/III drug development programs optimal sample size allocation go/-go decision rules. normally distributed endpoints treatment effect measured standardized difference means (Delta). assumed true treatment effects can assumed fixed modelled prior distribution. R Shiny application prior visualizes prior distributions used package. Fast coputing enabled parallel programming.","code":""},{"path":"https://sterniii3.github.io/drugdevelopR/reference/optimal_multiarm_normal.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Optimal phase II/III drug development planning with normally distributed endpoint — optimal_multiarm_normal","text":"","code":"optimal_multiarm_normal(   Delta1,   Delta2,   n2min,   n2max,   stepn2,   kappamin,   kappamax,   stepkappa,   alpha,   beta,   c2,   c3,   c02,   c03,   K = Inf,   N = Inf,   S = -Inf,   steps1 = 0,   stepm1 = 0.5,   stepl1 = 0.8,   b1,   b2,   b3,   strategy,   num_cl = 1 )"},{"path":"https://sterniii3.github.io/drugdevelopR/reference/optimal_multiarm_normal.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Optimal phase II/III drug development planning with normally distributed endpoint — optimal_multiarm_normal","text":"Delta1 assumed true treatment effect standardized difference means Delta2 assumed true treatment effect standardized difference means n2min minimal total sample size phase II; must even number n2max maximal total sample size phase II, must even number stepn2 stepsize optimization n2; must even number kappamin minimal threshold value go/-go decision rule kappamax maximal threshold value go/-go decision rule stepkappa stepsize optimization kappa alpha significance level beta 1-beta power calculation sample size phase III c2 variable per-patient cost phase II c3 variable per-patient cost phase III c02 fixed cost phase II c03 fixed cost phase III K constraint costs program, default: Inf, e.g. constraint N constraint total expected sample size program, default: Inf, e.g. constraint S constraint expected probability successful program, default: -Inf, e.g. constraint steps1 lower boundary effect size category \"small\", default: 0 stepm1 lower boundary effect size category \"medium\" = upper boundary effect size category \"small\" default: 0.5 stepl1 lower boundary effect size category \"large\" = upper boundary effect size category \"medium\", default: 0.8 b1 expected gain effect size category \"small\" b2 expected gain effect size category \"medium\" b3 expected gain effect size category \"large\" strategy choose Strategy: 1 (\"best promising\"), 2 (\"promising\") 3 () num_cl number clusters used parallel computing, default: 1","code":""},{"path":"https://sterniii3.github.io/drugdevelopR/reference/optimal_multiarm_normal.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Optimal phase II/III drug development planning with normally distributed endpoint — optimal_multiarm_normal","text":"output function optimal_normal data.frame containing optimization results: u maximal expected utility kappa optimal threshold value decision rule go phase III n2 total sample size phase II n3 total sample size phase III; rounded next even natural number n total sample size program; n = n2 + n3 K maximal costs program pgo probability go phase III sProg probability successful program sProg1 probability successful program \"small\" treatment effect Phase III sProg2 probability successful program \"medium\" treatment effect Phase III sProg3 probability successful program \"large\" treatment effect Phase III K2 expected costs phase II K3 expected costs phase III input parameters. Taking cat(comment()) data.frame object lists used optimization sequences, start finish date optimization procedure.","code":""},{"path":"https://sterniii3.github.io/drugdevelopR/reference/optimal_multiarm_normal.html","id":"drugdevelopr-functions","dir":"Reference","previous_headings":"","what":"drugdevelopR functions","title":"Optimal phase II/III drug development planning with normally distributed endpoint — optimal_multiarm_normal","text":"drugdevelopR package provides functions optimal_tte, optimal_binary optimal_normal plan optimal phase II/III drug development programs time--event (treatment effect measured hazard ratio (HR)), binary (treatment effect measured risk ratio (RR)) normally distributed (treatment effect measured standardized difference means (Delta)) endpoint, treatment effect assumed fixed modelled prior. Optimal phase II/III drug development planning fixed treatment effects can also done help R Shiny application basic. Extensions optimal planning programs including methods discounting phase II results (function: optimal_bias, App: bias), optimal planning programs several phase III trials (function: optimal_multitrial, App: multitrial) optimal planning programs multiple arms (function: optimal_multiarm, App: multiarm).","code":""},{"path":"https://sterniii3.github.io/drugdevelopR/reference/optimal_multiarm_normal.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Optimal phase II/III drug development planning with normally distributed endpoint — optimal_multiarm_normal","text":"Cohen, J. (1988). Statistical power analysis behavioral sciences.","code":""},{"path":"https://sterniii3.github.io/drugdevelopR/reference/optimal_multiarm_normal.html","id":"last-edited-by","dir":"Reference","previous_headings":"","what":"Last Edited By","title":"Optimal phase II/III drug development planning with normally distributed endpoint — optimal_multiarm_normal","text":"Johannes Cepicka","code":""},{"path":"https://sterniii3.github.io/drugdevelopR/reference/optimal_multiarm_normal.html","id":"last-edit-date","dir":"Reference","previous_headings":"","what":"Last Edit Date","title":"Optimal phase II/III drug development planning with normally distributed endpoint — optimal_multiarm_normal","text":"2022-04-23","code":""},{"path":"https://sterniii3.github.io/drugdevelopR/reference/optimal_multiarm_normal.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Optimal phase II/III drug development planning with normally distributed endpoint — optimal_multiarm_normal","text":"","code":"res <- optimal_multiarm_normal(Delta1 = 0.375, Delta2 = 0.625,        n2min = 20, n2max = 100, stepn2 = 4,                   # define optimization set for n2   kappamin = 0.02, kappamax = 0.2, stepkappa = 0.02,     # define optimization set for kappa   alpha = 0.05, beta = 0.1,                              # drug development planning parameters   c2 = 0.675, c3 = 0.72, c02 = 15, c03 = 20,             # define fixed and variable costs for phase II and III   K = Inf, N = Inf, S = -Inf,                            # set maximal costs/ expected sample size for the program or minimal expected probability of a successful program   steps1 = 0,                                            # define lower boundary for \"small\"   stepm1 = 0.5,                                          # \"medium\"   stepl1 = 0.8,                                          # and \"large\" treatment effect size categories as proposed by e.g. Cohen (1988)   b1 = 3000, b2 = 8000, b3 = 10000,                      # define expected benefit for a \"small\", \"medium\" and \"large\" treatment effect   strategy = 1,   num_cl = 1)                                            # set number of cores used for parallelized computing (check maximum number possible with detectCores()) #> Optimization progress: #>  #>    |                                                                               |                                                                      |   0%   |                                                                               |=======                                                               |  10%   |                                                                               |==============                                                        |  20%   |                                                                               |=====================                                                 |  30%   |                                                                               |============================                                          |  40%   |                                                                               |===================================                                   |  50%   |                                                                               |==========================================                            |  60%   |                                                                               |=================================================                     |  70%   |                                                                               |========================================================              |  80%   |                                                                               |===============================================================       |  90%   |                                                                               |======================================================================| 100% #>  #>  #> Optimization result: #>  #>   Strategy       u kappa  n2  n3   n  pgo sProg Delta1 Delta2   K   N    S K2 #> 1        1 2924.13  0.06 100 164 264 0.99   0.8  0.375  0.625 Inf Inf -Inf 82 #>    K3 sProg2 sProg3 steps1 stepm1 stepl1 alpha beta c02 c03    c2   c3   b1 #> 1 138    0.8      0      0    0.5    0.8  0.05  0.1  15  20 0.675 0.72 3000 #>     b2    b3 #> 1 8000 10000 #>  res #>   Strategy       u kappa  n2  n3   n  pgo sProg Delta1 Delta2   K   N    S K2 #> 1        1 2924.13  0.06 100 164 264 0.99   0.8  0.375  0.625 Inf Inf -Inf 82 #>    K3 sProg2 sProg3 steps1 stepm1 stepl1 alpha beta c02 c03    c2   c3   b1 #> 1 138    0.8      0      0    0.5    0.8  0.05  0.1  15  20 0.675 0.72 3000 #>     b2    b3 #> 1 8000 10000 cat(comment(res))                                        # displays the optimization sequence, start and finish date of the optimization procedure. #>  #> optimization sequence Kappa: 0.02 0.04 0.06 0.08 0.1 0.12 0.14 0.16 0.18 0.2  #> optimization sequence n2: 20 24 28 32 36 40 44 48 52 56 60 64 68 72 76 80 84 88 92 96 100  #> set on date: 2022-08-12 08:10:32  #> finish date: 2022-08-12 08:12:04"},{"path":"https://sterniii3.github.io/drugdevelopR/reference/optimal_multiple_normal.html","id":null,"dir":"Reference","previous_headings":"","what":"Optimal phase II/III drug development planning for programs with multiple endpoints — optimal_multiple_normal","title":"Optimal phase II/III drug development planning for programs with multiple endpoints — optimal_multiple_normal","text":"function optimal_multiple_normal drugdevelopR package enables planning phase II/III drug development programs optimal sample size allocation go/-go decision rules (Preussler et. al, 2019).  (planning also possible via user friendly R Shiny App: multiarm). Fast coputing enabled parallel programming.","code":""},{"path":"https://sterniii3.github.io/drugdevelopR/reference/optimal_multiple_normal.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Optimal phase II/III drug development planning for programs with multiple endpoints — optimal_multiple_normal","text":"","code":"optimal_multiple_normal(   Delta1,   Delta2,   in1,   in2,   sigma1,   sigma2,   n2min,   n2max,   stepn2,   kappamin,   kappamax,   stepkappa,   alpha,   beta,   c2,   c3,   c02,   c03,   K = Inf,   N = Inf,   S = -Inf,   steps1 = 0,   stepm1 = 0.5,   stepl1 = 0.8,   b1,   b2,   b3,   rho,   fixed,   relaxed = FALSE,   num_cl = 1 )"},{"path":"https://sterniii3.github.io/drugdevelopR/reference/optimal_multiple_normal.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Optimal phase II/III drug development planning for programs with multiple endpoints — optimal_multiple_normal","text":"Delta1 assumed true treatment effect HR scale treatment 1 Delta2 assumed true treatment effect HR scale treatment 2 in1 amount information Delta1 terms number events in2 amount information Delta2 terms number events sigma1 variance endpoint 1 sigma2 variance endpoint 1 n2min minimal total sample size phase II, must divisible 3 n2max maximal total sample size phase II, must divisible 3 stepn2 stepsize optimization n2, must divisible 3 kappamin minimal threshold value go/-go decision rule kappamax maximal threshold value go/-go decision rule stepkappa stepsize optimization HRgo alpha one-sided significance level/ family wise error rate beta 1-beta (-pair) power calculation number events phase III c2 variable per-patient cost phase II c3 variable per-patient cost phase III c02 fixed cost phase II c03 fixed cost phase III K constraint costs program, default: Inf, e.g. constraint N constraint total expected sample size program, default: Inf, e.g. constraint S constraint expected probability successful program, default: -Inf, e.g. constraint steps1 lower boundary effect size category \"small\" HR scale, default: 1 stepm1 lower boundary effect size category \"medium\" HR scale = upper boundary effect size category \"small\" HR scale, default: 0.95 stepl1 lower boundary effect size category \"large\" HR scale = upper boundary effect size category \"medium\" HR scale, default: 0.85 b1 expected gain effect size category \"small\" b2 expected gain effect size category \"medium\" b3 expected gain effect size category \"large\" rho correlation two endpoints fixed assumed fixed treatment effect relaxed relaxed strict decision rule num_cl number clusters used parallel computing, default: 1","code":""},{"path":"https://sterniii3.github.io/drugdevelopR/reference/optimal_multiple_normal.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Optimal phase II/III drug development planning for programs with multiple endpoints — optimal_multiple_normal","text":"output function optimal_multiple_tte data.frame containing optimization results: u maximal expected utility HRgo optimal threshold value decision rule go phase III n2 optimal total sample size phase II n3 total expected sample size phase III; rounded next natural number n total sample size program; n = n2 + n3 K maximal costs program pgo probability go phase III sProg probability successful program sProg1 probability successful program \"small\" treatment effect Phase III sProg2 probability successful program \"medium\" treatment effect Phase III sProg3 probability successful program \"large\" treatment effect Phase III K2 expected costs phase II K3 expected costs phase III input parameters. res Taking cat(comment()) data.frame object lists used optimization sequences, start finish date optimization procedure.","code":""},{"path":"https://sterniii3.github.io/drugdevelopR/reference/optimal_multiple_normal.html","id":"drugdevelopr-functions","dir":"Reference","previous_headings":"","what":"drugdevelopR functions","title":"Optimal phase II/III drug development planning for programs with multiple endpoints — optimal_multiple_normal","text":"drugdevelopR package provides functions optimal_tte, optimal_binary optimal_normal plan optimal phase II/III drug development programs time--event (treatment effect measured hazard ratio (HR)), binary (treatment effect measured risk ratio (RR)) normally distributed (treatment effect measured standardized difference means (Delta)) endpoint, treatment effect modelled prior. Optimal phase II/III drug development planning fixed treatment effects can done help R Shiny application basic. Extensions optimal planning programs including methods discounting phase II results (function: optimal_bias, App: bias), optimal planning programs several phase III trials (function: optimal_multitrial, App: multitrial) optimal planning programs multiple arms (function: optimal_multiarm, App: multiarm).","code":""},{"path":"https://sterniii3.github.io/drugdevelopR/reference/optimal_multiple_normal.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Optimal phase II/III drug development planning for programs with multiple endpoints — optimal_multiple_normal","text":"Preussler, S., Kirchner, M., Goette, H., Kieser, M. (2019). Optimal Designs Multi-Arm Phase II/III Drug Development Programs. Submitted peer-review journal. IQWiG (2016). Allgemeine Methoden. Version 5.0, 10.07.2016, Technical Report. Available https://www.iqwig.de/de/methoden/methodenpapier.3020.html, assessed last 15.05.19.","code":""},{"path":"https://sterniii3.github.io/drugdevelopR/reference/optimal_multiple_normal.html","id":"last-edited-by","dir":"Reference","previous_headings":"","what":"Last Edited By","title":"Optimal phase II/III drug development planning for programs with multiple endpoints — optimal_multiple_normal","text":"Johannes Cepicka","code":""},{"path":"https://sterniii3.github.io/drugdevelopR/reference/optimal_multiple_normal.html","id":"last-edit-date","dir":"Reference","previous_headings":"","what":"Last Edit Date","title":"Optimal phase II/III drug development planning for programs with multiple endpoints — optimal_multiple_normal","text":"2022-04-23","code":""},{"path":[]},{"path":"https://sterniii3.github.io/drugdevelopR/reference/optimal_multiple_tte.html","id":null,"dir":"Reference","previous_headings":"","what":"Optimal phase II/III drug development planning for programs with multiple endpoints — optimal_multiple_tte","title":"Optimal phase II/III drug development planning for programs with multiple endpoints — optimal_multiple_tte","text":"function optimal_multiple_tte drugdevelopR package enables planning phase II/III drug development programs optimal sample size allocation go/-go decision rules (Preussler et. al, 2019). Fast computing enabled parallel programming.","code":""},{"path":"https://sterniii3.github.io/drugdevelopR/reference/optimal_multiple_tte.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Optimal phase II/III drug development planning for programs with multiple endpoints — optimal_multiple_tte","text":"","code":"optimal_multiple_tte(   hr1,   hr2,   id1,   id2,   ec,   d2min,   d2max,   stepd2,   hrgomin,   hrgomax,   stephrgo,   alpha,   beta,   c2,   c3,   c02,   c03,   K = Inf,   N = Inf,   S = -Inf,   b11,   b21,   b31,   b12,   b22,   b32,   steps1,   stepm1,   stepl1,   rho,   fixed,   num_cl = 1 )"},{"path":"https://sterniii3.github.io/drugdevelopR/reference/optimal_multiple_tte.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Optimal phase II/III drug development planning for programs with multiple endpoints — optimal_multiple_tte","text":"hr1 assumed true treatment effect HR scale treatment 1 hr2 assumed true treatment effect HR scale treatment 2 id1 amount information hr1 terms number events id2 amount information hr2 terms number events ec control arm event rate phase II III d2min minimal number events phase II, must divisible 3 d2max maximal number events phase II, must divisible 3 stepd2 stepsize optimization d2, must divisible 3 hrgomin minimal threshold value go/-go decision rule hrgomax maximal threshold value go/-go decision rule stephrgo stepsize optimization HRgo alpha one-sided significance level/ family wise error rate beta 1-beta (-pair) power calculation number events phase III c2 variable per-patient cost phase II c3 variable per-patient cost phase III c02 fixed cost phase II c03 fixed cost phase III K constraint maximal costs program, default: Inf, e.g. constraint N constraint total expected sample size program, default: Inf, e.g. constraint S constraint expected minimal probability successful program, default: -Inf, e.g. constraint b11 expected gain effect size category \"small\" endpoint OS significant b21 expected gain effect size category \"medium\"endpoint OS significant b31 expected gain effect size category \"large\" endpoint OS significant b12 expected gain effect size category \"small\" endpoint OS significant b22 expected gain effect size category \"medium\"endpoint OS significant b32 expected gain effect size category \"large\" endpoint OS significant steps1 lower boundary effect size category \"small\" HR scale, default: 1 stepm1 lower boundary effect size category \"medium\" HR scale = upper boundary effect size category \"small\" HR scale, default: 0.95 stepl1 lower boundary effect size category \"large\" HR scale = upper boundary effect size category \"medium\" HR scale, default: 0.85 rho correlation two endpoints fixed assumed fixed treatment effect num_cl number clusters used parallel computing, default: 1","code":""},{"path":"https://sterniii3.github.io/drugdevelopR/reference/optimal_multiple_tte.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Optimal phase II/III drug development planning for programs with multiple endpoints — optimal_multiple_tte","text":"output function optimal_multiple_tte data.frame containing optimization results: Strategy Strategy, 1: \"best promising\" 2: \"promising\" u maximal expected utility HRgo optimal threshold value decision rule go phase III n2 optimal total sample size phase II n3 total expected sample size phase III; rounded next natural number n total sample size program; n = n2 + n3 K maximal costs program pgo probability go phase III sProg probability successful program sProg1 probability successful program \"small\" treatment effect Phase III sProg2 probability successful program \"medium\" treatment effect Phase III sProg3 probability successful program \"large\" treatment effect Phase III K2 expected costs phase II K3 expected costs phase III OP probability one endpoint significant input parameters. res Taking cat(comment()) data.frame object lists used optimization sequences, start finish date optimization procedure.","code":""},{"path":"https://sterniii3.github.io/drugdevelopR/reference/optimal_multiple_tte.html","id":"drugdevelopr-functions","dir":"Reference","previous_headings":"","what":"drugdevelopR functions","title":"Optimal phase II/III drug development planning for programs with multiple endpoints — optimal_multiple_tte","text":"drugdevelopR package provides functions optimal_tte, optimal_binary optimal_normal plan optimal phase II/III drug development programs time--event (treatment effect measured hazard ratio (HR)), binary (treatment effect measured risk ratio (RR)) normally distributed (treatment effect measured standardized difference means (Delta)) endpoint, treatment effect modelled prior. Optimal phase II/III drug development planning fixed treatment effects can done help R Shiny application basic. Extensions optimal planning programs including methods discounting phase II results (function: optimal_bias, App: bias), optimal planning programs several phase III trials (function: optimal_multitrial, App: multitrial) optimal planning programs multiple arms (function: optimal_multiarm, App: multiarm).","code":""},{"path":"https://sterniii3.github.io/drugdevelopR/reference/optimal_multiple_tte.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Optimal phase II/III drug development planning for programs with multiple endpoints — optimal_multiple_tte","text":"Preussler, S., Kirchner, M., Goette, H., Kieser, M. (2019). Optimal Designs Multi-Arm Phase II/III Drug Development Programs. Submitted peer-review journal. IQWiG (2016). Allgemeine Methoden. Version 5.0, 10.07.2016, Technical Report. Available https://www.iqwig.de/de/methoden/methodenpapier.3020.html, assessed last 15.05.19.","code":""},{"path":"https://sterniii3.github.io/drugdevelopR/reference/optimal_multiple_tte.html","id":"last-edited-by","dir":"Reference","previous_headings":"","what":"Last Edited By","title":"Optimal phase II/III drug development planning for programs with multiple endpoints — optimal_multiple_tte","text":"Johannes Cepicka","code":""},{"path":"https://sterniii3.github.io/drugdevelopR/reference/optimal_multiple_tte.html","id":"last-edit-date","dir":"Reference","previous_headings":"","what":"Last Edit Date","title":"Optimal phase II/III drug development planning for programs with multiple endpoints — optimal_multiple_tte","text":"2022-04-23","code":""},{"path":"https://sterniii3.github.io/drugdevelopR/reference/optimal_multiple_tte.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Optimal phase II/III drug development planning for programs with multiple endpoints — optimal_multiple_tte","text":"","code":"#res <- optimal_multiple_tte(hr1 = 0.75, hr2 = 0.80,  #  ec = 0.6,                                         # define assumed true HRs and control arm event rate # id1 = 210, id2 = 420, #  d2min = 30, d2max = 90, stepd2 = 6,               # define optimization set for n2 #  hrgomin = 0.7, hrgomax = 0.9, stephrgo = 0.05,    # define optimization set for HRgo #  alpha = 0.05, beta = 0.1,                         # drug development planning parameters #  c2 = 0.75, c3 = 1, c02 = 100, c03 = 150,          # define fixed and variable costs for phase II and III #  K = Inf, N = Inf, S = -Inf,                       # set constraints #  steps1 = 1,                                       # define lower boundary for \"small\" #  stepm1 = 0.95,                                    # \"medium\" # stepl1 = 0.85,                                    # and \"large\" treatment effect size categories as proposed by IQWiG (2016) #  b11 = 1000, b21 = 2000, b31 = 3000, #   b12 = 1000, b22 = 1500, b32 = 2000,               # define expected benefit for a \"small\", \"medium\" and \"large\" treatment effect #  rho = 0.5, fixed = TRUE,                          # correlation and treatment effect #  num_cl = 1)                                       # set number of cores used for parallelized computing  # res # cat(comment(res))                                   # displays the optimization sequence, start and finish date of the optimization"},{"path":"https://sterniii3.github.io/drugdevelopR/reference/optimal_multitrial.html","id":null,"dir":"Reference","previous_headings":"","what":"Optimal phase II/III drug development planning where several phase III trials are performed — optimal_multitrial","title":"Optimal phase II/III drug development planning where several phase III trials are performed — optimal_multitrial","text":"function optimal_multitrial drugdevelopR package enables planning phase II/III drug development programs optimal sample size allocation go/-go decision rules programs several phase III trials (Preussler et. al, 2019). assumed true treatment effects can assumed fixed (planning also possible via user friendly R Shiny App: multitrial) modelled prior distribution. R Shiny application prior visualizes prior distributions used package. Fast coputing enabled parallel programming.","code":""},{"path":"https://sterniii3.github.io/drugdevelopR/reference/optimal_multitrial.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Optimal phase II/III drug development planning where several phase III trials are performed — optimal_multitrial","text":"","code":"optimal_multitrial(   w,   hr1,   hr2,   id1,   id2,   d2min,   d2max,   stepd2,   hrgomin,   hrgomax,   stephrgo,   alpha,   beta,   xi2,   xi3,   c2,   c3,   c02,   c03,   K = Inf,   N = Inf,   S = -Inf,   b1,   b2,   b3,   case,   strategy = TRUE,   fixed = FALSE,   num_cl = 1 )"},{"path":"https://sterniii3.github.io/drugdevelopR/reference/optimal_multitrial.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Optimal phase II/III drug development planning where several phase III trials are performed — optimal_multitrial","text":"w weight mixture prior distribution hr1 first assumed true treatment effect HR scale prior distribution hr2 second assumed true treatment effect HR scale prior distribution id1 amount information hr1 terms number events id2 amount information hr2 terms number events d2min minimal number events phase II d2max maximal number events phase II stepd2 stepsize optimization d2 hrgomin minimal threshold value go/-go decision rule hrgomax maximal threshold value go/-go decision rule stephrgo stepsize optimization HRgo alpha one- sided significance level beta 1-beta power calculation number events phase III Schoenfeld (1981) formula xi2 event rate phase II xi3 event rate phase III c2 variable per-patient cost phase II c3 variable per-patient cost phase III c02 fixed cost phase II c03 fixed cost phase III K constraint costs program, default: Inf, e.g. constraint N constraint total expected sample size program, default: Inf, e.g. constraint S constraint expected probability successful program, default: -Inf, e.g. constraint b1 expected gain effect size category \"small\" b2 expected gain effect size category \"medium\" b3 expected gain effect size category \"large\" case choose case: \"least 1, 2 3 significant trials needed approval\" strategy choose strategy: \"conduct 1, 2, 3 4 trial\"; TRUE calculates strategies selected Case fixed choose true treatment effects fixed random, TRUE hr1 used fixed effect num_cl number clusters used parallel computing, default: 1","code":""},{"path":"https://sterniii3.github.io/drugdevelopR/reference/optimal_multitrial.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Optimal phase II/III drug development planning where several phase III trials are performed — optimal_multitrial","text":"output function optimal_multitrial data.frame containing optimization results: Case Case: \"number significant trials needed\" Strategy Strategy: \"number conducted trials\" u maximal expected utility HRgo optimal threshold value decision rule go phase III d2 optimal total number events phase II d3 total expected number events phase III; rounded next natural number d total expected number events program; d = d2 + d3 n2 total sample size phase II; rounded next even natural number n3 total sample size phase III; rounded next even natural number n total sample size program; n = n2 + n3 K maximal costs program pgo probability go phase III sProg probability successful program sProg1 probability successful program \"small\" treatment effect Phase III (lower boundary HR scale set 1, proposed IQWiG (2016)) sProg2 probability successful program \"medium\" treatment effect Phase III (lower boundary HR scale set 0.95, proposed IQWiG (2016)) sProg3 probability successful program \"large\" treatment effect Phase III (lower boundary HR scale set 0.85, proposed IQWiG (2016)) K2 expected costs phase II K3 expected costs phase III input parameters. Taking cat(comment()) data.frame object lists used optimization sequences, start finish date optimization procedure.","code":""},{"path":"https://sterniii3.github.io/drugdevelopR/reference/optimal_multitrial.html","id":"drugdevelopr-functions","dir":"Reference","previous_headings":"","what":"drugdevelopR functions","title":"Optimal phase II/III drug development planning where several phase III trials are performed — optimal_multitrial","text":"drugdevelopR package provides functions optimal_tte, optimal_binary optimal_normal plan optimal phase II/III drug development programs time--event (treatment effect measured hazard ratio (HR)), binary (treatment effect measured risk ratio (RR)) normally distributed (treatment effect measured standardized difference means (Delta)) endpoint, treatment effect modelled prior. Optimal phase II/III drug development planning fixed treatment effects can done help R Shiny application base. Extensions optimal planning programs including methods discounting phase II results (function: optimal_bias, App: bias), optimal planning programs several phase III trials (function: optimal_multitrial, App: multitrial) optimal planning programs multiple arms (function: optimal_multiarm, App: multiarm).","code":""},{"path":"https://sterniii3.github.io/drugdevelopR/reference/optimal_multitrial.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Optimal phase II/III drug development planning where several phase III trials are performed — optimal_multitrial","text":"IQWiG (2016). Allgemeine Methoden. Version 5.0, 10.07.2016, Technical Report. Available https://www.iqwig.de/de/methoden/methodenpapier.3020.html, assessed last 15.05.19. Preussler, S., Kieser, M., Kirchner, M. (2019). Optimal sample size allocation go/-go decision rules phase II/III programs several phase III trials performed. Biometrical Journal, 61(2), 357-378. Schoenfeld, D. (1981). asymptotic properties nonparametric tests comparing survival distributions. Biometrika, 68(1), 316-319.","code":""},{"path":"https://sterniii3.github.io/drugdevelopR/reference/optimal_multitrial.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Optimal phase II/III drug development planning where several phase III trials are performed — optimal_multitrial","text":"","code":"res <- optimal_multitrial(w = 0.3,                              # define parameters for prior   hr1 = 0.69, hr2 = 0.88, id1 = 210, id2 = 420,          # (https://web.imbi.uni-heidelberg.de/prior/)   d2min = 20, d2max = 100, stepd2 = 5,                   # define optimization set for d2   hrgomin = 0.7, hrgomax = 0.9, stephrgo = 0.05,         # define optimization set for HRgo   alpha = 0.025, beta = 0.1, xi2 = 0.7, xi3 = 0.7,       # drug development planning parameters   c2 = 0.75, c3 = 1, c02 = 100, c03 = 150,               # define fixed and variable costs for phase II and III   K = Inf, N = Inf, S = -Inf,                            # set constraints   b1 = 1000, b2 = 2000, b3 = 3000,                       # define expected benefit for a \"small\", \"medium\" and \"large\" treatment effect   case = 1, strategy = TRUE,                             # chose Case and Strategy   fixed = TRUE,                                          # choose if true treatment effects are fixed or random   num_cl = 1)                                            # set number of cores used for parallelized computing  #>  #> Case  1 : Optimization progess for Strategy  1 #>  #>    |                                                                               |                                                                      |   0%   |                                                                               |==============                                                        |  20%   |                                                                               |============================                                          |  40%   |                                                                               |==========================================                            |  60%   |                                                                               |========================================================              |  80%   |                                                                               |======================================================================| 100% #>  #> Case  1 : Optimization progess for Strategy  2 #>  #>    |                                                                               |                                                                      |   0%   |                                                                               |==============                                                        |  20%   |                                                                               |============================                                          |  40%   |                                                                               |==========================================                            |  60%   |                                                                               |========================================================              |  80%   |                                                                               |======================================================================| 100% #>  #>  #> Optimization result: #>  #>   Case Strategy      u HRgo  d2  d3   d  n2  n3   n  pgo sProg   hr   K   N #> 1    1        1 859.71 0.85 100 312 412 144 446 590 0.85  0.67 0.69 Inf Inf #> 2    1        2 714.39 0.80 100 440 540 144 628 772 0.77  0.68 0.69 Inf Inf #>      S  K2  K3 sProg1 sProg2 sProg3 steps1 stepm1 stepl1 alpha beta xi2 xi3 c02 #> 1 -Inf 208 574   0.07   0.21   0.38      1   0.95   0.85 0.025  0.1 0.7 0.7 100 #> 2 -Inf 208 859   0.05   0.18   0.46      1   0.95   0.85 0.025  0.1 0.7 0.7 100 #>   c03   c2 c3   b1   b2   b3 gamma #> 1 150 0.75  1 1000 2000 3000     0 #> 2 150 0.75  1 1000 2000 3000     0 #>  res #>   Case Strategy      u HRgo  d2  d3   d  n2  n3   n  pgo sProg   hr   K   N #> 1    1        1 859.71 0.85 100 312 412 144 446 590 0.85  0.67 0.69 Inf Inf #> 2    1        2 714.39 0.80 100 440 540 144 628 772 0.77  0.68 0.69 Inf Inf #>      S  K2  K3 sProg1 sProg2 sProg3 steps1 stepm1 stepl1 alpha beta xi2 xi3 c02 #> 1 -Inf 208 574   0.07   0.21   0.38      1   0.95   0.85 0.025  0.1 0.7 0.7 100 #> 2 -Inf 208 859   0.05   0.18   0.46      1   0.95   0.85 0.025  0.1 0.7 0.7 100 #>   c03   c2 c3   b1   b2   b3 gamma #> 1 150 0.75  1 1000 2000 3000     0 #> 2 150 0.75  1 1000 2000 3000     0 cat(comment(res))                                        # displays the optimization sequence, start/ finish date of procedure. #>  #> optimization sequence HRgo: 0.7 0.75 0.8 0.85 0.9  #> optimization sequence d2: 20 25 30 35 40 45 50 55 60 65 70 75 80 85 90 95 100  #> set on date: 2022-08-12 08:12:05  #> finish date: 2022-08-12 08:12:24"},{"path":"https://sterniii3.github.io/drugdevelopR/reference/optimal_multitrial_binary.html","id":null,"dir":"Reference","previous_headings":"","what":"Optimal phase II/III drug development planning where several phase III trials are performed — optimal_multitrial_binary","title":"Optimal phase II/III drug development planning where several phase III trials are performed — optimal_multitrial_binary","text":"drugdevelopR package enables planning phase II/III drug development programs optimal sample size allocation go/-go decision rules. binary endpoints treatment effect measured risk ratio (RR).assumed true treatment effects can assumed fixed modelled prior distribution. R Shiny application prior visualizes prior distributions used package. Fast coputing enabled parallel programming.","code":""},{"path":"https://sterniii3.github.io/drugdevelopR/reference/optimal_multitrial_binary.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Optimal phase II/III drug development planning where several phase III trials are performed — optimal_multitrial_binary","text":"","code":"optimal_multitrial_binary(   w,   p0,   p11,   p12,   in1,   in2,   n2min,   n2max,   stepn2,   rrgomin,   rrgomax,   steprrgo,   alpha,   beta,   c2,   c3,   c02,   c03,   K = Inf,   N = Inf,   S = -Inf,   b1,   b2,   b3,   case,   strategy = TRUE,   fixed = FALSE,   num_cl = 1 )"},{"path":"https://sterniii3.github.io/drugdevelopR/reference/optimal_multitrial_binary.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Optimal phase II/III drug development planning where several phase III trials are performed — optimal_multitrial_binary","text":"w weight mixture prior distribution p0 assumed true rate control group p11 assumed true rate treatment group p12 assumed true rate treatment group in1 amount information p11 terms sample size in2 amount information p12 terms sample size n2min minimal total sample size phase II; must even number n2max maximal total sample size phase II, must even number stepn2 stepsize optimization n2; must even number rrgomin minimal threshold value go/-go decision rule rrgomax maximal threshold value go/-go decision rule steprrgo stepsize optimization RRgo alpha significance level beta 1-beta power calculation sample size phase III c2 variable per-patient cost phase II c3 variable per-patient cost phase III c02 fixed cost phase II c03 fixed cost phase III K constraint costs program, default: Inf, e.g. constraint N constraint total expected sample size program, default: Inf, e.g. constraint S constraint expected probability successful program, default: -Inf, e.g. constraint b1 expected gain effect size category \"small\" b2 expected gain effect size category \"medium\" b3 expected gain effect size category \"large\" case choose case: \"least 1, 2 3 significant trials needed approval\" strategy choose strategy: \"conduct 1, 2, 3 4 trial\"; TRUE calculates strategies selected Case fixed choose true treatment effects fixed random, TRUE p11 used fixed effect p1 num_cl number clusters used parallel computing, default: 1","code":""},{"path":"https://sterniii3.github.io/drugdevelopR/reference/optimal_multitrial_binary.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Optimal phase II/III drug development planning where several phase III trials are performed — optimal_multitrial_binary","text":"output function optimal_binary data.frame containing optimization results: Case Case: \"number significant trials needed\" Strategy Strategy: \"number conducted trials\" u maximal expected utility RRgo optimal threshold value decision rule go phase III n2 total sample size phase II n3 total sample size phase III; rounded next even natural number n total sample size program; n = n2 + n3 K maximal costs program pgo probability go phase III sProg probability successful program sProg1 probability successful program \"small\" treatment effect Phase III sProg2 probability successful program \"medium\" treatment effect Phase III sProg3 probability successful program \"large\" treatment effect Phase III K2 expected costs phase II K3 expected costs phase III input parameters. Taking cat(comment()) data.frame object lists used optimization sequences, start finish date optimization procedure.","code":""},{"path":"https://sterniii3.github.io/drugdevelopR/reference/optimal_multitrial_binary.html","id":"drugdevelopr-functions","dir":"Reference","previous_headings":"","what":"drugdevelopR functions","title":"Optimal phase II/III drug development planning where several phase III trials are performed — optimal_multitrial_binary","text":"drugdevelopR package provides functions optimal_tte, optimal_binary optimal_normal plan optimal phase II/III drug development programs time--event (treatment effect measured hazard ratio (HR)), binary (treatment effect measured risk ratio (RR)) normally distributed (treatment effect measured standardized difference means (Delta)) endpoint, treatment effect modelled prior. Optimal phase II/III drug development planning fixed treatment effects can done help R Shiny application basic. Extensions optimal planning programs including methods discounting phase II results (function: optimal_bias, App: bias), optimal planning programs several phase III trials (function: optimal_multitrial, App: multitrial) optimal planning programs multiple arms (function: optimal_multiarm, App: multiarm).","code":""},{"path":"https://sterniii3.github.io/drugdevelopR/reference/optimal_multitrial_binary.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Optimal phase II/III drug development planning where several phase III trials are performed — optimal_multitrial_binary","text":"IQWiG (2016). Allgemeine Methoden. Version 5.0, 10.07.2016, Technical Report. Available https://www.iqwig.de/de/methoden/methodenpapier.3020.html, assessed last 15.05.19.","code":""},{"path":"https://sterniii3.github.io/drugdevelopR/reference/optimal_multitrial_binary.html","id":"last-edited-by","dir":"Reference","previous_headings":"","what":"Last Edited By","title":"Optimal phase II/III drug development planning where several phase III trials are performed — optimal_multitrial_binary","text":"Johannes Cepicka","code":""},{"path":"https://sterniii3.github.io/drugdevelopR/reference/optimal_multitrial_binary.html","id":"last-edit-date","dir":"Reference","previous_headings":"","what":"Last Edit Date","title":"Optimal phase II/III drug development planning where several phase III trials are performed — optimal_multitrial_binary","text":"2022-04-23","code":""},{"path":"https://sterniii3.github.io/drugdevelopR/reference/optimal_multitrial_binary.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Optimal phase II/III drug development planning where several phase III trials are performed — optimal_multitrial_binary","text":"","code":"res <- optimal_multitrial_binary(w = 0.3,                # define parameters for prior   p0 = 0.6, p11 =  0.3, p12 = 0.5, in1 = 30, in2 = 60,   # (https://web.imbi.uni-heidelberg.de/prior/)   n2min = 20, n2max = 100, stepn2 = 4,                   # define optimization set for n2   rrgomin = 0.7, rrgomax = 0.9, steprrgo = 0.05,         # define optimization set for RRgo   alpha = 0.05, beta = 0.1,                              # drug development planning parameters   c2 = 0.75, c3 = 1, c02 = 100, c03 = 150,               # define fixed and variable costs for phase II and III,   K = Inf, N = Inf, S = -Inf,                            # set constraints   b1 = 1000, b2 = 2000, b3 = 3000,                       # define expected benefit for a \"small\", \"medium\" and \"large\" treatment effect   case = 1, strategy = TRUE,                             # chose Case and Strategy                                      fixed = TRUE,                                          # choose if true treatment effects are fixed or random   num_cl = 1)                                            # set number of cores used for parallelized computing  #>  #> Case  1 : Optimization progess for Strategy  1 #>  #>    |                                                                               |                                                                      |   0%   |                                                                               |==============                                                        |  20%   |                                                                               |============================                                          |  40%   |                                                                               |==========================================                            |  60%   |                                                                               |========================================================              |  80%   |                                                                               |======================================================================| 100% #>  #> Case  1 : Optimization progess for Strategy  2 #>  #>    |                                                                               |                                                                      |   0%   |                                                                               |==============                                                        |  20%   |                                                                               |============================                                          |  40%   |                                                                               |==========================================                            |  60%   |                                                                               |========================================================              |  80%   |                                                                               |======================================================================| 100% #>  #>  #> Optimization result: #>  #>   Case Strategy       u RRgo  n2  n3   n  pgo sProg  p0  p1   K   N    S  K2 #> 1    1        1 1806.86 0.90 100 166 266 0.99  0.82 0.6 0.3 Inf Inf -Inf 175 #> 2    1        2 1900.29 0.85 100 296 396 0.98  0.92 0.6 0.3 Inf Inf -Inf 175 #>    K3 sProg1 sProg2 sProg3 steps1 stepm1 stepl1 alpha beta c02 c03   c2 c3   b1 #> 1 315   0.04   0.10   0.68      1   0.95   0.85  0.05  0.1 100 150 0.75  1 1000 #> 2 591   0.02   0.06   0.84      1   0.95   0.85  0.05  0.1 100 150 0.75  1 1000 #>     b2   b3 #> 1 2000 3000 #> 2 2000 3000 #>  res #>   Case Strategy       u RRgo  n2  n3   n  pgo sProg  p0  p1   K   N    S  K2 #> 1    1        1 1806.86 0.90 100 166 266 0.99  0.82 0.6 0.3 Inf Inf -Inf 175 #> 2    1        2 1900.29 0.85 100 296 396 0.98  0.92 0.6 0.3 Inf Inf -Inf 175 #>    K3 sProg1 sProg2 sProg3 steps1 stepm1 stepl1 alpha beta c02 c03   c2 c3   b1 #> 1 315   0.04   0.10   0.68      1   0.95   0.85  0.05  0.1 100 150 0.75  1 1000 #> 2 591   0.02   0.06   0.84      1   0.95   0.85  0.05  0.1 100 150 0.75  1 1000 #>     b2   b3 #> 1 2000 3000 #> 2 2000 3000 cat(comment(res))                                        # displays the optimization sequence, start/finish date of procedure #>  #> optimization sequence RRgo: 0.7 0.75 0.8 0.85 0.9  #> optimization sequence n2: 20 24 28 32 36 40 44 48 52 56 60 64 68 72 76 80 84 88 92 96 100  #> set on date: 2022-08-12 08:12:24  #> finish date: 2022-08-12 08:12:52"},{"path":"https://sterniii3.github.io/drugdevelopR/reference/optimal_multitrial_normal.html","id":null,"dir":"Reference","previous_headings":"","what":"Optimal phase II/III drug development planning where several phase III trials are performed — optimal_multitrial_normal","title":"Optimal phase II/III drug development planning where several phase III trials are performed — optimal_multitrial_normal","text":"drugdevelopR package enables planning phase II/III drug development programs optimal sample size allocation go/-go decision rules. normally distributed endpoints treatment effect measured standardized difference means (Delta). assumed true treatment effects can assumed fixed modelled prior distribution. R Shiny application prior visualizes prior distributions used package. Fast coputing enabled parallel programming.","code":""},{"path":"https://sterniii3.github.io/drugdevelopR/reference/optimal_multitrial_normal.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Optimal phase II/III drug development planning where several phase III trials are performed — optimal_multitrial_normal","text":"","code":"optimal_multitrial_normal(   w,   Delta1,   Delta2,   in1,   in2,   a,   b,   n2min,   n2max,   stepn2,   kappamin,   kappamax,   stepkappa,   alpha,   beta,   c2,   c3,   c02,   c03,   K = Inf,   N = Inf,   S = -Inf,   b1,   b2,   b3,   case,   strategy = TRUE,   fixed = FALSE,   num_cl = 1 )"},{"path":"https://sterniii3.github.io/drugdevelopR/reference/optimal_multitrial_normal.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Optimal phase II/III drug development planning where several phase III trials are performed — optimal_multitrial_normal","text":"w weight mixture prior distribution Delta1 assumed true treatment effect standardized difference means Delta2 assumed true treatment effect standardized difference means in1 amount information Delta2 terms sample size in2 amount information Delta1 terms sample size lower boundary truncation b upper boundary truncation n2min minimal total sample size phase II; must even number n2max maximal total sample size phase II, must even number stepn2 stepsize optimization n2; must even number kappamin minimal threshold value go/-go decision rule kappamax maximal threshold value go/-go decision rule stepkappa stepsize optimization kappa alpha significance level beta 1-beta power calculation sample size phase III c2 variable per-patient cost phase II c3 variable per-patient cost phase III c02 fixed cost phase II c03 fixed cost phase III K constraint costs program, default: Inf, e.g. constraint N constraint total expected sample size program, default: Inf, e.g. constraint S constraint expected probability successful program, default: -Inf, e.g. constraint b1 expected gain effect size category \"small\" b2 expected gain effect size category \"medium\" b3 expected gain effect size category \"large\" case choose case: \"least 1, 2 3 significant trials needed approval\" strategy choose strategy: \"conduct 1, 2, 3 4 trial\"; TRUE calculates strategies selected Case fixed choose true treatment effects fixed random, TRUE hr1 used fixed effect num_cl number clusters used parallel computing, default: 1","code":""},{"path":"https://sterniii3.github.io/drugdevelopR/reference/optimal_multitrial_normal.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Optimal phase II/III drug development planning where several phase III trials are performed — optimal_multitrial_normal","text":"output function optimal_multitrial_normal data.frame containing optimization results: Case Case: \"number significant trials needed\" Strategy Strategy: \"number conducted trials\" u maximal expected utility kappa optimal threshold value decision rule go phase III n2 total sample size phase II n3 total sample size phase III; rounded next even natural number n total sample size program; n = n2 + n3 K maximal costs program pgo probability go phase III sProg probability successful program sProg1 probability successful program \"small\" treatment effect Phase III sProg2 probability successful program \"medium\" treatment effect Phase III sProg3 probability successful program \"large\" treatment effect Phase III K2 expected costs phase II K3 expected costs phase III input parameters. Taking cat(comment()) data.frame object lists used optimization sequences, start finish date optimization procedure.","code":""},{"path":"https://sterniii3.github.io/drugdevelopR/reference/optimal_multitrial_normal.html","id":"drugdevelopr-functions","dir":"Reference","previous_headings":"","what":"drugdevelopR functions","title":"Optimal phase II/III drug development planning where several phase III trials are performed — optimal_multitrial_normal","text":"drugdevelopR package provides functions optimal_tte, optimal_binary optimal_normal plan optimal phase II/III drug development programs time--event (treatment effect measured hazard ratio (HR)), binary (treatment effect measured risk ratio (RR)) normally distributed (treatment effect measured standardized difference means (Delta)) endpoint, treatment effect assumed fixed modelled prior. Optimal phase II/III drug development planning fixed treatment effects can also done help R Shiny application basic. Extensions optimal planning programs including methods discounting phase II results (function: optimal_bias, App: bias), optimal planning programs several phase III trials (function: optimal_multitrial, App: multitrial) optimal planning programs multiple arms (function: optimal_multiarm, App: multiarm).","code":""},{"path":"https://sterniii3.github.io/drugdevelopR/reference/optimal_multitrial_normal.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Optimal phase II/III drug development planning where several phase III trials are performed — optimal_multitrial_normal","text":"Cohen, J. (1988). Statistical power analysis behavioral sciences.","code":""},{"path":"https://sterniii3.github.io/drugdevelopR/reference/optimal_multitrial_normal.html","id":"last-edited-by","dir":"Reference","previous_headings":"","what":"Last Edited By","title":"Optimal phase II/III drug development planning where several phase III trials are performed — optimal_multitrial_normal","text":"Johannes Cepicka","code":""},{"path":"https://sterniii3.github.io/drugdevelopR/reference/optimal_multitrial_normal.html","id":"last-edit-date","dir":"Reference","previous_headings":"","what":"Last Edit Date","title":"Optimal phase II/III drug development planning where several phase III trials are performed — optimal_multitrial_normal","text":"2022-04-23","code":""},{"path":"https://sterniii3.github.io/drugdevelopR/reference/optimal_multitrial_normal.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Optimal phase II/III drug development planning where several phase III trials are performed — optimal_multitrial_normal","text":"","code":"res <- optimal_multitrial_normal(w=0.3,                             # define parameters for prior   Delta1 = 0.375, Delta2 = 0.625, in1=300, in2=600,      # (https://web.imbi.uni-heidelberg.de/prior/)   a = 0.25, b = 0.75,   n2min = 20, n2max = 100, stepn2 = 4,                   # define optimization set for n2   kappamin = 0.02, kappamax = 0.2, stepkappa = 0.02,     # define optimization set for kappa   alpha = 0.05, beta = 0.1,                              # drug development planning parameters   c2 = 0.675, c3 = 0.72, c02 = 15, c03 = 20,             # define fixed and variable costs for phase II and III   K = Inf, N = Inf, S = -Inf,                            # set constraints   b1 = 3000, b2 = 8000, b3 = 10000,                      # define expected benefit for a \"small\", \"medium\" and \"large\" treatment effect                                             # assume different/same population structures in phase II and III   case = 1, strategy = TRUE,                             # chose Case and Strategy   fixed = TRUE,                                          # choose if true treatment effects are fixed or random   num_cl = 1)                                            # set number of cores used for parallelized computing #>  #> Case  1 : Optimization progess for Strategy  1 #>  #>    |                                                                               |                                                                      |   0%   |                                                                               |=======                                                               |  10%   |                                                                               |==============                                                        |  20%   |                                                                               |=====================                                                 |  30%   |                                                                               |============================                                          |  40%   |                                                                               |===================================                                   |  50%   |                                                                               |==========================================                            |  60%   |                                                                               |=================================================                     |  70%   |                                                                               |========================================================              |  80%   |                                                                               |===============================================================       |  90%   |                                                                               |======================================================================| 100% #>  #> Case  1 : Optimization progess for Strategy  2 #>  #>    |                                                                               |                                                                      |   0%   |                                                                               |=======                                                               |  10%   |                                                                               |==============                                                        |  20%   |                                                                               |=====================                                                 |  30%   |                                                                               |============================                                          |  40%   |                                                                               |===================================                                   |  50%   |                                                                               |==========================================                            |  60%   |                                                                               |=================================================                     |  70%   |                                                                               |========================================================              |  80%   |                                                                               |===============================================================       |  90%   |                                                                               |======================================================================| 100% #>  #>  #> Optimization result: #>  #>   Case Strategy       u Kappa  n2  n3   n  pgo sProg Delta   K   N    S K2  K3 #> 1    1        1 1890.94  0.10 100 376 476 0.92  0.74 0.375 Inf Inf -Inf 82 289 #> 2    1        2 1928.79  0.12 100 656 756 0.90  0.82 0.375 Inf Inf -Inf 82 508 #>   sProg1 sProg2 sProg3 steps1 stepm1 stepl1 alpha beta c02 c03    c2   c3   b1 #> 1   0.74   0.01      0      0    0.5    0.8  0.05  0.1  15  20 0.675 0.72 3000 #> 2   0.81   0.01      0      0    0.5    0.8  0.05  0.1  15  20 0.675 0.72 3000 #>     b2    b3 #> 1 8000 10000 #> 2 8000 10000 #>  res #>   Case Strategy       u Kappa  n2  n3   n  pgo sProg Delta   K   N    S K2  K3 #> 1    1        1 1890.94  0.10 100 376 476 0.92  0.74 0.375 Inf Inf -Inf 82 289 #> 2    1        2 1928.79  0.12 100 656 756 0.90  0.82 0.375 Inf Inf -Inf 82 508 #>   sProg1 sProg2 sProg3 steps1 stepm1 stepl1 alpha beta c02 c03    c2   c3   b1 #> 1   0.74   0.01      0      0    0.5    0.8  0.05  0.1  15  20 0.675 0.72 3000 #> 2   0.81   0.01      0      0    0.5    0.8  0.05  0.1  15  20 0.675 0.72 3000 #>     b2    b3 #> 1 8000 10000 #> 2 8000 10000  cat(comment(res))                                        # displays the optimization sequence, start/ finish date of procedure. #>  #> optimization sequence kappa: 0.02 0.04 0.06 0.08 0.1 0.12 0.14 0.16 0.18 0.2  #> optimization sequence n2: 20 24 28 32 36 40 44 48 52 56 60 64 68 72 76 80 84 88 92 96 100  #> set on date: 2022-08-12 08:12:52  #> finish date: 2022-08-12 08:13:41"},{"path":"https://sterniii3.github.io/drugdevelopR/reference/optimal_normal.html","id":null,"dir":"Reference","previous_headings":"","what":"Optimal phase II/III drug development planning with normally distributed endpoint — optimal_normal","title":"Optimal phase II/III drug development planning with normally distributed endpoint — optimal_normal","text":"drugdevelopR package enables planning phase II/III drug development programs optimal sample size allocation go/-go decision rules. normally distributed endpoints treatment effect measured standardized difference means (Delta). assumed true treatment effects can assumed fixed modelled prior distribution. R Shiny application prior visualizes prior distributions used package. Fast coputing enabled parallel programming.","code":""},{"path":"https://sterniii3.github.io/drugdevelopR/reference/optimal_normal.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Optimal phase II/III drug development planning with normally distributed endpoint — optimal_normal","text":"","code":"optimal_normal(   w,   Delta1,   Delta2,   in1,   in2,   a,   b,   n2min,   n2max,   stepn2,   kappamin,   kappamax,   stepkappa,   alpha,   beta,   c2,   c3,   c02,   c03,   K = Inf,   N = Inf,   S = -Inf,   steps1 = 0,   stepm1 = 0.5,   stepl1 = 0.8,   b1,   b2,   b3,   gamma = 0,   fixed = FALSE,   skipII = FALSE,   num_cl = 1 )"},{"path":"https://sterniii3.github.io/drugdevelopR/reference/optimal_normal.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Optimal phase II/III drug development planning with normally distributed endpoint — optimal_normal","text":"w weight mixture prior distribution Delta1 assumed true treatment effect standardized difference means Delta2 assumed true treatment effect standardized difference means in1 amount information Delta2 terms sample size in2 amount information Delta1 terms sample size lower boundary truncation b upper boundary truncation n2min minimal total sample size phase II; must even number n2max maximal total sample size phase II, must even number stepn2 stepsize optimization n2; must even number kappamin minimal threshold value go/-go decision rule kappamax maximal threshold value go/-go decision rule stepkappa stepsize optimization kappa alpha significance level beta 1-beta power calculation sample size phase III c2 variable per-patient cost phase II c3 variable per-patient cost phase III c02 fixed cost phase II c03 fixed cost phase III K constraint costs program, default: Inf, e.g. constraint N constraint total expected sample size program, default: Inf, e.g. constraint S constraint expected probability successful program, default: -Inf, e.g. constraint steps1 lower boundary effect size category \"small\", default: 0 stepm1 lower boundary effect size category \"medium\" = upper boundary effect size category \"small\" default: 0.5 stepl1 lower boundary effect size category \"large\" = upper boundary effect size category \"medium\", default: 0.8 b1 expected gain effect size category \"small\" b2 expected gain effect size category \"medium\" b3 expected gain effect size category \"large\" gamma model different populations phase II III choose gamma!=0, default: 0 fixed choose true treatment effects fixed random, TRUE Delta1 used fixed effect skipII choose skipping phase II option, default: FASLE num_cl number clusters used parallel computing, default: 1","code":""},{"path":"https://sterniii3.github.io/drugdevelopR/reference/optimal_normal.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Optimal phase II/III drug development planning with normally distributed endpoint — optimal_normal","text":"output function optimal_normal data.frame containing optimization results: u maximal expected utility kappa optimal threshold value decision rule go phase III n2 total sample size phase II n3 total sample size phase III; rounded next even natural number n total sample size program; n = n2 + n3 K maximal costs program pgo probability go phase III sProg probability successful program sProg1 probability successful program \"small\" treatment effect Phase III sProg2 probability successful program \"medium\" treatment effect Phase III sProg3 probability successful program \"large\" treatment effect Phase III K2 expected costs phase II K3 expected costs phase III input parameters. Taking cat(comment()) data.frame object lists used optimization sequences, start finish date optimization procedure.","code":""},{"path":"https://sterniii3.github.io/drugdevelopR/reference/optimal_normal.html","id":"drugdevelopr-functions","dir":"Reference","previous_headings":"","what":"drugdevelopR functions","title":"Optimal phase II/III drug development planning with normally distributed endpoint — optimal_normal","text":"drugdevelopR package provides functions optimal_tte, optimal_binary optimal_normal plan optimal phase II/III drug development programs time--event (treatment effect measured hazard ratio (HR)), binary (treatment effect measured risk ratio (RR)) normally distributed (treatment effect measured standardized difference means (Delta)) endpoint, treatment effect assumed fixed modelled prior. Optimal phase II/III drug development planning fixed treatment effects can also done help R Shiny application basic. Extensions optimal planning programs including methods discounting phase II results (function: optimal_bias, App: bias), optimal planning programs several phase III trials (function: optimal_multitrial, App: multitrial) optimal planning programs multiple arms (function: optimal_multiarm, App: multiarm).","code":""},{"path":"https://sterniii3.github.io/drugdevelopR/reference/optimal_normal.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Optimal phase II/III drug development planning with normally distributed endpoint — optimal_normal","text":"Cohen, J. (1988). Statistical power analysis behavioral sciences.","code":""},{"path":"https://sterniii3.github.io/drugdevelopR/reference/optimal_normal.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Optimal phase II/III drug development planning with normally distributed endpoint — optimal_normal","text":"","code":"res <- optimal_normal(w=0.3,                             # define parameters for prior   Delta1 = 0.375, Delta2 = 0.625, in1=300, in2=600,      # (https://web.imbi.uni-heidelberg.de/prior/)   a = 0.25, b = 0.75,   n2min = 20, n2max = 100, stepn2 = 4,                   # define optimization set for n2   kappamin = 0.02, kappamax = 0.2, stepkappa = 0.02,     # define optimization set for kappa   alpha = 0.05, beta = 0.1,                              # drug development planning parameters   c2 = 0.675, c3 = 0.72, c02 = 15, c03 = 20,             # define fixed and variable costs for phase II and III   K = Inf, N = Inf, S = -Inf,                            # set maximal costs/ expected sample size for the program or minimal expected probability of a successful program   steps1 = 0,                                            # define lower boundary for \"small\"   stepm1 = 0.5,                                          # \"medium\"   stepl1 = 0.8,                                          # and \"large\" treatment effect size categories as proposed by e.g. Cohen (1988)   b1 = 3000, b2 = 8000, b3 = 10000,                      # define expected benefit for a \"small\", \"medium\" and \"large\" treatment effect   gamma = 0,                                             # assume different/same population structures in phase II and III   fixed = FALSE,                                         # choose if true treatment effects are fixed or random   skipII = FALSE,                                        # choose if skipping phase II would be an option   num_cl = 1)                                            # set number of cores used for parallelized computing (check maximum number possible with detectCores()) #> Optimization progress: #>  #>    |                                                                               |                                                                      |   0%   |                                                                               |=======                                                               |  10%   |                                                                               |==============                                                        |  20%   |                                                                               |=====================                                                 |  30%   |                                                                               |============================                                          |  40%   |                                                                               |===================================                                   |  50%   |                                                                               |==========================================                            |  60%   |                                                                               |=================================================                     |  70%   |                                                                               |========================================================              |  80%   |                                                                               |===============================================================       |  90%   |                                                                               |======================================================================| 100% #>  #>  #> Optimization result: #>  #>         u Kappa  n2  n3   n  pgo sProg   w Delta1 Delta2 in1 in2    a    b   K #> 1 2272.13  0.08 100 350 450 0.94  0.78 0.3  0.375  0.625 300 600 0.25 0.75 Inf #>   K2  K3 sProg1 sProg2 sProg3 steps1 stepm1 stepl1 alpha beta c02 c03    c2 #> 1 82 271   0.73   0.05      0      0    0.5    0.8  0.05  0.1  15  20 0.675 #>     c3   b1   b2    b3 gamma #> 1 0.72 3000 8000 10000     0 #>  res #>         u Kappa  n2  n3   n  pgo sProg   w Delta1 Delta2 in1 in2    a    b   K #> 1 2272.13  0.08 100 350 450 0.94  0.78 0.3  0.375  0.625 300 600 0.25 0.75 Inf #>   K2  K3 sProg1 sProg2 sProg3 steps1 stepm1 stepl1 alpha beta c02 c03    c2 #> 1 82 271   0.73   0.05      0      0    0.5    0.8  0.05  0.1  15  20 0.675 #>     c3   b1   b2    b3 gamma #> 1 0.72 3000 8000 10000     0 cat(comment(res))                                        # displays the optimization sequence, start and finish date of the optimization procedure. #>  #> optimization sequence Kappa: 0.02 0.04 0.06 0.08 0.1 0.12 0.14 0.16 0.18 0.2  #> optimization sequence n2: 20 24 28 32 36 40 44 48 52 56 60 64 68 72 76 80 84 88 92 96 100  #> set on date: 2022-08-12 08:13:41  #> finish date: 2022-08-12 08:16:02"},{"path":"https://sterniii3.github.io/drugdevelopR/reference/optimal_tte.html","id":null,"dir":"Reference","previous_headings":"","what":"Optimal phase II/III drug development planning with time-to-event endpoint — optimal_tte","title":"Optimal phase II/III drug development planning with time-to-event endpoint — optimal_tte","text":"function optimal_tte drugdevelopR package enables planning phase II/III drug development programs optimal sample size allocation go/-go decision rules time--event endpoints (Kirchner et al., 2016). assumed true treatment effects can assumed fixed modelled prior distribution. assuming fixed true tratment effects, planning can also done user friendly R Shiny App basic. App prior visualizes prior distributions used package. Fast computing enabled parallel programming. function optimal_tte drugdevelopR package enables planning phase II/III drug development programs optimal sample size allocation go/-go decision rules time--event endpoints (Kirchner et al., 2016). assumed true treatment effects can assumed fixed modelled prior distribution. assuming fixed true tratment effects, planning can also done user friendly R Shiny App basic. App prior visualizes prior distributions used package. Fast computing enabled parallel programming.","code":""},{"path":"https://sterniii3.github.io/drugdevelopR/reference/optimal_tte.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Optimal phase II/III drug development planning with time-to-event endpoint — optimal_tte","text":"","code":"optimal_tte(   w,   hr1,   hr2,   id1,   id2,   d2min,   d2max,   stepd2,   hrgomin,   hrgomax,   stephrgo,   alpha,   beta,   xi2,   xi3,   c2,   c3,   c02,   c03,   K = Inf,   N = Inf,   S = -Inf,   steps1 = 1,   stepm1 = 0.95,   stepl1 = 0.85,   b1,   b2,   b3,   gamma = 0,   fixed = FALSE,   skipII = FALSE,   num_cl = 1 )  optimal_tte_graphic(   w,   hr1,   hr2,   id1,   id2,   d2min,   d2max,   stepd2,   hrgomin,   hrgomax,   stephrgo,   alpha,   beta,   xi2,   xi3,   c2,   c3,   c02,   c03,   K = Inf,   N = Inf,   S = -Inf,   steps1 = 1,   stepm1 = 0.95,   stepl1 = 0.85,   b1,   b2,   b3,   gamma = 0,   fixed = FALSE,   skipII = FALSE,   num_cl = 1 )"},{"path":"https://sterniii3.github.io/drugdevelopR/reference/optimal_tte.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Optimal phase II/III drug development planning with time-to-event endpoint — optimal_tte","text":"data.frame containing optimization results (see Value) data.frame containing optimization results (see Value)","code":""},{"path":"https://sterniii3.github.io/drugdevelopR/reference/optimal_tte.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Optimal phase II/III drug development planning with time-to-event endpoint — optimal_tte","text":"w weight mixture prior distribution hr1 first assumed true treatment effect HR scale prior distribution hr2 second assumed true treatment effect HR scale prior distribution id1 amount information hr1 terms number events id2 amount information hr2 terms number events d2min minimal number events phase II d2max maximal number events phase II stepd2 stepsize optimization d2 hrgomin minimal threshold value go/-go decision rule hrgomax maximal threshold value go/-go decision rule stephrgo stepsize optimization HRgo alpha significance level beta 1-beta power calculation number events phase III Schoenfeld (1981) formula xi2 event rate phase II xi3 event rate phase III c2 variable per-patient cost phase II c3 variable per-patient cost phase III c02 fixed cost phase II c03 fixed cost phase III K constraint costs program, default: Inf, e.g. constraint N constraint total expected sample size program, default: Inf, e.g. constraint S constraint expected probability successful program, default: -Inf, e.g. constraint steps1 lower boundary effect size category \"small\" HR scale, default: 1 stepm1 lower boundary effect size category \"medium\" HR scale = upper boundary effect size category \"small\" HR scale, default: 0.95 stepl1 lower boundary effect size category \"large\" HR scale = upper boundary effect size category \"medium\" HR scale, default: 0.85 b1 expected gain effect size category \"small\" b2 expected gain effect size category \"medium\" b3 expected gain effect size category \"large\" gamma model different populations phase II III choose gamma!=0, default: 0 fixed choose true treatment effects fixed random, TRUE hr1 used fixed effect skipII choose skipping phase II option, default: FASLE num_cl number clusters used parallel computing, default: 1","code":""},{"path":"https://sterniii3.github.io/drugdevelopR/reference/optimal_tte.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Optimal phase II/III drug development planning with time-to-event endpoint — optimal_tte","text":"output function optimal_tte data.frame containing optimization results: u maximal expected utility HRgo optimal threshold value decision rule go phase III d2 optimal total number events phase II d3 total expected number events phase III; rounded next natural number d total expected number events program; d = d2 + d3 n2 total sample size phase II; rounded next even natural number n3 total sample size phase III; rounded next even natural number n total sample size program; n = n2 + n3 K maximal costs program pgo probability go phase III sProg probability successful program sProg1 probability successful program \"small\" treatment effect Phase III sProg2 probability successful program \"medium\" treatment effect Phase III sProg3 probability successful program \"large\" treatment effect Phase III K2 expected costs phase II K3 expected costs phase III input parameters. Taking cat(comment()) data.frame object lists used optimization sequences, start finish date optimization procedure. output function optimal_tte data.frame containing optimization results: u maximal expected utility HRgo optimal threshold value decision rule go phase III d2 optimal total number events phase II d3 total expected number events phase III; rounded next natural number d total expected number events program; d = d2 + d3 n2 total sample size phase II; rounded next even natural number n3 total sample size phase III; rounded next even natural number n total sample size program; n = n2 + n3 K maximal costs program pgo probability go phase III sProg probability successful program sProg1 probability successful program \"small\" treatment effect Phase III sProg2 probability successful program \"medium\" treatment effect Phase III sProg3 probability successful program \"large\" treatment effect Phase III K2 expected costs phase II K3 expected costs phase III input parameters. Taking cat(comment()) data.frame object lists used optimization sequences, start finish date optimization procedure.","code":""},{"path":"https://sterniii3.github.io/drugdevelopR/reference/optimal_tte.html","id":"drugdevelopr-package-and-r-shiny-app","dir":"Reference","previous_headings":"","what":"drugdevelopR package and R Shiny App","title":"Optimal phase II/III drug development planning with time-to-event endpoint — optimal_tte","text":"drugdevelopR package provides functions plan optimal phase II/III drug development programs variuos scenarios. App drugdevelopR serves homepage, navigating different parts drugdevelopR framework via links. drugdevelopR package provides functions plan optimal phase II/III drug development programs variuos scenarios. App drugdevelopR serves homepage, navigating different parts drugdevelopR framework via links.","code":""},{"path":"https://sterniii3.github.io/drugdevelopR/reference/optimal_tte.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Optimal phase II/III drug development planning with time-to-event endpoint — optimal_tte","text":"Kirchner, M., Kieser, M., Goette, H., & Schueler, . (2016). Utility-based optimization phase II/III programs. Statistics Medicine, 35(2), 305-316. IQWiG (2016). Allgemeine Methoden. Version 5.0, 10.07.2016, Technical Report. Available https://www.iqwig.de/de/methoden/methodenpapier.3020.html, assessed last 15.05.19. Schoenfeld, D. (1981). asymptotic properties nonparametric tests comparing survival distributions. Biometrika, 68(1), 316-319. Kirchner, M., Kieser, M., Goette, H., & Schueler, . (2016). Utility-based optimization phase II/III programs. Statistics Medicine, 35(2), 305-316. IQWiG (2016). Allgemeine Methoden. Version 5.0, 10.07.2016, Technical Report. Available https://www.iqwig.de/de/methoden/methodenpapier.3020.html, assessed last 15.05.19. Schoenfeld, D. (1981). asymptotic properties nonparametric tests comparing survival distributions. Biometrika, 68(1), 316-319.","code":""},{"path":[]},{"path":"https://sterniii3.github.io/drugdevelopR/reference/optimal_tte.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Optimal phase II/III drug development planning with time-to-event endpoint — optimal_tte","text":"","code":"res <- optimal_tte(w = 0.3,                              # define parameters for prior   hr1 = 0.69, hr2 = 0.88, id1 = 210, id2 = 420,          # (https://web.imbi.uni-heidelberg.de/prior/)   d2min = 20, d2max = 100, stepd2 = 5,                   # define optimization set for d2   hrgomin = 0.7, hrgomax = 0.9, stephrgo = 0.05,         # define optimization set for HRgo   alpha = 0.05, beta = 0.1, xi2 = 0.7, xi3 = 0.7,        # drug development planning parameters   c2 = 0.75, c3 = 1, c02 = 100, c03 = 150,               # define fixed and variable costs for phase II and III   K = Inf, N = Inf, S = -Inf,                            # set maximal costs/ expected sample size for the program or minimal expected probability of a successful program   steps1 = 1,                                            # define lower boundary for \"small\"   stepm1 = 0.95,                                         # \"medium\"   stepl1 = 0.85,                                         # and \"large\" treatment effect size categories as proposed by IQWiG (2016)   b1 = 1000, b2 = 2000, b3 = 3000,                       # define expected benefit for a \"small\", \"medium\" and \"large\" treatment effect   gamma = 0,                                             # assume different/same population structures in phase II and III   fixed = FALSE,                                         # choose if true treatment effects are fixed or random   skipII = FALSE,                                        # choose if skipping phase II would be an option   num_cl = 1)                                            # set number of cores used for parallelized computing (check maximum number possible with detectCores()) #>  #> Optimization progress: #>  #>    |                                                                               |                                                                      |   0%   |                                                                               |==============                                                        |  20%   |                                                                               |============================                                          |  40%   |                                                                               |==========================================                            |  60%   |                                                                               |========================================================              |  80%   |                                                                               |======================================================================| 100% #>  #>  #> Optimization result: #>  #>        u HRgo d2  d3   d  n2  n3   n  pgo sProg   w  hr1  hr2 id1 id2   K   N #> 1 164.01  0.8 90 121 211 130 172 302 0.45  0.26 0.3 0.69 0.88 210 420 Inf Inf #>      S  K2  K3 sProg1 sProg2 sProg3 steps1 stepm1 stepl1 alpha beta xi2 xi3 c02 #> 1 -Inf 198 240   0.05   0.09   0.12      1   0.95   0.85  0.05  0.1 0.7 0.7 100 #>   c03   c2 c3   b1   b2   b3 gamma #> 1 150 0.75  1 1000 2000 3000     0 #>  res #>        u HRgo d2  d3   d  n2  n3   n  pgo sProg   w  hr1  hr2 id1 id2   K   N #> 1 164.01  0.8 90 121 211 130 172 302 0.45  0.26 0.3 0.69 0.88 210 420 Inf Inf #>      S  K2  K3 sProg1 sProg2 sProg3 steps1 stepm1 stepl1 alpha beta xi2 xi3 c02 #> 1 -Inf 198 240   0.05   0.09   0.12      1   0.95   0.85  0.05  0.1 0.7 0.7 100 #>   c03   c2 c3   b1   b2   b3 gamma #> 1 150 0.75  1 1000 2000 3000     0 cat(comment(res))                                        # displays the optimization sequence, start and finish date of the optimization procedure. #>  #> optimization sequence HRgo: 0.7 0.75 0.8 0.85 0.9  #> optimization sequence d2: 20 25 30 35 40 45 50 55 60 65 70 75 80 85 90 95 100  #> set on date: 2022-08-12 08:16:02  #> finish date: 2022-08-12 08:16:10 res <- optimal_tte(w = 0.3,                              # define parameters for prior   hr1 = 0.69, hr2 = 0.88, id1 = 210, id2 = 420,          # (https://web.imbi.uni-heidelberg.de/prior/)   d2min = 20, d2max = 100, stepd2 = 5,                   # define optimization set for d2   hrgomin = 0.7, hrgomax = 0.9, stephrgo = 0.05,         # define optimization set for HRgo   alpha = 0.05, beta = 0.1, xi2 = 0.7, xi3 = 0.7,        # drug development planning parameters   c2 = 0.75, c3 = 1, c02 = 100, c03 = 150,               # define fixed and variable costs for phase II and III   K = Inf, N = Inf, S = -Inf,                            # set maximal costs/ expected sample size for the program or minimal expected probability of a successful program   steps1 = 1,                                            # define lower boundary for \"small\"   stepm1 = 0.95,                                         # \"medium\"   stepl1 = 0.85,                                         # and \"large\" treatment effect size categories as proposed by IQWiG (2016)   b1 = 1000, b2 = 2000, b3 = 3000,                       # define expected benefit for a \"small\", \"medium\" and \"large\" treatment effect   gamma = 0,                                             # assume different/same population structures in phase II and III   fixed = FALSE,                                         # choose if true treatment effects are fixed or random   skipII = FALSE,                                        # choose if skipping phase II would be an option   num_cl = 1)                                            # set number of cores used for parallelized computing (check maximum number possible with detectCores()) #>  #> Optimization progress: #>  #>    |                                                                               |                                                                      |   0%   |                                                                               |==============                                                        |  20%   |                                                                               |============================                                          |  40%   |                                                                               |==========================================                            |  60%   |                                                                               |========================================================              |  80%   |                                                                               |======================================================================| 100% #>  #>  #> Optimization result: #>  #>        u HRgo d2  d3   d  n2  n3   n  pgo sProg   w  hr1  hr2 id1 id2   K   N #> 1 164.01  0.8 90 121 211 130 172 302 0.45  0.26 0.3 0.69 0.88 210 420 Inf Inf #>      S  K2  K3 sProg1 sProg2 sProg3 steps1 stepm1 stepl1 alpha beta xi2 xi3 c02 #> 1 -Inf 198 240   0.05   0.09   0.12      1   0.95   0.85  0.05  0.1 0.7 0.7 100 #>   c03   c2 c3   b1   b2   b3 gamma #> 1 150 0.75  1 1000 2000 3000     0 #>  res #>        u HRgo d2  d3   d  n2  n3   n  pgo sProg   w  hr1  hr2 id1 id2   K   N #> 1 164.01  0.8 90 121 211 130 172 302 0.45  0.26 0.3 0.69 0.88 210 420 Inf Inf #>      S  K2  K3 sProg1 sProg2 sProg3 steps1 stepm1 stepl1 alpha beta xi2 xi3 c02 #> 1 -Inf 198 240   0.05   0.09   0.12      1   0.95   0.85  0.05  0.1 0.7 0.7 100 #>   c03   c2 c3   b1   b2   b3 gamma #> 1 150 0.75  1 1000 2000 3000     0 cat(comment(res))                                        # displays the optimization sequence, start and finish date of the optimization procedure. #>  #> optimization sequence HRgo: 0.7 0.75 0.8 0.85 0.9  #> optimization sequence d2: 20 25 30 35 40 45 50 55 60 65 70 75 80 85 90 95 100  #> set on date: 2022-08-12 08:16:10  #> finish date: 2022-08-12 08:16:18"},{"path":"https://sterniii3.github.io/drugdevelopR/reference/os_tte.html","id":null,"dir":"Reference","previous_headings":"","what":"Probability that endpoint OS significant — os_tte","title":"Probability that endpoint OS significant — os_tte","text":"function calculate probability endpoint OS statistically significant. context cancer research OS stands overall survival, positive treatment effect endpoints thus sufficient successful program.","code":""},{"path":"https://sterniii3.github.io/drugdevelopR/reference/os_tte.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Probability that endpoint OS significant — os_tte","text":"","code":"os_tte(HRgo, n2, alpha, beta, ec, hr1, hr2, id1, id2, fixed, rho)"},{"path":"https://sterniii3.github.io/drugdevelopR/reference/os_tte.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Probability that endpoint OS significant — os_tte","text":"HRgo threshold value go/-go decision rule; n2 total sample size phase II; must even number alpha one- sided significance level beta 1-beta power calculation number events phase III Schoenfeld (1981) formula ec control arm event rate phase II III hr1 assumed true treatment effect HR scale treatment 1 hr2 assumed true treatment effect HR scale treatment 2 id1 amount information hr1 terms number events id2 amount information hr2 terms number events fixed choose true treatment effects fixed random, TRUE hr1 used fixed effect rho correlation two endpoints","code":""},{"path":"https://sterniii3.github.io/drugdevelopR/reference/os_tte.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Probability that endpoint OS significant — os_tte","text":"output function os_tte() probability endpoint OS significant.","code":""},{"path":"https://sterniii3.github.io/drugdevelopR/reference/os_tte.html","id":"last-edited-by","dir":"Reference","previous_headings":"","what":"Last Edited By","title":"Probability that endpoint OS significant — os_tte","text":"Johannes Cepicka","code":""},{"path":"https://sterniii3.github.io/drugdevelopR/reference/os_tte.html","id":"last-edit-date","dir":"Reference","previous_headings":"","what":"Last Edit Date","title":"Probability that endpoint OS significant — os_tte","text":"2022-04-23","code":""},{"path":"https://sterniii3.github.io/drugdevelopR/reference/os_tte.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Probability that endpoint OS significant — os_tte","text":"","code":"res <- os_tte(HRgo = 0.8, n2 = 50, alpha = 0.05, beta = 0.1,                                hr1 = 0.75, hr2 = 0.80,                                 id1 = 300, id2 = 600,                                 fixed = TRUE, rho = 0.3)"},{"path":"https://sterniii3.github.io/drugdevelopR/reference/pgo_binary.html","id":null,"dir":"Reference","previous_headings":"","what":"Probability to go to phase III for multiarm programs with binary distributed outcomes — pgo_binary","title":"Probability to go to phase III for multiarm programs with binary distributed outcomes — pgo_binary","text":"Given parameters function calculates probability go phase III second phase conducted. considered strategies follows:  Strategy: best promising treatment goes phase III","code":""},{"path":"https://sterniii3.github.io/drugdevelopR/reference/pgo_binary.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Probability to go to phase III for multiarm programs with binary distributed outcomes — pgo_binary","text":"","code":"pgo_binary(RRgo, n2, p0, p11, p12, strategy, case)"},{"path":"https://sterniii3.github.io/drugdevelopR/reference/pgo_binary.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Probability to go to phase III for multiarm programs with binary distributed outcomes — pgo_binary","text":"RRgo threshold value go/-go decision rule n2 total sample size phase II; must even number p0 assumed true rate control group p11 assumed true rate treatment group p12 assumed true rate treatment group strategy choose Strategy: 1 (\"best promising\"), 2 (\"promising\") 3 () case different cases: 1 (\"nogo\"), 21 (treatment 1 promising, treatment 2 ), 22 (treatment 2 promising, treatment 1 ), 31 (treatments promising, treatment 1 better), 32 (treatments promising, treatment 2 better)","code":""},{"path":"https://sterniii3.github.io/drugdevelopR/reference/pgo_binary.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Probability to go to phase III for multiarm programs with binary distributed outcomes — pgo_binary","text":"function pgo_binary() returns probability go phase III.","code":""},{"path":"https://sterniii3.github.io/drugdevelopR/reference/pgo_binary.html","id":"last-edited-by","dir":"Reference","previous_headings":"","what":"Last Edited By","title":"Probability to go to phase III for multiarm programs with binary distributed outcomes — pgo_binary","text":"Johannes Cepicka","code":""},{"path":"https://sterniii3.github.io/drugdevelopR/reference/pgo_binary.html","id":"last-edit-date","dir":"Reference","previous_headings":"","what":"Last Edit Date","title":"Probability to go to phase III for multiarm programs with binary distributed outcomes — pgo_binary","text":"2022-04-23","code":""},{"path":"https://sterniii3.github.io/drugdevelopR/reference/pgo_binary.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Probability to go to phase III for multiarm programs with binary distributed outcomes — pgo_binary","text":"","code":"res <- pgo_binary(RRgo = 0.8 ,n2 = 50 ,p0 = 0.6, p11 =  0.3, p12 = 0.5,strategy = 3, case = 31)"},{"path":"https://sterniii3.github.io/drugdevelopR/reference/pgo_multiple_normal.html","id":null,"dir":"Reference","previous_headings":"","what":"Probability to go to phase III for multiple endpoints with normally distributed outcomes — pgo_multiple_normal","title":"Probability to go to phase III for multiple endpoints with normally distributed outcomes — pgo_multiple_normal","text":"function calculated probability go phase III, .e. results phase II promising enough get successful drug development program. Successful means endpoints show statistically significant positive treatment effect phase III.","code":""},{"path":"https://sterniii3.github.io/drugdevelopR/reference/pgo_multiple_normal.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Probability to go to phase III for multiple endpoints with normally distributed outcomes — pgo_multiple_normal","text":"","code":"pgo_multiple_normal(   kappa,   n2,   Delta1,   Delta2,   in1,   in2,   sigma1,   sigma2,   fixed,   rho )"},{"path":"https://sterniii3.github.io/drugdevelopR/reference/pgo_multiple_normal.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Probability to go to phase III for multiple endpoints with normally distributed outcomes — pgo_multiple_normal","text":"kappa threshold value go/-go decision rule; vector endpoints n2 total sample size phase II; must even number Delta1 assumed true treatment effect standardized difference means Delta2 assumed true treatment effect standardized difference means in1 amount information Delta1 terms sample size in2 amount information Delta2 terms sample size sigma1 standard deviation first endpoint sigma2 standard deviation second endpoint fixed choose true treatment effects fixed random, TRUE Delta1 used fixed effect rho correlation two endpoints","code":""},{"path":"https://sterniii3.github.io/drugdevelopR/reference/pgo_multiple_normal.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Probability to go to phase III for multiple endpoints with normally distributed outcomes — pgo_multiple_normal","text":"output function pgo_multiple_normal() probability go phase III.","code":""},{"path":"https://sterniii3.github.io/drugdevelopR/reference/pgo_multiple_normal.html","id":"last-edited-by","dir":"Reference","previous_headings":"","what":"Last Edited By","title":"Probability to go to phase III for multiple endpoints with normally distributed outcomes — pgo_multiple_normal","text":"Johannes Cepicka","code":""},{"path":"https://sterniii3.github.io/drugdevelopR/reference/pgo_multiple_normal.html","id":"last-edit-date","dir":"Reference","previous_headings":"","what":"Last Edit Date","title":"Probability to go to phase III for multiple endpoints with normally distributed outcomes — pgo_multiple_normal","text":"2022-04-23","code":""},{"path":"https://sterniii3.github.io/drugdevelopR/reference/pgo_multiple_normal.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Probability to go to phase III for multiple endpoints with normally distributed outcomes — pgo_multiple_normal","text":"","code":"res <- pgo_multiple_normal(kappa = 0.1, n2 = 50,                                Delta1 = 0.375, Delta2 = 0.625, in1 = 300, in2 = 600,                                 sigma1 = 8, sigma2 = 4, fixed = TRUE, rho = 0.3)"},{"path":"https://sterniii3.github.io/drugdevelopR/reference/pgo_multiple_tte.html","id":null,"dir":"Reference","previous_headings":"","what":"Probability to go to phase III for multiple endpoints in the time-to-event setting — pgo_multiple_tte","title":"Probability to go to phase III for multiple endpoints in the time-to-event setting — pgo_multiple_tte","text":"function calculated probability go phase III, .e. results phase II promising enough get successful drug development program. Successful means least one endpoint show statistically significant positive treatment effect phase III.","code":""},{"path":"https://sterniii3.github.io/drugdevelopR/reference/pgo_multiple_tte.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Probability to go to phase III for multiple endpoints in the time-to-event setting — pgo_multiple_tte","text":"","code":"pgo_multiple_tte(HRgo, n2, ec, hr1, hr2, id1, id2, fixed, rho)"},{"path":"https://sterniii3.github.io/drugdevelopR/reference/pgo_multiple_tte.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Probability to go to phase III for multiple endpoints in the time-to-event setting — pgo_multiple_tte","text":"HRgo threshold value go/-go decision rule; n2 total sample size phase II; must even number ec control arm event rate phase II III hr1 assumed true treatment effect HR scale treatment 1 hr2 assumed true treatment effect HR scale treatment 2 id1 amount information hr1 terms number events id2 amount information hr2 terms number events fixed choose true treatment effects fixed random, TRUE hr1 used fixed effect rho correlation two endpoints","code":""},{"path":"https://sterniii3.github.io/drugdevelopR/reference/pgo_multiple_tte.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Probability to go to phase III for multiple endpoints in the time-to-event setting — pgo_multiple_tte","text":"output function pgo_multiple_tte() probability go phase III.","code":""},{"path":"https://sterniii3.github.io/drugdevelopR/reference/pgo_multiple_tte.html","id":"last-edited-by","dir":"Reference","previous_headings":"","what":"Last Edited By","title":"Probability to go to phase III for multiple endpoints in the time-to-event setting — pgo_multiple_tte","text":"Johannes Cepicka","code":""},{"path":"https://sterniii3.github.io/drugdevelopR/reference/pgo_multiple_tte.html","id":"last-edit-date","dir":"Reference","previous_headings":"","what":"Last Edit Date","title":"Probability to go to phase III for multiple endpoints in the time-to-event setting — pgo_multiple_tte","text":"2022-04-23","code":""},{"path":"https://sterniii3.github.io/drugdevelopR/reference/pgo_multiple_tte.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Probability to go to phase III for multiple endpoints in the time-to-event setting — pgo_multiple_tte","text":"","code":"res <- pgo_multiple_tte(HRgo = 0.8, n2 = 50, ec = 0.6,                                hr1 = 0.75, hr2 = 0.80, id1 = 300, id2 = 600,                                 fixed = TRUE, rho = 0.3)"},{"path":"https://sterniii3.github.io/drugdevelopR/reference/pgo_normal.html","id":null,"dir":"Reference","previous_headings":"","what":"Probability to go to phase III for multiarm programs with normally distributed outcomes — pgo_normal","title":"Probability to go to phase III for multiarm programs with normally distributed outcomes — pgo_normal","text":"Given parameters function calculates probability go phase III second phase conducted. considered strategies follows:  Strategy: best promising treatment goes phase III","code":""},{"path":"https://sterniii3.github.io/drugdevelopR/reference/pgo_normal.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Probability to go to phase III for multiarm programs with normally distributed outcomes — pgo_normal","text":"","code":"pgo_normal(kappa, n2, Delta1, Delta2, strategy, case)"},{"path":"https://sterniii3.github.io/drugdevelopR/reference/pgo_normal.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Probability to go to phase III for multiarm programs with normally distributed outcomes — pgo_normal","text":"kappa threshold value go/-go decision rule n2 total sample size phase II; must even number Delta1 assumed true treatment effect standardized difference means Delta2 assumed true treatment effect standardized difference means strategy choose Strategy: 1 (\"best promising\"), 2 (\"promising\") 3 () case different cases: 1 (\"nogo\"), 21 (treatment 1 promising, treatment 2 ), 22 (treatment 2 promising, treatment 1 ), 31 (treatments promising, treatment 1 better), 32 (treatments promising, treatment 2 better)","code":""},{"path":"https://sterniii3.github.io/drugdevelopR/reference/pgo_normal.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Probability to go to phase III for multiarm programs with normally distributed outcomes — pgo_normal","text":"function pgo_normal() returns probability go phase III multiarm programs normally distributed outcomes","code":""},{"path":"https://sterniii3.github.io/drugdevelopR/reference/pgo_normal.html","id":"last-edited-by","dir":"Reference","previous_headings":"","what":"Last Edited By","title":"Probability to go to phase III for multiarm programs with normally distributed outcomes — pgo_normal","text":"Johannes Cepicka","code":""},{"path":"https://sterniii3.github.io/drugdevelopR/reference/pgo_normal.html","id":"last-edit-date","dir":"Reference","previous_headings":"","what":"Last Edit Date","title":"Probability to go to phase III for multiarm programs with normally distributed outcomes — pgo_normal","text":"2022-05-08","code":""},{"path":"https://sterniii3.github.io/drugdevelopR/reference/pgo_normal.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Probability to go to phase III for multiarm programs with normally distributed outcomes — pgo_normal","text":"","code":"res <- pgo_normal(kappa = 0.1, n2 = 50, Delta1 = 0.375, Delta2 = 0.625, strategy = 3, case = 31)"},{"path":"https://sterniii3.github.io/drugdevelopR/reference/pgo_tte.html","id":null,"dir":"Reference","previous_headings":"","what":"Probability to go to phase III for multiarm programs with time-to-event outcomes — pgo_tte","title":"Probability to go to phase III for multiarm programs with time-to-event outcomes — pgo_tte","text":"Given parameters function calculates probability go phase III second phase conducted. considered strategies follows:  Strategy: best promising treatment goes phase III","code":""},{"path":"https://sterniii3.github.io/drugdevelopR/reference/pgo_tte.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Probability to go to phase III for multiarm programs with time-to-event outcomes — pgo_tte","text":"","code":"pgo_tte(HRgo, n2, ec, hr1, hr2, strategy, case)"},{"path":"https://sterniii3.github.io/drugdevelopR/reference/pgo_tte.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Probability to go to phase III for multiarm programs with time-to-event outcomes — pgo_tte","text":"HRgo threshold value go/-go decision rule n2 total sample size phase II, must divisible 3 ec control arm event rate phase II III hr1 assumed true treatment effect HR scale treatment 1 hr2 assumed true treatment effect HR scale treatment 2 strategy choose Strategy: 1 (\"best promising\"), 2 (\"promising\") 3 () case different cases: 1 (\"nogo\"), 21 (treatment 1 promising, treatment 2 ), 22 (treatment 2 promising, treatment 1 ), 31 (treatments promising, treatment 1 better), 32 (treatments promising, treatment 2 better)","code":""},{"path":"https://sterniii3.github.io/drugdevelopR/reference/pgo_tte.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Probability to go to phase III for multiarm programs with time-to-event outcomes — pgo_tte","text":"function pgo_tte() returns probability go phase III.","code":""},{"path":"https://sterniii3.github.io/drugdevelopR/reference/pgo_tte.html","id":"last-edited-by","dir":"Reference","previous_headings":"","what":"Last Edited By","title":"Probability to go to phase III for multiarm programs with time-to-event outcomes — pgo_tte","text":"Johannes Cepicka","code":""},{"path":"https://sterniii3.github.io/drugdevelopR/reference/pgo_tte.html","id":"last-edit-date","dir":"Reference","previous_headings":"","what":"Last Edit Date","title":"Probability to go to phase III for multiarm programs with time-to-event outcomes — pgo_tte","text":"2022-04-23","code":""},{"path":"https://sterniii3.github.io/drugdevelopR/reference/pgo_tte.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Probability to go to phase III for multiarm programs with time-to-event outcomes — pgo_tte","text":"","code":"res <- pgo_tte(HRgo = 0.8, n2 = 48 , ec = 0.6, hr1 = 0.7, hr2 = 0.8, strategy = 3, case = 31)"},{"path":"https://sterniii3.github.io/drugdevelopR/reference/posp_normal.html","id":null,"dir":"Reference","previous_headings":"","what":"Probability of a successful program, when going to phase III for multiple endpoint with normally distributed outcomes — posp_normal","title":"Probability of a successful program, when going to phase III for multiple endpoint with normally distributed outcomes — posp_normal","text":"getting \"go\"-decision go phase III, .e. results phase II predefined threshold kappa, function calculates probability, program successfull, .e. endpoints show statistically significant positive treatment effect phase III.","code":""},{"path":"https://sterniii3.github.io/drugdevelopR/reference/posp_normal.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Probability of a successful program, when going to phase III for multiple endpoint with normally distributed outcomes — posp_normal","text":"","code":"posp_normal(   kappa,   n2,   alpha,   beta,   Delta1,   Delta2,   sigma1,   sigma2,   in1,   in2,   fixed,   rho )"},{"path":"https://sterniii3.github.io/drugdevelopR/reference/posp_normal.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Probability of a successful program, when going to phase III for multiple endpoint with normally distributed outcomes — posp_normal","text":"kappa threshold value go/-go decision rule; n2 total sample size phase II; must even number alpha significance level beta 1-beta power calculation sample size phase III Delta1 assumed true treatment effect standardized difference means Delta2 assumed true treatment effect standardized difference means sigma1 standard deviation first endpoint sigma2 standard deviation second endpoint in1 amount information Delta1 terms sample size in2 amount information Delta2 terms sample size fixed choose true treatment effects fixed random, TRUE Delta1 used fixed effect rho correlation two endpoints","code":""},{"path":"https://sterniii3.github.io/drugdevelopR/reference/posp_normal.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Probability of a successful program, when going to phase III for multiple endpoint with normally distributed outcomes — posp_normal","text":"output function posp_normal() probability successful program, going phase III.","code":""},{"path":"https://sterniii3.github.io/drugdevelopR/reference/posp_normal.html","id":"last-edited-by","dir":"Reference","previous_headings":"","what":"Last Edited By","title":"Probability of a successful program, when going to phase III for multiple endpoint with normally distributed outcomes — posp_normal","text":"Johannes Cepicka","code":""},{"path":"https://sterniii3.github.io/drugdevelopR/reference/posp_normal.html","id":"last-edit-date","dir":"Reference","previous_headings":"","what":"Last Edit Date","title":"Probability of a successful program, when going to phase III for multiple endpoint with normally distributed outcomes — posp_normal","text":"2022-04-23","code":""},{"path":"https://sterniii3.github.io/drugdevelopR/reference/posp_normal.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Probability of a successful program, when going to phase III for multiple endpoint with normally distributed outcomes — posp_normal","text":"","code":"res <- posp_normal(kappa = 0.1, n2 = 50, alpha = 0.025, beta = 0.1,                                Delta1 = 0.375, Delta2 = 0.625, in1 = 300, in2 = 600,                                 sigma1 = 8, sigma2 = 4, fixed = TRUE, rho = 0.3)"},{"path":"https://sterniii3.github.io/drugdevelopR/reference/pw.html","id":null,"dir":"Reference","previous_headings":"","what":"Probabilty that effect in endpoint one larger than in endpoint two — pw","title":"Probabilty that effect in endpoint one larger than in endpoint two — pw","text":"function calculated probability treatment effect endpoint one (endpoint x) larger endpoint two (endpoint y), .e. P(x>y) = P(x-y>0)","code":""},{"path":"https://sterniii3.github.io/drugdevelopR/reference/pw.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Probabilty that effect in endpoint one larger than in endpoint two — pw","text":"","code":"pw(n2, ec, hr1, hr2, id1, id2, fixed, rho)"},{"path":"https://sterniii3.github.io/drugdevelopR/reference/pw.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Probabilty that effect in endpoint one larger than in endpoint two — pw","text":"n2 total sample size phase II; must even number ec control arm event rate phase II III hr1 assumed true treatment effect HR scale treatment 1 hr2 assumed true treatment effect HR scale treatment 2 id1 amount information hr1 terms number events id2 amount information hr2 terms number events fixed choose true treatment effects fixed random, TRUE hr1 used fixed effect rho correlation two endpoints","code":""},{"path":"https://sterniii3.github.io/drugdevelopR/reference/pw.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Probabilty that effect in endpoint one larger than in endpoint two — pw","text":"output function pw() probability endpoint one better result endpoint two","code":""},{"path":"https://sterniii3.github.io/drugdevelopR/reference/pw.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Probabilty that effect in endpoint one larger than in endpoint two — pw","text":"Z=X-Y normally distributed expectation mu_x - mu_y variance sigma_x + sigma_y- 2 rho sdx sdy","code":""},{"path":"https://sterniii3.github.io/drugdevelopR/reference/pw.html","id":"last-edited-by","dir":"Reference","previous_headings":"","what":"Last Edited By","title":"Probabilty that effect in endpoint one larger than in endpoint two — pw","text":"Johannes Cepicka","code":""},{"path":"https://sterniii3.github.io/drugdevelopR/reference/pw.html","id":"last-edit-date","dir":"Reference","previous_headings":"","what":"Last Edit Date","title":"Probabilty that effect in endpoint one larger than in endpoint two — pw","text":"2022-04-23","code":""},{"path":"https://sterniii3.github.io/drugdevelopR/reference/pw.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Probabilty that effect in endpoint one larger than in endpoint two — pw","text":"","code":"res <- pw(n2 = 50, ec = 0.6,                     hr1 = 0.75, hr2 = 0.80, id1 = 300, id2 = 600,                      fixed = FALSE, rho = 0.3)"},{"path":"https://sterniii3.github.io/drugdevelopR/reference/ss_binary.html","id":null,"dir":"Reference","previous_headings":"","what":"Total sample size for phase III trial with l treatments and equal allocation ratio for binary outcomes — ss_binary","title":"Total sample size for phase III trial with l treatments and equal allocation ratio for binary outcomes — ss_binary","text":"Depending results phase II strategy ,.e. whether proceed best promising treatment (l = 1) promising treatments (l = 2), program calculates number participants phase III. l=1: according Schoenfeld guarantee power log rank test detect treatment effect phase II; l=2: according Dunnett guarantee y -pair power (Horn & Vollandt)","code":""},{"path":"https://sterniii3.github.io/drugdevelopR/reference/ss_binary.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Total sample size for phase III trial with l treatments and equal allocation ratio for binary outcomes — ss_binary","text":"","code":"ss_binary(alpha, beta, p0, p11, y, l)"},{"path":"https://sterniii3.github.io/drugdevelopR/reference/ss_binary.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Total sample size for phase III trial with l treatments and equal allocation ratio for binary outcomes — ss_binary","text":"alpha significance level beta 1-beta power calculation sample size phase III p0 assumed true rate control group p11 assumed true rate treatment group y hat_theta_2; estimator phase II l number treatments phase III: l=1: according Schoenfeld guarantee power log rank test detect treatment effect phase II; l=2: according Dunnett guarantee y -pair power (Horn & Vollandt)","code":""},{"path":"https://sterniii3.github.io/drugdevelopR/reference/ss_binary.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Total sample size for phase III trial with l treatments and equal allocation ratio for binary outcomes — ss_binary","text":"function ss_binary() returns total sample size phase III trial l treatments equal allocation ratio","code":""},{"path":"https://sterniii3.github.io/drugdevelopR/reference/ss_binary.html","id":"last-edited-by","dir":"Reference","previous_headings":"","what":"Last Edited By","title":"Total sample size for phase III trial with l treatments and equal allocation ratio for binary outcomes — ss_binary","text":"Johannes Cepicka","code":""},{"path":"https://sterniii3.github.io/drugdevelopR/reference/ss_binary.html","id":"last-edit-date","dir":"Reference","previous_headings":"","what":"Last Edit Date","title":"Total sample size for phase III trial with l treatments and equal allocation ratio for binary outcomes — ss_binary","text":"2022-05-08","code":""},{"path":"https://sterniii3.github.io/drugdevelopR/reference/ss_binary.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Total sample size for phase III trial with l treatments and equal allocation ratio for binary outcomes — ss_binary","text":"","code":"res <- ss_binary(alpha = 0.05, beta = 0.1, p0 = 0.6, p11 = 0.3, y = 0.5, l = 1)"},{"path":"https://sterniii3.github.io/drugdevelopR/reference/ss_normal.html","id":null,"dir":"Reference","previous_headings":"","what":"Total sample size for phase III trial with l treatments and equal allocation ratio for normally distributed outcomes — ss_normal","title":"Total sample size for phase III trial with l treatments and equal allocation ratio for normally distributed outcomes — ss_normal","text":"Depending results phase II strategy ,.e. whether proceed best promising treatment (l = 1) promising treatments (l = 2), program calculates number participants phase III. l=1: according Schoenfeld guarantee power log rank test detect treatment effect phase II; l=2: according Dunnett guarantee y -pair power (Horn & Vollandt)","code":""},{"path":"https://sterniii3.github.io/drugdevelopR/reference/ss_normal.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Total sample size for phase III trial with l treatments and equal allocation ratio for normally distributed outcomes — ss_normal","text":"","code":"ss_normal(alpha, beta, y, l)"},{"path":"https://sterniii3.github.io/drugdevelopR/reference/ss_normal.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Total sample size for phase III trial with l treatments and equal allocation ratio for normally distributed outcomes — ss_normal","text":"alpha significance level beta 1-'beta' power calculation sample size phase III y y_hat_theta_2; estimator phase II l number treatments phase III: l=1: according Schoenfeld guarantee power log rank test detect treatment effect phase II; l=2: according Dunnett guarantee y -pair power (Horn & Vollandt)","code":""},{"path":"https://sterniii3.github.io/drugdevelopR/reference/ss_normal.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Total sample size for phase III trial with l treatments and equal allocation ratio for normally distributed outcomes — ss_normal","text":"function ss_normal() returns total sample size phase III trial l treatments equal allocation ratio","code":""},{"path":"https://sterniii3.github.io/drugdevelopR/reference/ss_normal.html","id":"last-edited-by","dir":"Reference","previous_headings":"","what":"Last Edited By","title":"Total sample size for phase III trial with l treatments and equal allocation ratio for normally distributed outcomes — ss_normal","text":"Johannes Cepicka","code":""},{"path":"https://sterniii3.github.io/drugdevelopR/reference/ss_normal.html","id":"last-edit-date","dir":"Reference","previous_headings":"","what":"Last Edit Date","title":"Total sample size for phase III trial with l treatments and equal allocation ratio for normally distributed outcomes — ss_normal","text":"2022-05-08","code":""},{"path":"https://sterniii3.github.io/drugdevelopR/reference/ss_normal.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Total sample size for phase III trial with l treatments and equal allocation ratio for normally distributed outcomes — ss_normal","text":"","code":"res <- ss_normal(alpha = 0.05, beta = 0.1, y = 0.5, l = 1)"},{"path":"https://sterniii3.github.io/drugdevelopR/reference/ss_tte.html","id":null,"dir":"Reference","previous_headings":"","what":"Total sample size for phase III trial with l treatments and equal allocation ratio for time-to-event outcomes — ss_tte","title":"Total sample size for phase III trial with l treatments and equal allocation ratio for time-to-event outcomes — ss_tte","text":"Depending results phase II strategy ,.e. whether proceed best promising treatment (l = 1) promising treatments (l = 2), program calculates number participants phase III. l=1: according Schoenfeld guarantee power log rank test detect treatment effect phase II; l=2: according Dunnett guarantee y -pair power (Horn & Vollandt)","code":""},{"path":"https://sterniii3.github.io/drugdevelopR/reference/ss_tte.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Total sample size for phase III trial with l treatments and equal allocation ratio for time-to-event outcomes — ss_tte","text":"","code":"ss_tte(alpha, beta, ec, ek, y, l)"},{"path":"https://sterniii3.github.io/drugdevelopR/reference/ss_tte.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Total sample size for phase III trial with l treatments and equal allocation ratio for time-to-event outcomes — ss_tte","text":"alpha significance level beta 1-beta power calculation sample size phase III ec control arm event rate phase II III ek event rate arm k (either arm 1 arm 2) y hat_theta_2; estimator phase II l number treatments phase III: l=1: according Schoenfeld guarantee power log rank test detect treatment effect phase II; l=2: according Dunnett guarantee y -pair power (Horn & Vollandt)","code":""},{"path":"https://sterniii3.github.io/drugdevelopR/reference/ss_tte.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Total sample size for phase III trial with l treatments and equal allocation ratio for time-to-event outcomes — ss_tte","text":"function ss_tte() returns total sample size phase III trial l treatments equal allocation ratio","code":""},{"path":"https://sterniii3.github.io/drugdevelopR/reference/ss_tte.html","id":"last-edited-by","dir":"Reference","previous_headings":"","what":"Last Edited By","title":"Total sample size for phase III trial with l treatments and equal allocation ratio for time-to-event outcomes — ss_tte","text":"Johannes Cepicka","code":""},{"path":"https://sterniii3.github.io/drugdevelopR/reference/ss_tte.html","id":"last-edit-date","dir":"Reference","previous_headings":"","what":"Last Edit Date","title":"Total sample size for phase III trial with l treatments and equal allocation ratio for time-to-event outcomes — ss_tte","text":"2022-05-08","code":""},{"path":"https://sterniii3.github.io/drugdevelopR/reference/ss_tte.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Total sample size for phase III trial with l treatments and equal allocation ratio for time-to-event outcomes — ss_tte","text":"","code":"res <- ss_tte(alpha = 0.05, beta = 0.1, ec = 0.6, ek = 0.8, y = 0.5, l=1)"},{"path":"https://sterniii3.github.io/drugdevelopR/reference/utility23.html","id":null,"dir":"Reference","previous_headings":"","what":"Utility function for multitrial programs deciding between two or three phase III trials in a time-to-event setting — utility23","title":"Utility function for multitrial programs deciding between two or three phase III trials in a time-to-event setting — utility23","text":"utility function calculates expected utility drug development program given gains minus costs depends parameters expected probability successful program. utility step maximized optimal_multitrial() function.","code":""},{"path":"https://sterniii3.github.io/drugdevelopR/reference/utility23.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Utility function for multitrial programs deciding between two or three phase III trials in a time-to-event setting — utility23","text":"","code":"utility23(   d2,   HRgo,   w,   hr1,   hr2,   id1,   id2,   alpha,   beta,   xi2,   xi3,   c2,   c3,   c02,   c03,   b1,   b2,   b3 )"},{"path":"https://sterniii3.github.io/drugdevelopR/reference/utility23.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Utility function for multitrial programs deciding between two or three phase III trials in a time-to-event setting — utility23","text":"d2 total sample size phase II; must even number HRgo threshold value go/-go decision rule w weight mixture prior distribution hr1 first assumed true treatment effect HR scale prior distribution hr2 second assumed true treatment effect HR scale prior distribution id1 amount information hr1 terms number events id2 amount information hr2 terms number events alpha significance level beta 1-beta power calculation sample size phase III xi2 event rate phase II xi3 event rate phase III c2 variable per-patient cost phase II c3 variable per-patient cost phase III c02 fixed cost phase II c03 fixed cost phase III b1 expected gain effect size category \"small\" b2 expected gain effect size category \"medium\" b3 expected gain effect size category \"large\"","code":""},{"path":"https://sterniii3.github.io/drugdevelopR/reference/utility23.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Utility function for multitrial programs deciding between two or three phase III trials in a time-to-event setting — utility23","text":"output function utility23() expected utility program depending whether two three phase III trials performed.","code":""},{"path":"https://sterniii3.github.io/drugdevelopR/reference/utility23.html","id":"last-edited-by","dir":"Reference","previous_headings":"","what":"Last Edited By","title":"Utility function for multitrial programs deciding between two or three phase III trials in a time-to-event setting — utility23","text":"Johannes Cepicka","code":""},{"path":"https://sterniii3.github.io/drugdevelopR/reference/utility23.html","id":"last-edit-date","dir":"Reference","previous_headings":"","what":"Last Edit Date","title":"Utility function for multitrial programs deciding between two or three phase III trials in a time-to-event setting — utility23","text":"2022-04-23","code":""},{"path":"https://sterniii3.github.io/drugdevelopR/reference/utility23.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Utility function for multitrial programs deciding between two or three phase III trials in a time-to-event setting — utility23","text":"","code":"res <- utility23(d2 = 50, HRgo = 0.8,  w = 0.3,                                   hr1 =  0.69, hr2 = 0.81,                                   id1 = 280, id2 = 420,                                   alpha = 0.025, beta = 0.1, xi2 = 0.7, xi3 = 0.7,                                  c2 = 0.75, c3 = 1, c02 = 100, c03 = 150,                                  b1 = 1000, b2 = 2000, b3 = 3000) #> Error in Epgo23(HRgo = HRgo, d2 = d2, w = w, hr1 = hr1, hr2 = hr2, id1 = id1,     id2 = id2, fixed = fixed): unused argument (fixed = fixed)"},{"path":"https://sterniii3.github.io/drugdevelopR/reference/utility23_binary.html","id":null,"dir":"Reference","previous_headings":"","what":"Utility function for multitrial programs deciding between two or three phase III trials for a binary distributed outcome — utility23_binary","title":"Utility function for multitrial programs deciding between two or three phase III trials for a binary distributed outcome — utility23_binary","text":"utility function calculates expected utility drug development program given gains minus costs depends parameters expected probability successful program. utility step maximized optimal_multitrial_binary() function.","code":""},{"path":"https://sterniii3.github.io/drugdevelopR/reference/utility23_binary.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Utility function for multitrial programs deciding between two or three phase III trials for a binary distributed outcome — utility23_binary","text":"","code":"utility23_binary(   n2,   RRgo,   w,   p0,   p11,   p12,   in1,   in2,   alpha,   beta,   c2,   c3,   c02,   c03,   b1,   b2,   b3 )"},{"path":"https://sterniii3.github.io/drugdevelopR/reference/utility23_binary.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Utility function for multitrial programs deciding between two or three phase III trials for a binary distributed outcome — utility23_binary","text":"n2 total sample size phase II; must even number RRgo threshold value go/-go decision rule w weight mixture prior distribution p0 assumed true rate control group p11 assumed true rate treatment group p12 assumed true rate treatment group in1 amount information p11 terms sample size in2 amount information p12 terms sample size alpha significance level beta 1-beta power calculation sample size phase III c2 variable per-patient cost phase II c3 variable per-patient cost phase III c02 fixed cost phase II c03 fixed cost phase III b1 expected gain effect size category \"small\" b2 expected gain effect size category \"medium\" b3 expected gain effect size category \"large\"","code":""},{"path":"https://sterniii3.github.io/drugdevelopR/reference/utility23_binary.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Utility function for multitrial programs deciding between two or three phase III trials for a binary distributed outcome — utility23_binary","text":"output function utility23_binary() expected utility program depending whether two three phase III trials performed.","code":""},{"path":"https://sterniii3.github.io/drugdevelopR/reference/utility23_binary.html","id":"last-edited-by","dir":"Reference","previous_headings":"","what":"Last Edited By","title":"Utility function for multitrial programs deciding between two or three phase III trials for a binary distributed outcome — utility23_binary","text":"Johannes Cepicka","code":""},{"path":"https://sterniii3.github.io/drugdevelopR/reference/utility23_binary.html","id":"last-edit-date","dir":"Reference","previous_headings":"","what":"Last Edit Date","title":"Utility function for multitrial programs deciding between two or three phase III trials for a binary distributed outcome — utility23_binary","text":"2022-04-23","code":""},{"path":"https://sterniii3.github.io/drugdevelopR/reference/utility23_binary.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Utility function for multitrial programs deciding between two or three phase III trials for a binary distributed outcome — utility23_binary","text":"","code":"res <- utility23_binary(n2 = 50, RRgo = 0.8,  w = 0.3,                                   p0 = 0.6, p11 =  0.3, p12 = 0.5,                                   in1 = 300, in2 = 600, alpha = 0.025, beta = 0.1,                                  c2 = 0.75, c3 = 1, c02 = 100, c03 = 150,                                  b1 = 1000, b2 = 2000, b3 = 3000) #> Error in Epgo_binary(RRgo = RRgo, n2 = n2, p0 = p0, w = w, p11 = p11,     p12 = p12, in1 = in1, in2 = in2, fixed = fixed): object 'fixed' not found"},{"path":"https://sterniii3.github.io/drugdevelopR/reference/utility23_normal.html","id":null,"dir":"Reference","previous_headings":"","what":"Utility function for multitrial programs deciding between two or three phase III trials for a normally distributed outcome — utility23_normal","title":"Utility function for multitrial programs deciding between two or three phase III trials for a normally distributed outcome — utility23_normal","text":"utility function calculates expected utility drug development program given gains minus costs depends parameters expected probability successful program. utility step maximized optimal_multitrial_normal() function.","code":""},{"path":"https://sterniii3.github.io/drugdevelopR/reference/utility23_normal.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Utility function for multitrial programs deciding between two or three phase III trials for a normally distributed outcome — utility23_normal","text":"","code":"utility23_normal(   n2,   kappa,   w,   Delta1,   Delta2,   in1,   in2,   a,   b,   alpha,   beta,   c2,   c3,   c02,   c03,   b1,   b2,   b3 )"},{"path":"https://sterniii3.github.io/drugdevelopR/reference/utility23_normal.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Utility function for multitrial programs deciding between two or three phase III trials for a normally distributed outcome — utility23_normal","text":"n2 total sample size phase II; must even number kappa threshold value go/-go decision rule w weight mixture prior distribution Delta1 assumed true treatment effect standardized difference means Delta2 assumed true treatment effect standardized difference means in1 amount information Delta1 terms sample size in2 amount information Delta2 terms sample size lower boundary truncation b upper boundary truncation alpha significance level beta 1-beta power calculation sample size phase III c2 variable per-patient cost phase II c3 variable per-patient cost phase III c02 fixed cost phase II c03 fixed cost phase III b1 expected gain effect size category \"small\" b2 expected gain effect size category \"medium\" b3 expected gain effect size category \"large\"","code":""},{"path":"https://sterniii3.github.io/drugdevelopR/reference/utility23_normal.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Utility function for multitrial programs deciding between two or three phase III trials for a normally distributed outcome — utility23_normal","text":"output function utility23_normal() expected utility program depending whether two three phase III trials performed.","code":""},{"path":"https://sterniii3.github.io/drugdevelopR/reference/utility23_normal.html","id":"last-edited-by","dir":"Reference","previous_headings":"","what":"Last Edited By","title":"Utility function for multitrial programs deciding between two or three phase III trials for a normally distributed outcome — utility23_normal","text":"Johannes Cepicka","code":""},{"path":"https://sterniii3.github.io/drugdevelopR/reference/utility23_normal.html","id":"last-edit-date","dir":"Reference","previous_headings":"","what":"Last Edit Date","title":"Utility function for multitrial programs deciding between two or three phase III trials for a normally distributed outcome — utility23_normal","text":"2022-04-23","code":""},{"path":"https://sterniii3.github.io/drugdevelopR/reference/utility23_normal.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Utility function for multitrial programs deciding between two or three phase III trials for a normally distributed outcome — utility23_normal","text":"","code":"res <- utility23_normal(n2 = 50, kappa = 0.2, w = 0.3,                                  Delta1 = 0.375, Delta2 = 0.625, in1 = 300, in2 = 600,                                   a = 0.25, b = 0.75,                                   c2 = 0.675, c3 = 0.72, c02 = 15, c03 = 20,                                  b1 = 3000, b2 = 8000, b3 = 10000) #> Error in Epgo_normal(kappa = kappa, n2 = n2, w = w, Delta1 = Delta1, Delta2 = Delta2,     in1 = in1, in2 = in2, a = a, b = b, fixed = fixed): object 'fixed' not found"},{"path":"https://sterniii3.github.io/drugdevelopR/reference/utility_bias_binary.html","id":null,"dir":"Reference","previous_headings":"","what":"Utility function for bias adjustment programs with binary distributed outcomes. — utility_bias_binary","title":"Utility function for bias adjustment programs with binary distributed outcomes. — utility_bias_binary","text":"utility function calculates expected utility drug development program given gains minus costs depends parameters expected probability successful program. utility step maximized optimal_bias_binary() function.","code":""},{"path":"https://sterniii3.github.io/drugdevelopR/reference/utility_bias_binary.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Utility function for bias adjustment programs with binary distributed outcomes. — utility_bias_binary","text":"","code":"utility_binary_L(   n2,   RRgo,   Adj,   w,   p0,   p11,   p12,   in1,   in2,   alpha,   beta,   c2,   c3,   c02,   c03,   K,   N,   S,   steps1,   stepm1,   stepl1,   b1,   b2,   b3,   fixed )  utility_binary_L2(   n2,   RRgo,   Adj,   w,   p0,   p11,   p12,   in1,   in2,   alpha,   beta,   c2,   c3,   c02,   c03,   K,   N,   S,   steps1,   stepm1,   stepl1,   b1,   b2,   b3,   fixed )  utility_binary_R(   n2,   RRgo,   Adj,   w,   p0,   p11,   p12,   in1,   in2,   alpha,   beta,   c2,   c3,   c02,   c03,   K,   N,   S,   steps1,   stepm1,   stepl1,   b1,   b2,   b3,   fixed )  utility_binary_R2(   n2,   RRgo,   Adj,   w,   p0,   p11,   p12,   in1,   in2,   alpha,   beta,   c2,   c3,   c02,   c03,   K,   N,   S,   steps1,   stepm1,   stepl1,   b1,   b2,   b3,   fixed )"},{"path":"https://sterniii3.github.io/drugdevelopR/reference/utility_bias_binary.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Utility function for bias adjustment programs with binary distributed outcomes. — utility_bias_binary","text":"n2 total sample size phase II; must even number RRgo threshold value go/-go decision rule Adj adjustment parameter w weight mixture prior distribution p0 assumed true rate control group p11 assumed true rate treatment group p12 assumed true rate treatment group in1 amount information p11 terms sample size in2 amount information p12 terms sample size alpha significance level beta 1-beta power calculation sample size phase III c2 variable per-patient cost phase II c3 variable per-patient cost phase III c02 fixed cost phase II c03 fixed cost phase III K constraint costs program, default: Inf, e.g. constraint N constraint total expected sample size program, default: Inf, e.g. constraint S constraint expected probability successful program, default: -Inf, e.g. constraint steps1 lower boundary effect size category \"small\" RR scale, default: 1 stepm1 lower boundary effect size category \"medium\" RR scale = upper boundary effect size category \"small\" RR scale, default: 0.95 stepl1 lower boundary effect size category \"large\" RR scale = upper boundary effect size category \"medium\" RR scale, default: 0.85 b1 expected gain effect size category \"small\" b2 expected gain effect size category \"medium\" b3 expected gain effect size category \"large\" fixed choose true treatment effects fixed random, TRUE p11 used fixed effect","code":""},{"path":"https://sterniii3.github.io/drugdevelopR/reference/utility_bias_binary.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Utility function for bias adjustment programs with binary distributed outcomes. — utility_bias_binary","text":"output functions utility_binary_L(), utility_binary_L2(), utility_binary_R() utility_binary_R2() expected utility program.","code":""},{"path":"https://sterniii3.github.io/drugdevelopR/reference/utility_bias_binary.html","id":"last-edited-by","dir":"Reference","previous_headings":"","what":"Last Edited By","title":"Utility function for bias adjustment programs with binary distributed outcomes. — utility_bias_binary","text":"Johannes Cepicka","code":""},{"path":"https://sterniii3.github.io/drugdevelopR/reference/utility_bias_binary.html","id":"last-edit-date","dir":"Reference","previous_headings":"","what":"Last Edit Date","title":"Utility function for bias adjustment programs with binary distributed outcomes. — utility_bias_binary","text":"2022-04-23","code":""},{"path":"https://sterniii3.github.io/drugdevelopR/reference/utility_bias_binary.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Utility function for bias adjustment programs with binary distributed outcomes. — utility_bias_binary","text":"","code":"res <- utility_binary_L(n2 = 50, RRgo = 0.8, Adj = 0, w = 0.3,                                   p0 = 0.6, p11 =  0.3, p12 = 0.5,                                   in1 = 300, in2 = 600,                                   alpha = 0.025, beta = 0.1,                                  c2 = 0.75, c3 = 1, c02 = 100, c03 = 150,                                  K = Inf, N = Inf, S = -Inf,                                  steps1 = 1, stepm1 = 0.95, stepl1 = 0.85,                                  b1 = 1000, b2 = 2000, b3 = 3000,                                   fixed = FALSE) #> Error in EPsProg_binary_L(RRgo = RRgo, n2 = n2, Adj = Adj, alpha = alpha,     beta = beta, step1 = steps1, step2 = steps2, p0 = p0, w = w,     p11 = p11, p12 = p12, in1 = in1, in2 = in2, fixed = fixed): object 'steps2' not found          res <- utility_binary_L2(n2 = 50, RRgo = 0.8, Adj = 0, w = 0.3,                                   p0 = 0.6, p11 =  0.3, p12 = 0.5,                                   in1 = 300, in2 = 600,                                   alpha = 0.025, beta = 0.1,                                  c2 = 0.75, c3 = 1, c02 = 100, c03 = 150,                                  K = Inf, N = Inf, S = -Inf,                                  steps1 = 1, stepm1 = 0.95, stepl1 = 0.85,                                  b1 = 1000, b2 = 2000, b3 = 3000,                                   fixed = FALSE) #> Error in EPsProg_binary_L2(RRgo = RRgo, n2 = n2, Adj = Adj, alpha = alpha,     beta = beta, step1 = steps1, step2 = steps2, p0 = p0, w = w,     p11 = p11, p12 = p12, in1 = in1, in2 = in2, fixed = fixed): object 'steps2' not found          res <- utility_binary_R(n2 = 50, RRgo = 0.8, Adj = 1, w = 0.3,                                   p0 = 0.6, p11 =  0.3, p12 = 0.5,                                   in1 = 300, in2 = 600,                                   alpha = 0.025, beta = 0.1,                                  c2 = 0.75, c3 = 1, c02 = 100, c03 = 150,                                  K = Inf, N = Inf, S = -Inf,                                  steps1 = 1, stepm1 = 0.95, stepl1 = 0.85,                                  b1 = 1000, b2 = 2000, b3 = 3000,                                   fixed = FALSE) #> Error in EPsProg_binary_R(RRgo = RRgo, n2 = n2, Adj = Adj, alpha = alpha,     beta = beta, step1 = steps1, step2 = steps2, p0 = p0, w = w,     p11 = p11, p12 = p12, in1 = in1, in2 = in2, fixed = fixed): object 'steps2' not found          res <- utility_binary_R2(n2 = 50, RRgo = 0.8, Adj = 1, w = 0.3,                                   p0 = 0.6, p11 =  0.3, p12 = 0.5,                                   in1 = 300, in2 = 600,                                   alpha = 0.025, beta = 0.1,                                  c2 = 0.75, c3 = 1, c02 = 100, c03 = 150,                                  K = Inf, N = Inf, S = -Inf,                                  steps1 = 1, stepm1 = 0.95, stepl1 = 0.85,                                  b1 = 1000, b2 = 2000, b3 = 3000,                                   fixed = FALSE) #> Error in EPsProg_binary_R2(RRgo = RRgo, n2 = n2, Adj = Adj, alpha = alpha,     beta = beta, step1 = steps1, step2 = steps2, p0 = p0, w = w,     p11 = p11, p12 = p12, in1 = in1, in2 = in2, fixed = fixed): object 'steps2' not found"},{"path":"https://sterniii3.github.io/drugdevelopR/reference/utility_bias_normal.html","id":null,"dir":"Reference","previous_headings":"","what":"Utility function for bias adjustment programs with normally distributed outcomes. — utility_bias_normal","title":"Utility function for bias adjustment programs with normally distributed outcomes. — utility_bias_normal","text":"utility function calculates expected utility drug development program given gains minus costs depends parameters expected probability successful program. utility step maximized optimal_bias_normal() function.","code":""},{"path":"https://sterniii3.github.io/drugdevelopR/reference/utility_bias_normal.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Utility function for bias adjustment programs with normally distributed outcomes. — utility_bias_normal","text":"","code":"utility_normal_L(   n2,   kappa,   Adj,   w,   Delta1,   Delta2,   in1,   in2,   a,   b,   alpha,   beta,   c2,   c3,   c02,   c03,   K,   N,   S,   steps1,   stepm1,   stepl1,   b1,   b2,   b3,   fixed )  utility_normal_L2(   n2,   kappa,   Adj,   w,   Delta1,   Delta2,   in1,   in2,   a,   b,   alpha,   beta,   c2,   c3,   c02,   c03,   K,   N,   S,   steps1,   stepm1,   stepl1,   b1,   b2,   b3,   fixed )  utility_normal_R(   n2,   kappa,   Adj,   w,   Delta1,   Delta2,   in1,   in2,   a,   b,   alpha,   beta,   c2,   c3,   c02,   c03,   K,   N,   S,   steps1,   stepm1,   stepl1,   b1,   b2,   b3,   fixed )  utility_normal_R2(   n2,   kappa,   Adj,   w,   Delta1,   Delta2,   in1,   in2,   a,   b,   alpha,   beta,   c2,   c3,   c02,   c03,   K,   N,   S,   steps1,   stepm1,   stepl1,   b1,   b2,   b3,   fixed )"},{"path":"https://sterniii3.github.io/drugdevelopR/reference/utility_bias_normal.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Utility function for bias adjustment programs with normally distributed outcomes. — utility_bias_normal","text":"n2 total sample size phase II; must even number kappa threshold value go/-go decision rule Adj adjustment parameter w weight mixture prior distribution Delta1 assumed true treatment effect standardized difference means Delta2 assumed true treatment effect standardized difference means in1 amount information Delta1 terms sample size in2 amount information Delta2 terms sample size lower boundary truncation b upper boundary truncation alpha significance level beta 1-beta power calculation sample size phase III c2 variable per-patient cost phase II c3 variable per-patient cost phase III c02 fixed cost phase II c03 fixed cost phase III K constraint costs program, default: Inf, e.g. constraint N constraint total expected sample size program, default: Inf, e.g. constraint S constraint expected probability successful program, default: -Inf, e.g. constraint steps1 lower boundary effect size category \"small\", default: 0 stepm1 lower boundary effect size category \"medium\" = upper boundary effect size category \"small\" default: 0.5 stepl1 lower boundary effect size category \"large\" = upper boundary effect size category \"medium\", default: 0.8 b1 expected gain effect size category \"small\" b2 expected gain effect size category \"medium\" b3 expected gain effect size category \"large\" fixed choose true treatment effects fixed random, TRUE Delta1 used fixed effect","code":""},{"path":"https://sterniii3.github.io/drugdevelopR/reference/utility_bias_normal.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Utility function for bias adjustment programs with normally distributed outcomes. — utility_bias_normal","text":"output functions utility_normal_L(), utility_normal_L2(), utility_normal_R() utility_normal_R2() expected utility program.","code":""},{"path":"https://sterniii3.github.io/drugdevelopR/reference/utility_bias_normal.html","id":"last-edited-by","dir":"Reference","previous_headings":"","what":"Last Edited By","title":"Utility function for bias adjustment programs with normally distributed outcomes. — utility_bias_normal","text":"Johannes Cepicka","code":""},{"path":"https://sterniii3.github.io/drugdevelopR/reference/utility_bias_normal.html","id":"last-edit-date","dir":"Reference","previous_headings":"","what":"Last Edit Date","title":"Utility function for bias adjustment programs with normally distributed outcomes. — utility_bias_normal","text":"2022-04-23","code":""},{"path":"https://sterniii3.github.io/drugdevelopR/reference/utility_bias_normal.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Utility function for bias adjustment programs with normally distributed outcomes. — utility_bias_normal","text":"","code":"res <- utility_normal_L(kappa = 0.1, n2 = 50, Adj = 0,                                   alpha = 0.025, beta = 0.1, w = 0.3,                                  Delta1 = 0.375, Delta2 = 0.625,                                   in1 = 300, in2 = 600,                                   a = 0.25, b = 0.75,                                   K = Inf, N = Inf, S = -Inf,                                   steps1 = 0, stepm1 = 0.5, stepl1 = 0.8,                                  b1 = 3000, b2 = 8000, b3 = 10000,                                   fixed = FALSE) #> Error in utility_normal_L(kappa = 0.1, n2 = 50, Adj = 0, alpha = 0.025,     beta = 0.1, w = 0.3, Delta1 = 0.375, Delta2 = 0.625, in1 = 300,     in2 = 600, a = 0.25, b = 0.75, K = Inf, N = Inf, S = -Inf,     steps1 = 0, stepm1 = 0.5, stepl1 = 0.8, b1 = 3000, b2 = 8000,     b3 = 10000, fixed = FALSE): argument \"c02\" is missing, with no default           res <- utility_normal_L2(kappa = 0.1, n2 = 50, Adj = 0,                                   alpha = 0.025, beta = 0.1, w = 0.3,                                  Delta1 = 0.375, Delta2 = 0.625,                                   in1 = 300, in2 = 600,                                   a = 0.25, b = 0.75,                                   K = Inf, N = Inf, S = -Inf,                                   steps1 = 0, stepm1 = 0.5, stepl1 = 0.8,                                  b1 = 3000, b2 = 8000, b3 = 10000,                                   fixed = FALSE) #> Error in return(integrate(function(x) {    sapply(x, function(x) {        integrate(function(y) {            ((4 * (qnorm(1 - alpha) + qnorm(1 - beta))^2)/(y -                 qnorm(1 - Adj) * sqrt(4/n2))^2) * dnorm(y, mean = x,                 sd = sqrt(4/n2)) * prior_normal(x, w, Delta1,                 Delta2, in1, in2, a, b)        }, kappa + qnorm(1 - Adj) * sqrt(4/n2), Inf)$value    })}, -Inf, Inf), silent = TRUE): multi-argument returns are not permitted           res <- utility_normal_R(kappa = 0.1, n2 = 50, Adj = 1,                                   alpha = 0.025, beta = 0.1, w = 0.3,                                  Delta1 = 0.375, Delta2 = 0.625,                                   in1 = 300, in2 = 600,                                   a = 0.25, b = 0.75,                                   K = Inf, N = Inf, S = -Inf,                                   steps1 = 0, stepm1 = 0.5, stepl1 = 0.8,                                  b1 = 3000, b2 = 8000, b3 = 10000,                                   fixed = FALSE) #> Error in utility_normal_R(kappa = 0.1, n2 = 50, Adj = 1, alpha = 0.025,     beta = 0.1, w = 0.3, Delta1 = 0.375, Delta2 = 0.625, in1 = 300,     in2 = 600, a = 0.25, b = 0.75, K = Inf, N = Inf, S = -Inf,     steps1 = 0, stepm1 = 0.5, stepl1 = 0.8, b1 = 3000, b2 = 8000,     b3 = 10000, fixed = FALSE): argument \"c02\" is missing, with no default           res <- utility_normal_R2(kappa = 0.1, n2 = 50, Adj = 1,                                   alpha = 0.025, beta = 0.1, w = 0.3,                                  Delta1 = 0.375, Delta2 = 0.625,                                   in1 = 300, in2 = 600,                                   a = 0.25, b = 0.75,                                   K = Inf, N = Inf, S = -Inf,                                   steps1 = 0, stepm1 = 0.5, stepl1 = 0.8,                                  b1 = 3000, b2 = 8000, b3 = 10000,                                   fixed = FALSE) #> Error in utility_normal_R2(kappa = 0.1, n2 = 50, Adj = 1, alpha = 0.025,     beta = 0.1, w = 0.3, Delta1 = 0.375, Delta2 = 0.625, in1 = 300,     in2 = 600, a = 0.25, b = 0.75, K = Inf, N = Inf, S = -Inf,     steps1 = 0, stepm1 = 0.5, stepl1 = 0.8, b1 = 3000, b2 = 8000,     b3 = 10000, fixed = FALSE): argument \"c02\" is missing, with no default"},{"path":"https://sterniii3.github.io/drugdevelopR/reference/utility_multiarm.html","id":null,"dir":"Reference","previous_headings":"","what":"Utility function for multiarm programs with time-to-event outcomes — utility_multiarm","title":"Utility function for multiarm programs with time-to-event outcomes — utility_multiarm","text":"utility function calculates expected utility drug development program given gains minus costs depends parameters sample size expected probability successful program. utility step maximized optimal_multiarm() function.","code":""},{"path":"https://sterniii3.github.io/drugdevelopR/reference/utility_multiarm.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Utility function for multiarm programs with time-to-event outcomes — utility_multiarm","text":"","code":"utility_multiarm(   n2,   HRgo,   alpha,   beta,   hr1,   hr2,   strategy,   ec,   c2,   c02,   c3,   c03,   K,   N,   S,   steps1,   stepm1,   stepl1,   b1,   b2,   b3 )"},{"path":"https://sterniii3.github.io/drugdevelopR/reference/utility_multiarm.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Utility function for multiarm programs with time-to-event outcomes — utility_multiarm","text":"n2 total sample size phase II; must divisible three HRgo threshold value go/-go decision rule alpha significance level beta 1-beta power calculation sample size phase III hr1 assumed true treatment effect HR scale treatment 1 hr2 assumed true treatment effect HR scale treatment 2 strategy choose Strategy: 1 (\"best promising\"), 2 (\"promising\") 3 () ec control arm event rate phase II III c2 variable per-patient cost phase II c02 fixed cost phase II c3 variable per-patient cost phase III c03 fixed cost phase III K constraint costs program, default: Inf, e.g. constraint N constraint total expected sample size program, default: Inf, e.g. constraint S constraint expected probability successful program, default: -Inf, e.g. constraint steps1 lower boundary effect size category \"small\" HR scale, default: 1 stepm1 lower boundary effect size category \"medium\" HR scale = upper boundary effect size category \"small\" RR scale, default: 0.95 stepl1 lower boundary effect size category \"large\" HR scale = upper boundary effect size category \"medium\" RR scale, default: 0.85 b1 expected gain effect size category \"small\" b2 expected gain effect size category \"medium\" b3 expected gain effect size category \"large\"","code":""},{"path":"https://sterniii3.github.io/drugdevelopR/reference/utility_multiarm.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Utility function for multiarm programs with time-to-event outcomes — utility_multiarm","text":"output function utility_multiarm() expected utility program","code":""},{"path":"https://sterniii3.github.io/drugdevelopR/reference/utility_multiarm.html","id":"last-edited-by","dir":"Reference","previous_headings":"","what":"Last Edited By","title":"Utility function for multiarm programs with time-to-event outcomes — utility_multiarm","text":"Johannes Cepicka","code":""},{"path":"https://sterniii3.github.io/drugdevelopR/reference/utility_multiarm.html","id":"last-edit-date","dir":"Reference","previous_headings":"","what":"Last Edit Date","title":"Utility function for multiarm programs with time-to-event outcomes — utility_multiarm","text":"2022-05-08","code":""},{"path":"https://sterniii3.github.io/drugdevelopR/reference/utility_multiarm.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Utility function for multiarm programs with time-to-event outcomes — utility_multiarm","text":"","code":"res <- utility_multiarm(n2 = 50, HRgo = 0.8, alpha = 0.05, beta = 0.1,                             hr1 = 0.7, hr2 = 0.8, strategy = 3, ec = 0.6,                             c2 = 0.75, c3 = 1, c02 = 100, c03 = 150,                             K = Inf, N = Inf, S = -Inf,                               steps1 = 1, stepm1 = 0.95,  stepl1 = 0.85,                             b1 = 1000, b2 = 2000, b3 = 3000)"},{"path":"https://sterniii3.github.io/drugdevelopR/reference/utility_multiarm_binary.html","id":null,"dir":"Reference","previous_headings":"","what":"Utility function for multiarm programs with binary distributed outcomes — utility_multiarm_binary","title":"Utility function for multiarm programs with binary distributed outcomes — utility_multiarm_binary","text":"utility function calculates expected utility drug development program given gains minus costs depends parameters sample size expected probability successful program. utility step maximized optimal_multiarm_binary() function.","code":""},{"path":"https://sterniii3.github.io/drugdevelopR/reference/utility_multiarm_binary.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Utility function for multiarm programs with binary distributed outcomes — utility_multiarm_binary","text":"","code":"utility_multiarm_binary(   n2,   RRgo,   alpha,   beta,   p0 = p0,   p11 = p11,   p12 = p12,   strategy,   c2,   c02,   c3,   c03,   K,   N,   S,   steps1,   stepm1,   stepl1,   b1,   b2,   b3 )"},{"path":"https://sterniii3.github.io/drugdevelopR/reference/utility_multiarm_binary.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Utility function for multiarm programs with binary distributed outcomes — utility_multiarm_binary","text":"n2 total sample size phase II; must even number RRgo threshold value go/-go decision rule alpha significance level beta 1-beta power calculation sample size phase III p0 assumed true rate control group p11 assumed true rate treatment group p12 assumed true rate treatment group strategy choose Strategy: 1 (\"best promising\"), 2 (\"promising\") 3 () c2 variable per-patient cost phase II c02 fixed cost phase II c3 variable per-patient cost phase III c03 fixed cost phase III K constraint costs program, default: Inf, e.g. constraint N constraint total expected sample size program, default: Inf, e.g. constraint S constraint expected probability successful program, default: -Inf, e.g. constraint steps1 lower boundary effect size category \"small\" RR scale, default: 1 stepm1 lower boundary effect size category \"medium\" RR scale = upper boundary effect size category \"small\" RR scale, default: 0.95 stepl1 lower boundary effect size category \"large\" RR scale = upper boundary effect size category \"medium\" RR scale, default: 0.85 b1 expected gain effect size category \"small\" b2 expected gain effect size category \"medium\" b3 expected gain effect size category \"large\"","code":""},{"path":"https://sterniii3.github.io/drugdevelopR/reference/utility_multiarm_binary.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Utility function for multiarm programs with binary distributed outcomes — utility_multiarm_binary","text":"output function utility_multiarm_binary() expected utility program","code":""},{"path":"https://sterniii3.github.io/drugdevelopR/reference/utility_multiarm_binary.html","id":"last-edited-by","dir":"Reference","previous_headings":"","what":"Last Edited By","title":"Utility function for multiarm programs with binary distributed outcomes — utility_multiarm_binary","text":"Johannes Cepicka","code":""},{"path":"https://sterniii3.github.io/drugdevelopR/reference/utility_multiarm_binary.html","id":"last-edit-date","dir":"Reference","previous_headings":"","what":"Last Edit Date","title":"Utility function for multiarm programs with binary distributed outcomes — utility_multiarm_binary","text":"2022-05-08","code":""},{"path":"https://sterniii3.github.io/drugdevelopR/reference/utility_multiarm_binary.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Utility function for multiarm programs with binary distributed outcomes — utility_multiarm_binary","text":"","code":"res <- utility_multiarm_binary(n2 = 50, RRgo = 0.8, alpha = 0.05, beta = 0.1,                             p0 = 0.6, p11 =  0.3, p12 = 0.5, strategy = 3,                             c2 = 0.75, c3 = 1, c02 = 100, c03 = 150,                             K = Inf, N = Inf, S = -Inf,                               steps1 = 1, stepm1 = 0.95,   stepl1 = 0.85,                             b1 = 1000, b2 = 2000, b3 = 3000)"},{"path":"https://sterniii3.github.io/drugdevelopR/reference/utility_multiarm_normal.html","id":null,"dir":"Reference","previous_headings":"","what":"Utility function for multiarm programs with normally distributed outcomes — utility_multiarm_normal","title":"Utility function for multiarm programs with normally distributed outcomes — utility_multiarm_normal","text":"utility function calculates expected utility drug development program given gains minus costs depends parameters sample size expected probability successful program. utility step maximized optimal_multiarm_normal() function.","code":""},{"path":"https://sterniii3.github.io/drugdevelopR/reference/utility_multiarm_normal.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Utility function for multiarm programs with normally distributed outcomes — utility_multiarm_normal","text":"","code":"utility_multiarm_normal(   n2,   kappa,   alpha,   beta,   Delta1,   Delta2,   strategy,   c2,   c02,   c3,   c03,   K,   N,   S,   steps1,   stepm1,   stepl1,   b1,   b2,   b3 )"},{"path":"https://sterniii3.github.io/drugdevelopR/reference/utility_multiarm_normal.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Utility function for multiarm programs with normally distributed outcomes — utility_multiarm_normal","text":"n2 total sample size phase II; must even number kappa threshold value go/-go decision rule alpha significance level beta 1-beta power calculation sample size phase III Delta1 assumed true treatment effect standardized difference means Delta2 assumed true treatment effect standardized difference means strategy choose Strategy: 1 (\"best promising\"), 2 (\"promising\") 3 () c2 variable per-patient cost phase II c02 fixed cost phase II c3 variable per-patient cost phase III c03 fixed cost phase III K constraint costs program, default: Inf, e.g. constraint N constraint total expected sample size program, default: Inf, e.g. constraint S constraint expected probability successful program, default: -Inf, e.g. constraint steps1 lower boundary effect size category \"small\", default: 0 stepm1 lower boundary effect size category \"medium\" = upper boundary effect size category \"small\" default: 0.5 stepl1 lower boundary effect size category \"large\" = upper boundary effect size category \"medium\", default: 0.8 b1 expected gain effect size category \"small\" b2 expected gain effect size category \"medium\" b3 expected gain effect size category \"large\"","code":""},{"path":"https://sterniii3.github.io/drugdevelopR/reference/utility_multiarm_normal.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Utility function for multiarm programs with normally distributed outcomes — utility_multiarm_normal","text":"output function utility_multiarm_normal() expected utility program.","code":""},{"path":"https://sterniii3.github.io/drugdevelopR/reference/utility_multiarm_normal.html","id":"last-edited-by","dir":"Reference","previous_headings":"","what":"Last Edited By","title":"Utility function for multiarm programs with normally distributed outcomes — utility_multiarm_normal","text":"Johannes Cepicka","code":""},{"path":"https://sterniii3.github.io/drugdevelopR/reference/utility_multiarm_normal.html","id":"last-edit-date","dir":"Reference","previous_headings":"","what":"Last Edit Date","title":"Utility function for multiarm programs with normally distributed outcomes — utility_multiarm_normal","text":"2022-05-08","code":""},{"path":"https://sterniii3.github.io/drugdevelopR/reference/utility_multiarm_normal.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Utility function for multiarm programs with normally distributed outcomes — utility_multiarm_normal","text":"","code":"res <- utility_multiarm_normal(n2 = 50, kappa = 0.8, alpha = 0.05, beta = 0.1,                             Delta1 = 0.375, Delta2 = 0.625, strategy = 3,                             c2 = 0.75, c3 = 1, c02 = 100, c03 = 150,                             K = Inf, N = Inf, S = -Inf,                               steps1 = 0, stepm1 = 0.5,   stepl1 = 0.8,                             b1 = 1000, b2 = 2000, b3 = 3000)"},{"path":"https://sterniii3.github.io/drugdevelopR/reference/utility_multiple_normal.html","id":null,"dir":"Reference","previous_headings":"","what":"Utility function for multiple endpoints with normally distributed outcomes. — utility_multiple_normal","title":"Utility function for multiple endpoints with normally distributed outcomes. — utility_multiple_normal","text":"utility function calculates expected utility drug development program given gains minus costs depends parameters expected probability successful program. utility step maximized optimal_multiple_normal() function.","code":""},{"path":"https://sterniii3.github.io/drugdevelopR/reference/utility_multiple_normal.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Utility function for multiple endpoints with normally distributed outcomes. — utility_multiple_normal","text":"","code":"utility_multiple_normal(   kappa,   n2,   alpha,   beta,   Delta1,   Delta2,   in1,   in2,   sigma1,   sigma2,   c2,   c02,   c3,   c03,   K,   N,   S,   steps1,   stepm1,   stepl1,   b1,   b2,   b3,   fixed,   rho,   relaxed )"},{"path":"https://sterniii3.github.io/drugdevelopR/reference/utility_multiple_normal.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Utility function for multiple endpoints with normally distributed outcomes. — utility_multiple_normal","text":"kappa threshold value go/-go decision rule; vector endpoints n2 total sample size phase II; must even number alpha significance level beta 1-beta power calculation sample size phase III Delta1 assumed true treatment effect standardized difference means Delta2 assumed true treatment effect standardized difference means in1 amount information Delta1 terms sample size in2 amount information Delta2 terms sample size sigma1 standard deviation first endpoint sigma2 standard deviation second endpoint c2 variable per-patient cost phase II c02 fixed cost phase II c3 variable per-patient cost phase III c03 fixed cost phase III K constraint costs program, default: Inf, e.g. constraint N constraint total expected sample size program, default: Inf, e.g. constraint S constraint expected probability successful program, default: -Inf, e.g. constraint steps1 lower boundary effect size category \"small\" HR scale, default: 1 stepm1 lower boundary effect size category \"medium\" HR scale = upper boundary effect size category \"small\" HR scale, default: 0.95 stepl1 lower boundary effect size category \"large\" HR scale = upper boundary effect size category \"medium\" HR scale, default: 0.85 b1 expected gain effect size category \"small\" b2 expected gain effect size category \"medium\" b3 expected gain effect size category \"large\" fixed choose true treatment effects fixed random, TRUE Delta1 used fixed effect rho correlation two endpoints relaxed relaxed strict decision rule","code":""},{"path":"https://sterniii3.github.io/drugdevelopR/reference/utility_multiple_normal.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Utility function for multiple endpoints with normally distributed outcomes. — utility_multiple_normal","text":"output function utility_multiple_normal() expected utility program.","code":""},{"path":"https://sterniii3.github.io/drugdevelopR/reference/utility_multiple_normal.html","id":"last-edited-by","dir":"Reference","previous_headings":"","what":"Last Edited By","title":"Utility function for multiple endpoints with normally distributed outcomes. — utility_multiple_normal","text":"Johannes Cepicka","code":""},{"path":"https://sterniii3.github.io/drugdevelopR/reference/utility_multiple_normal.html","id":"last-edit-date","dir":"Reference","previous_headings":"","what":"Last Edit Date","title":"Utility function for multiple endpoints with normally distributed outcomes. — utility_multiple_normal","text":"2022-04-23","code":""},{"path":"https://sterniii3.github.io/drugdevelopR/reference/utility_multiple_normal.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Utility function for multiple endpoints with normally distributed outcomes. — utility_multiple_normal","text":"","code":"res <- utility_multiple_normal(kappa = 0.1, n2 = 50,                                 alpha = 0.025, beta = 0.1,                                Delta1 = 0.375, Delta2 = 0.625,                                 in1 = 300, in2 = 600, sigma1 = 8, sigma2 = 4,                                c2 = 0.75, c3 = 1, c02 = 100, c03 = 150,                                K = Inf, N = Inf, S = -Inf,                                steps1 = 0, stepm1 = 0.5, stepl1 = 0.8,                                b1 = 1000, b2 = 2000, b3 = 3000,                                 fixed = TRUE, rho = 0.3, relaxed = \"TRUE\")"},{"path":"https://sterniii3.github.io/drugdevelopR/reference/utility_multiple_tte.html","id":null,"dir":"Reference","previous_headings":"","what":"Utility function for multiple endpoints in a time-to-event-setting — utility_multiple_tte","title":"Utility function for multiple endpoints in a time-to-event-setting — utility_multiple_tte","text":"utility function calculates expected utility drug development program given gains minus costs depends parameters expected probability successful program. utility step maximized optimal_multiple_tte() function. Note, calculating utility program, two different benefit triples necessary: one triple case important endpoint overall survival (OS) shows significant positive treatment effect one triple endpoint progression-free survival (PFS) shows significant positive treatment effect","code":""},{"path":"https://sterniii3.github.io/drugdevelopR/reference/utility_multiple_tte.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Utility function for multiple endpoints in a time-to-event-setting — utility_multiple_tte","text":"","code":"utility_multiple_tte(   n2,   HRgo,   alpha,   beta,   hr1,   hr2,   id1,   id2,   ec,   c2,   c02,   c3,   c03,   K,   N,   S,   steps1,   stepm1,   stepl1,   b11,   b21,   b31,   b12,   b22,   b32,   fixed,   rho )"},{"path":"https://sterniii3.github.io/drugdevelopR/reference/utility_multiple_tte.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Utility function for multiple endpoints in a time-to-event-setting — utility_multiple_tte","text":"n2 total sample size phase II; must even number HRgo threshold value go/-go decision rule; alpha significance level beta 1-beta power calculation sample size phase III hr1 assumed true treatment effect HR scale treatment 1 hr2 assumed true treatment effect HR scale treatment 2 id1 amount information hr1 terms sample size id2 amount information hr2 terms sample size ec control arm event rate phase II III c2 variable per-patient cost phase II c02 fixed cost phase II c3 variable per-patient cost phase III c03 fixed cost phase III K constraint costs program, default: Inf, e.g. constraint N constraint total expected sample size program, default: Inf, e.g. constraint S constraint expected probability successful program, default: -Inf, e.g. constraint steps1 lower boundary effect size category \"small\" HR scale, default: 1 stepm1 lower boundary effect size category \"medium\" HR scale = upper boundary effect size category \"small\" HR scale, default: 0.95 stepl1 lower boundary effect size category \"large\" HR scale = upper boundary effect size category \"medium\" HR scale, default: 0.85 b11 expected gain effect size category \"small\" endpoint OS significant b21 expected gain effect size category \"medium\"endpoint OS significant b31 expected gain effect size category \"large\" endpoint OS significant b12 expected gain effect size category \"small\" endpoint OS significant b22 expected gain effect size category \"medium\"endpoint OS significant b32 expected gain effect size category \"large\" endpoint OS significant fixed choose true treatment effects fixed random, TRUE hr1 used fixed effect rho correlation two endpoints","code":""},{"path":"https://sterniii3.github.io/drugdevelopR/reference/utility_multiple_tte.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Utility function for multiple endpoints in a time-to-event-setting — utility_multiple_tte","text":"output function utility_multiple_tte() expected utility program.","code":""},{"path":"https://sterniii3.github.io/drugdevelopR/reference/utility_multiple_tte.html","id":"last-edited-by","dir":"Reference","previous_headings":"","what":"Last Edited By","title":"Utility function for multiple endpoints in a time-to-event-setting — utility_multiple_tte","text":"Johannes Cepicka","code":""},{"path":"https://sterniii3.github.io/drugdevelopR/reference/utility_multiple_tte.html","id":"last-edit-date","dir":"Reference","previous_headings":"","what":"Last Edit Date","title":"Utility function for multiple endpoints in a time-to-event-setting — utility_multiple_tte","text":"2022-04-23","code":""},{"path":"https://sterniii3.github.io/drugdevelopR/reference/utility_multiple_tte.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Utility function for multiple endpoints in a time-to-event-setting — utility_multiple_tte","text":"","code":"res <- utility_multiple_tte(n2 = 50, HRgo = 0.8, alpha = 0.025, beta = 0.1,                                hr1 = 0.75, hr2 = 0.80,                                id1 = 300, id2 = 600, ec = 0.6,                                c2 = 0.75, c3 = 1, c02 = 100, c03 = 150,                                               K = Inf, N = Inf, S = -Inf,                                 steps1 = 1, stepm1 = 0.95, stepl1 = 0.85,                                b11 = 1000, b21 = 2000, b31 = 3000,                                b12 = 1000, b22 = 1500, b32 = 2000,                                 fixed = FALSE, rho = 0.3) #> Error in is.finite(lower): default method not implemented for type 'closure'"},{"path":"https://sterniii3.github.io/drugdevelopR/reference/utility_multitrial.html","id":null,"dir":"Reference","previous_headings":"","what":"Utility function for multitrial programs in a time-to-event setting — utility_multitrial","title":"Utility function for multitrial programs in a time-to-event setting — utility_multitrial","text":"utility function calculates expected utility drug development program given gains minus costs depends parameters expected probability successful program. utility step maximized optimal_multitrial() function.","code":""},{"path":"https://sterniii3.github.io/drugdevelopR/reference/utility_multitrial.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Utility function for multitrial programs in a time-to-event setting — utility_multitrial","text":"","code":"utility2(   d2,   HRgo,   w,   hr1,   hr2,   id1,   id2,   alpha,   beta,   xi2,   xi3,   c2,   c3,   c02,   c03,   K,   N,   S,   b1,   b2,   b3,   case,   fixed )  utility3(   d2,   HRgo,   w,   hr1,   hr2,   id1,   id2,   alpha,   beta,   xi2,   xi3,   c2,   c3,   c02,   c03,   K,   N,   S,   b1,   b2,   b3,   case,   fixed )  utility4(   d2,   HRgo,   w,   hr1,   hr2,   id1,   id2,   alpha,   beta,   xi2,   xi3,   c2,   c3,   c02,   c03,   K,   N,   S,   b1,   b2,   b3,   case,   fixed )"},{"path":"https://sterniii3.github.io/drugdevelopR/reference/utility_multitrial.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Utility function for multitrial programs in a time-to-event setting — utility_multitrial","text":"d2 total number events phase II HRgo threshold value go/-go decision rule w weight mixture prior distribution hr1 first assumed true treatment effect HR scale prior distribution hr2 second assumed true treatment effect HR scale prior distribution id1 amount information hr1 terms number events id2 amount information hr2 terms number events alpha significance level beta 1-beta power calculation sample size phase III xi2 event rate phase II xi3 event rate phase III c2 variable per-patient cost phase II c3 variable per-patient cost phase III c02 fixed cost phase II c03 fixed cost phase III K constraint costs program, default: Inf, e.g. constraint N constraint total expected sample size program, default: Inf, e.g. constraint S constraint expected probability successful program, default: -Inf, e.g. constraint b1 expected gain effect size category \"small\" b2 expected gain effect size category \"medium\" b3 expected gain effect size category \"large\" case choose case: \"least 1, 2 3 significant trials needed approval\" fixed choose true treatment effects fixed random","code":""},{"path":"https://sterniii3.github.io/drugdevelopR/reference/utility_multitrial.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Utility function for multitrial programs in a time-to-event setting — utility_multitrial","text":"output functions utility2(), utility3() utility4() expected utility program 2, 3 4 phase III trials performed.","code":""},{"path":"https://sterniii3.github.io/drugdevelopR/reference/utility_multitrial.html","id":"last-edited-by","dir":"Reference","previous_headings":"","what":"Last Edited By","title":"Utility function for multitrial programs in a time-to-event setting — utility_multitrial","text":"Johannes Cepicka","code":""},{"path":"https://sterniii3.github.io/drugdevelopR/reference/utility_multitrial.html","id":"last-edit-date","dir":"Reference","previous_headings":"","what":"Last Edit Date","title":"Utility function for multitrial programs in a time-to-event setting — utility_multitrial","text":"2022-04-23","code":""},{"path":"https://sterniii3.github.io/drugdevelopR/reference/utility_multitrial.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Utility function for multitrial programs in a time-to-event setting — utility_multitrial","text":"","code":"res <- utility2(d2 = 50, HRgo = 0.8,  w = 0.3,                                   hr1 =  0.69, hr2 = 0.81,                                   id1 = 210, id2 = 420,                                   alpha = 0.025, beta = 0.1, xi2 = 0.7, xi3 = 0.7,                                  c2 = 0.75, c3 = 1, c02 = 100, c03 = 150,                                  K = Inf, N = Inf, S = -Inf,                                  b1 = 1000, b2 = 2000, b3 = 3000,                                   case = 2, fixed = FALSE)           res <- utility3(d2 = 50, HRgo = 0.8,  w = 0.3,                                   hr1 =  0.69, hr2 = 0.81,                                   id1 = 210, id2 = 420,                                   alpha = 0.025, beta = 0.1, xi2 = 0.7, xi3 = 0.7,                                  c2 = 0.75, c3 = 1, c02 = 100, c03 = 150,                                  K = Inf, N = Inf, S = -Inf,                                  b1 = 1000, b2 = 2000, b3 = 3000,                                   case = 2, fixed = FALSE) #> Error in integrate(function(y) {    sapply(y, function(y) {        (3 * pmvnorm(lower = c(qnorm(1 - alpha), qnorm(1 - alpha),             0), upper = c(qnorm(1 - alpha) - log(0.85)/sqrt(y^2/c),             qnorm(1 - alpha) - log(0.95)/sqrt(y^2/c), qnorm(1 -                 alpha) - log(0.95)/sqrt(y^2/c)), mean = c(x/sqrt(y^2/c),             x/sqrt(y^2/c), x/sqrt(y^2/c)), sigma = SIGMA) - 2 *             pmvnorm(lower = c(qnorm(1 - alpha), qnorm(1 - alpha),                 qnorm(1 - alpha)), upper = c(qnorm(1 - alpha) -                 log(0.95)/sqrt(y^2/c), qnorm(1 - alpha) - log(0.95)/sqrt(y^2/c),                 qnorm(1 - alpha) - log(0.95)/sqrt(y^2/c)), mean = c(x/sqrt(y^2/c),                 x/sqrt(y^2/c), x/sqrt(y^2/c)), sigma = SIGMA)) *             dnorm(y, mean = x, sd = sqrt(4/d2)) * prior_tte(x,             w, hr1, hr2, id1, id2)    })}, -log(HRgo), Inf): non-finite function value          res <- utility4(d2 = 50, HRgo = 0.8,  w = 0.3,                                   hr1 =  0.69, hr2 = 0.81,                                   id1 = 210, id2 = 420,                                   alpha = 0.025, beta = 0.1, xi2 = 0.7, xi3 = 0.7,                                  c2 = 0.75, c3 = 1, c02 = 100, c03 = 150,                                  K = Inf, N = Inf, S = -Inf,                                  b1 = 1000, b2 = 2000, b3 = 3000,                                   case = 3, fixed = FALSE) #> Error in integrate(function(y) {    sapply(y, function(y) {        (4 * pmvnorm(lower = c(qnorm(1 - alpha), qnorm(1 - alpha),             qnorm(1 - alpha), 0), upper = c(qnorm(1 - alpha) -             log(0.85)/sqrt(y^2/c), qnorm(1 - alpha) - log(0.95)/sqrt(y^2/c),             qnorm(1 - alpha) - log(0.95)/sqrt(y^2/c), qnorm(1 -                 alpha) - log(0.95)/sqrt(y^2/c)), mean = c(x/sqrt(y^2/c),             x/sqrt(y^2/c), x/sqrt(y^2/c), x/sqrt(y^2/c)), sigma = SIGMA) -             3 * pmvnorm(lower = c(qnorm(1 - alpha), qnorm(1 -                 alpha), qnorm(1 - alpha), qnorm(1 - alpha)),                 upper = c(qnorm(1 - alpha) - log(0.95)/sqrt(y^2/c),                   qnorm(1 - alpha) - log(0.95)/sqrt(y^2/c), qnorm(1 -                     alpha) - log(0.95)/sqrt(y^2/c), qnorm(1 -                     alpha) - log(0.95)/sqrt(y^2/c)), mean = c(x/sqrt(y^2/c),                   x/sqrt(y^2/c), x/sqrt(y^2/c), x/sqrt(y^2/c)),                 sigma = SIGMA)) * dnorm(y, mean = x, sd = sqrt(4/d2)) *             prior_tte(x, w, hr1, hr2, id1, id2)    })}, -log(HRgo), Inf): non-finite function value"},{"path":"https://sterniii3.github.io/drugdevelopR/reference/utility_multitrial_binary.html","id":null,"dir":"Reference","previous_headings":"","what":"Utility function for multitrial programs with binary distributed outcomes — utility_multitrial_binary","title":"Utility function for multitrial programs with binary distributed outcomes — utility_multitrial_binary","text":"utility function calculates expected utility drug development program given gains minus costs depends parameters expected probability successful program. utility step maximized optimal_multitrial_binary() function.","code":""},{"path":"https://sterniii3.github.io/drugdevelopR/reference/utility_multitrial_binary.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Utility function for multitrial programs with binary distributed outcomes — utility_multitrial_binary","text":"","code":"utility2_binary(   n2,   RRgo,   w,   p0,   p11,   p12,   in1,   in2,   alpha,   beta,   c2,   c3,   c02,   c03,   K,   N,   S,   b1,   b2,   b3,   case,   fixed )  utility3_binary(   n2,   RRgo,   w,   p0,   p11,   p12,   in1,   in2,   alpha,   beta,   c2,   c3,   c02,   c03,   K,   N,   S,   b1,   b2,   b3,   case,   fixed )  utility4_binary(   n2,   RRgo,   w,   p0,   p11,   p12,   in1,   in2,   alpha,   beta,   c2,   c3,   c02,   c03,   K,   N,   S,   b1,   b2,   b3,   case,   fixed )"},{"path":"https://sterniii3.github.io/drugdevelopR/reference/utility_multitrial_binary.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Utility function for multitrial programs with binary distributed outcomes — utility_multitrial_binary","text":"n2 total sample size phase II; must even number RRgo threshold value go/-go decision rule w weight mixture prior distribution p0 assumed true rate control group p11 assumed true rate treatment group p12 assumed true rate treatment group in1 amount information p11 terms sample size in2 amount information p12 terms sample size alpha significance level beta 1-beta power calculation sample size phase III c2 variable per-patient cost phase II c3 variable per-patient cost phase III c02 fixed cost phase II c03 fixed cost phase III K constraint costs program, default: Inf, e.g. constraint N constraint total expected sample size program, default: Inf, e.g. constraint S constraint expected probability successful program, default: -Inf, e.g. constraint b1 expected gain effect size category \"small\" b2 expected gain effect size category \"medium\" b3 expected gain effect size category \"large\" case choose case: \"least 1, 2 3 significant trials needed approval\" fixed choose true treatment effects fixed random","code":""},{"path":"https://sterniii3.github.io/drugdevelopR/reference/utility_multitrial_binary.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Utility function for multitrial programs with binary distributed outcomes — utility_multitrial_binary","text":"output functions utility2_binary(), utility3_binary() utility4_binary() expected utility program 2, 3 4 phase III trials performed.","code":""},{"path":"https://sterniii3.github.io/drugdevelopR/reference/utility_multitrial_binary.html","id":"last-edited-by","dir":"Reference","previous_headings":"","what":"Last Edited By","title":"Utility function for multitrial programs with binary distributed outcomes — utility_multitrial_binary","text":"Johannes Cepicka","code":""},{"path":"https://sterniii3.github.io/drugdevelopR/reference/utility_multitrial_binary.html","id":"last-edit-date","dir":"Reference","previous_headings":"","what":"Last Edit Date","title":"Utility function for multitrial programs with binary distributed outcomes — utility_multitrial_binary","text":"2022-04-23","code":""},{"path":"https://sterniii3.github.io/drugdevelopR/reference/utility_multitrial_binary.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Utility function for multitrial programs with binary distributed outcomes — utility_multitrial_binary","text":"","code":"res <- utility2_binary(n2 = 50, RRgo = 0.8,  w = 0.3,                                   p0 = 0.6, p11 =  0.3, p12 = 0.5,                                   in1 = 300, in2 = 600, alpha = 0.025, beta = 0.1,                                  c2 = 0.75, c3 = 1, c02 = 100, c03 = 150,                                  K = Inf, N = Inf, S = -Inf,                                  b1 = 1000, b2 = 2000, b3 = 3000,                                   case = 2, fixed = FALSE) #> Error in utility2_binary(n2 = 50, RRgo = 0.8, w = 0.3, p0 = 0.6, p11 = 0.3,     p12 = 0.5, in1 = 300, in2 = 600, alpha = 0.025, beta = 0.1,     c2 = 0.75, c3 = 1, c02 = 100, c03 = 150, K = Inf, N = Inf,     S = -Inf, b1 = 1000, b2 = 2000, b3 = 3000, case = 2, fixed = FALSE): could not find function \"utility2_binary\"           res <- utility3_binary(n2 = 50, RRgo = 0.8,  w = 0.3,                                   p0 = 0.6, p11 =  0.3, p12 = 0.5,                                   in1 = 300, in2 = 600, alpha = 0.025, beta = 0.1,                                  c2 = 0.75, c3 = 1, c02 = 100, c03 = 150,                                  K = Inf, N = Inf, S = -Inf,                                  b1 = 1000, b2 = 2000, b3 = 3000,                                   case = 2, fixed = FALSE)          res <- utility4_binary(n2 = 50, RRgo = 0.8,  w = 0.3,                                   p0 = 0.6, p11 =  0.3, p12 = 0.5,                                   in1 = 300, in2 = 600, alpha = 0.025, beta = 0.1,                                  c2 = 0.75, c3 = 1, c02 = 100, c03 = 150,                                  K = Inf, N = Inf, S = -Inf,                                  b1 = 1000, b2 = 2000, b3 = 3000,                                   case = 3, fixed = FALSE)"},{"path":"https://sterniii3.github.io/drugdevelopR/reference/utility_multitrial_normal.html","id":null,"dir":"Reference","previous_headings":"","what":"Utility function for multitrial programs with normally distributed outcomes — utility_multitrial_normal","title":"Utility function for multitrial programs with normally distributed outcomes — utility_multitrial_normal","text":"utility function calculates expected utility drug development program given gains minus costs depends parameters expected probability successful program. utility step maximized optimal_multitrial_normal() function.","code":""},{"path":"https://sterniii3.github.io/drugdevelopR/reference/utility_multitrial_normal.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Utility function for multitrial programs with normally distributed outcomes — utility_multitrial_normal","text":"","code":"utility2_normal(   n2,   kappa,   w,   Delta1,   Delta2,   in1,   in2,   a,   b,   alpha,   beta,   c2,   c3,   c02,   c03,   K,   N,   S,   b1,   b2,   b3,   case,   fixed )  utility3_normal(   n2,   kappa,   w,   Delta1,   Delta2,   in1,   in2,   a,   b,   alpha,   beta,   c2,   c3,   c02,   c03,   K,   N,   S,   b1,   b2,   b3,   case,   fixed )  utility4_normal(   n2,   kappa,   w,   Delta1,   Delta2,   in1,   in2,   a,   b,   alpha,   beta,   c2,   c3,   c02,   c03,   K,   N,   S,   b1,   b2,   b3,   case,   fixed )"},{"path":"https://sterniii3.github.io/drugdevelopR/reference/utility_multitrial_normal.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Utility function for multitrial programs with normally distributed outcomes — utility_multitrial_normal","text":"n2 total sample size phase II; must even number kappa threshold value go/-go decision rule w weight mixture prior distribution Delta1 assumed true treatment effect standardized difference means Delta2 assumed true treatment effect standardized difference means in1 amount information Delta1 terms sample size in2 amount information Delta2 terms sample size lower boundary truncation b upper boundary truncation alpha significance level beta 1-beta power calculation sample size phase III c2 variable per-patient cost phase II c3 variable per-patient cost phase III c02 fixed cost phase II c03 fixed cost phase III K constraint costs program, default: Inf, e.g. constraint N constraint total expected sample size program, default: Inf, e.g. constraint S constraint expected probability successful program, default: -Inf, e.g. constraint b1 expected gain effect size category \"small\" b2 expected gain effect size category \"medium\" b3 expected gain effect size category \"large\" case choose case: \"least 1, 2 3 significant trials needed approval\" fixed choose true treatment effects fixed random","code":""},{"path":"https://sterniii3.github.io/drugdevelopR/reference/utility_multitrial_normal.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Utility function for multitrial programs with normally distributed outcomes — utility_multitrial_normal","text":"output functions utility2_normal(), utility3_normal() utility4_normal() expected utility program 2, 3 4 phase III trials performed.","code":""},{"path":"https://sterniii3.github.io/drugdevelopR/reference/utility_multitrial_normal.html","id":"last-edited-by","dir":"Reference","previous_headings":"","what":"Last Edited By","title":"Utility function for multitrial programs with normally distributed outcomes — utility_multitrial_normal","text":"Johannes Cepicka","code":""},{"path":"https://sterniii3.github.io/drugdevelopR/reference/utility_multitrial_normal.html","id":"last-edit-date","dir":"Reference","previous_headings":"","what":"Last Edit Date","title":"Utility function for multitrial programs with normally distributed outcomes — utility_multitrial_normal","text":"2022-04-23","code":""},{"path":"https://sterniii3.github.io/drugdevelopR/reference/utility_multitrial_normal.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Utility function for multitrial programs with normally distributed outcomes — utility_multitrial_normal","text":"","code":"res <- utility2_normal(kappa = 0.1, n2 = 50,  alpha = 0.025, beta = 0.1, w = 0.3,                                  Delta1 = 0.375, Delta2 = 0.625, in1 = 300, in2 = 600,                                   a = 0.25, b = 0.75,                                   c2 = 0.675, c3 = 0.72, c02 = 15, c03 = 20,                                  K = Inf, N = Inf, S = -Inf,                                   b1 = 3000, b2 = 8000, b3 = 10000,                                   case = 2, fixed = FALSE)           res <- utility3_normal(kappa = 0.1, n2 = 50,  alpha = 0.025, beta = 0.1, w = 0.3,                                  Delta1 = 0.375, Delta2 = 0.625, in1 = 300, in2 = 600,                                   a = 0.25, b = 0.75,                                   c2 = 0.675, c3 = 0.72, c02 = 15, c03 = 20,                                  K = Inf, N = Inf, S = -Inf,                                   b1 = 3000, b2 = 8000, b3 = 10000,                                   case = 2, fixed = FALSE)                         #> Error in integrate(function(y) {    sapply(y, function(y) {        (3 * pmvnorm(lower = c(qnorm(1 - alpha), qnorm(1 - alpha),             0), upper = c(qnorm(1 - alpha) + 0.8/sqrt(y^2/c),             qnorm(1 - alpha) + 0.5/sqrt(y^2/c), qnorm(1 - alpha) +                 0.5/sqrt(y^2/c)), mean = c(x/sqrt(y^2/c), x/sqrt(y^2/c),             x/sqrt(y^2/c)), sigma = SIGMA) - 2 * pmvnorm(lower = c(qnorm(1 -             alpha), qnorm(1 - alpha), qnorm(1 - alpha)), upper = c(qnorm(1 -             alpha) + 0.5/sqrt(y^2/c), qnorm(1 - alpha) + 0.5/sqrt(y^2/c),             qnorm(1 - alpha) + 0.5/sqrt(y^2/c)), mean = c(x/sqrt(y^2/c),             x/sqrt(y^2/c), x/sqrt(y^2/c)), sigma = SIGMA)) *             dnorm(y, mean = x, sd = sqrt(4/n2)) * prior_normal(x,             w, Delta1, Delta2, in1, in2, a, b)    })}, kappa, Inf): non-finite function value           res <- utility4_normal(kappa = 0.1, n2 = 50,  alpha = 0.025, beta = 0.1, w = 0.3,                                  Delta1 = 0.375, Delta2 = 0.625, in1 = 300, in2 = 600,                                   a = 0.25, b = 0.75,                                   c2 = 0.675, c3 = 0.72, c02 = 15, c03 = 20,                                  K = Inf, N = Inf, S = -Inf,                                   b1 = 3000, b2 = 8000, b3 = 10000,                                   case = 3, fixed = FALSE) #> Error in integrate(function(y) {    sapply(y, function(y) {        (4 * pmvnorm(lower = c(qnorm(1 - alpha), qnorm(1 - alpha),             qnorm(1 - alpha), 0), upper = c(qnorm(1 - alpha) +             0.8/sqrt(y^2/c), qnorm(1 - alpha) + 0.5/sqrt(y^2/c),             qnorm(1 - alpha) + 0.5/sqrt(y^2/c), qnorm(1 - alpha) +                 0.5/sqrt(y^2/c)), mean = c(x/sqrt(y^2/c), x/sqrt(y^2/c),             x/sqrt(y^2/c), x/sqrt(y^2/c)), sigma = SIGMA) - 3 *             pmvnorm(lower = c(qnorm(1 - alpha), qnorm(1 - alpha),                 qnorm(1 - alpha), qnorm(1 - alpha)), upper = c(qnorm(1 -                 alpha) + 0.5/sqrt(y^2/c), qnorm(1 - alpha) +                 0.5/sqrt(y^2/c), qnorm(1 - alpha) + 0.5/sqrt(y^2/c),                 qnorm(1 - alpha) + 0.5/sqrt(y^2/c)), mean = c(x/sqrt(y^2/c),                 x/sqrt(y^2/c), x/sqrt(y^2/c), x/sqrt(y^2/c)),                 sigma = SIGMA)) * dnorm(y, mean = x, sd = sqrt(4/n2)) *             prior_normal(x, w, Delta1, Delta2, in1, in2, a, b)    })}, kappa, Inf): non-finite function value"},{"path":"https://sterniii3.github.io/drugdevelopR/news/index.html","id":"drugdevelopr-010","dir":"Changelog","previous_headings":"","what":"drugdevelopR 0.1.0","title":"drugdevelopR 0.1.0","text":"Added NEWS.md file track changes package.","code":""}]
