[{"path":"https://sterniii3.github.io/drugdevelopR/LICENSE.html","id":null,"dir":"","previous_headings":"","what":"MIT License","title":"MIT License","text":"Copyright (c) 2022 drugdevelopR authors Permission hereby granted, free charge, person obtaining copy software associated documentation files (“Software”), deal Software without restriction, including without limitation rights use, copy, modify, merge, publish, distribute, sublicense, /sell copies Software, permit persons Software furnished , subject following conditions: copyright notice permission notice shall included copies substantial portions Software. SOFTWARE PROVIDED “”, WITHOUT WARRANTY KIND, EXPRESS IMPLIED, INCLUDING LIMITED WARRANTIES MERCHANTABILITY, FITNESS PARTICULAR PURPOSE NONINFRINGEMENT. EVENT SHALL AUTHORS COPYRIGHT HOLDERS LIABLE CLAIM, DAMAGES LIABILITY, WHETHER ACTION CONTRACT, TORT OTHERWISE, ARISING , CONNECTION SOFTWARE USE DEALINGS SOFTWARE.","code":""},{"path":"https://sterniii3.github.io/drugdevelopR/articles/Bias_adjustment.html","id":"the-example-setting","dir":"Articles","previous_headings":"","what":"The example setting","title":"Methods for Discounting of Phase II Results - Bias Adjustment","text":"Suppose developing new tumor treatment, exper. patient variable want investigate long patient survives without progression tumor (progression free survival). time event outcome variable. Therefore, use function optimal_bias, calculates optimal sample sizes threshold decisions values time--event outcomes bias adjustment. Within drug development program, compare experimental treatment exper control treatment contro. treatment effect measure given \\(\\theta = −\\log(HR)\\), negative logarithm hazard ratio \\(HR\\), ratio hazard rates. assume unfavorable events tumor progression occur 75% often control group, hazard ratio 0.75.","code":""},{"path":"https://sterniii3.github.io/drugdevelopR/articles/Bias_adjustment.html","id":"applying-the-package-to-the-example","dir":"Articles","previous_headings":"","what":"Applying the package to the example","title":"Methods for Discounting of Phase II Results - Bias Adjustment","text":"installing package according installation instructions, can load using following code: insert input values example time--event outcomes (see vignette time--event endpoints). basic setting, treatment effect may fixed (example) follows prior distribution (see Fixed Prior). Furthermore, options adapt program specific needs also available setting (see Paramters), however skipping phase II choosing different treatment effects phase II III possible. addition parameters basic setting, parameters needed specifically bias adjustment: adj = additive selects additive adjustment method number events phase III. Hereby, lower bound one-sided confidence interval adjusted according Wang et al (2006). adj = multiplicative selects multiplicative adjustment method number events phase III. Hereby, estimate retention factor used according Kirby et al. (2012). adj = returns results adjustment methods, .e. additive multiplicative one. adj = returns results adjustment methods addition, also returns results methods number events adjusted also threshold value decision rule. additive method, adjustment equal setting adjustment parameter 0.5. Therefore set upper limit alphaCImax 0.5. want investigate optimization region interval [0.1, 0.5] step size 0.05. Thus, set lower bound alphaCImin 0.1 step size stepalphaCI = 0.05. multiplicative method, adjustment equal setting adjustment parameter 1. Therefore set upper limit lambdamax 1. want investigate optimization region interval [0.7, 1] step size 0.05. Thus, set lower bound lambdamin 0.1 step size steplambda = 0.05. Now defined parameters needed example, ready feed package.","code":"library(drugdevelopR) #> Loading required package: mvtnorm #> Loading required package: doParallel #> Loading required package: foreach #> Loading required package: iterators #> Loading required package: parallel #> Loading required package: msm #> Loading required package: cubature #> Loading required package: MASS res <- optimal_bias(w = 0.3,                                 # define parameters for prior    hr1 = 0.75, hr2 = 0.8, id1 = 210, id2 = 420,              # (https://web.imbi.uni-heidelberg.de/prior/)    d2min = 20, d2max = 400, stepd2 = 5,                      # define optimization set for d2    adj = \"both\",                                             # choose both adjustment methods    lambdamin = 0.7, lambdamax = 1, steplambda = 0.05,        # optimization set for multiplicative adjustment    alphaCImin = 0.1, alphaCImax = 0.5, stepalphaCI = 0.05,   # optimization set for additive adjustment    hrgomin = 0.7, hrgomax = 0.9, stephrgo = 0.01,            # define optimization set for HRgo    alpha = 0.05, beta = 0.1, xi2 = 0.7, xi3 = 0.7,           # drug development planning parameters    c2 = 0.75, c3 = 1, c02 = 100, c03 = 150,                  # define fixed and variable costs    K = Inf, N = Inf, S = -Inf,                               # set constraints    steps1 = 1,  stepm1 = 0.95, stepl1 = 0.85,                # define boundary for  effect size categories    b1 = 1000, b2 = 2000, b3 = 3000,                          # define expected benefits    fixed = TRUE,                                             # choose if  effects are fixed or random    num_cl = 1)"},{"path":"https://sterniii3.github.io/drugdevelopR/articles/Bias_adjustment.html","id":"interpreting-the-output","dir":"Articles","previous_headings":"Applying the package to the example","what":"Interpreting the output","title":"Methods for Discounting of Phase II Results - Bias Adjustment","text":"setting input parameters running function, let’s take look output program. program returns output values adjustment methods. important ones multiplicative method : res$Adj optimal multiplicative adjustment parameter. setting, optimal value 0.95, indicating slight bias adjustment leads higher utility. res$d2 optimal number events phase II res$d3 resulting number events phase III. see optimal scenario requires 210 events phase II 451 events phase III, correspond 300 participants phase II 644 phase III. res$HRgo optimal threshold value go/-go decision rule. see need hazard ratio less 0.87 phase II order proceed phase III. res$u expected utility program optimal sample size threshold value. case amounts 587.18, .e expected utility 58 718 000$. additive method get: res$Adj optimal additive adjustment parameter. setting, optimal value 0.5, indicating bias adjustment leads highest utility. case, results match results basic setting can verified . res$d2 optimal number events phase II res$d3 resulting number events phase III. see optimal scenario requires 210 events phase II 441 events phase III, correspond 300 participants phase II 630 phase III. res$HRgo optimal threshold value go/-go decision rule. see need hazard ratio less 0.88 phase II order proceed phase III. res$u expected utility program optimal sample size threshold value. case amounts 584.57, .e expected utility 58 457 000$.","code":"res #>     Method      u  Adj HRgo  d2  d3   d  n2  n3   n  pgo sProg   hr   K   N #> 6 multipl. 587.18 0.95 0.87 210 451 661 300 644 944 0.86  0.72 0.75 Inf Inf #> 9     add. 584.57 0.50 0.88 210 441 651 300 630 930 0.88  0.71 0.75 Inf Inf #>      S  K2  K3 sProg1 sProg2 sProg3 steps1 stepm1 stepl1 alpha beta xi2 xi3 c02 #> 6 -Inf 325 773   0.08    0.3   0.33      1   0.95   0.85  0.05  0.1 0.7 0.7 100 #> 9 -Inf 325 761   0.09    0.3   0.33      1   0.95   0.85  0.05  0.1 0.7 0.7 100 #>   c03   c2 c3   b1   b2   b3 #> 6 150 0.75  1 1000 2000 3000 #> 9 150 0.75  1 1000 2000 3000"},{"path":"https://sterniii3.github.io/drugdevelopR/articles/Bias_adjustment.html","id":"where-to-go-from-here","dir":"Articles","previous_headings":"","what":"Where to go from here","title":"Methods for Discounting of Phase II Results - Bias Adjustment","text":"article presented example methods discount results phase II can included purpose bias adjustment. Note, example restricted time--event endpoints can also applied binary normally distributed endpoints using function optimal_bias_binary optimal_bias_normal. information use package, see: Introduction drugdevelopR: See package works basic example. Different outcomes: Apply binary endpoints time--event endpoints. Interpreting rest output: Obtain details drug development program. Fixed prior: Model assumed treatment effect prior distribution. parameters: Define custom effect size categories. Put constraints optimization defining maximum costs, total expected sample size program minimum expected probability successful program. Define expected difference treatment effect phase II III. Skip phase II. Complex drug development programs: Adapt situations multiple phase III trials, multi-arm trials, multiple endpoints. Parallel computing: faster calculating optimum using parallel computing. #References Kirby, S., Burke, J., Chuang-Stein, C., Sin, C. (2012). Discounting phase 2 results planning phase 3 clinical trials. Pharmaceutical Statistics, 11(5):373–385. Wang, S.-J., Hung, H. J., O’Neill, R. T. (2006). Adapting sample size planning phase III trial based phase II data. Pharmaceutical Statistics, 5(2):85–97.","code":""},{"path":"https://sterniii3.github.io/drugdevelopR/articles/Binary_distributed_outcomes.html","id":"the-example-setting","dir":"Articles","previous_headings":"","what":"The example setting","title":"Binary Distributed Outcome Variables","text":"Suppose developing new treatment prevent strokes, exper. patient variable want investigate patient stroke (unfavorable outcome value 1) (favourable outcome value 0) pre-defined observation period. binary distributed outcome variable. Within drug development program, compare experimental treatment exper control treatment contro. treatment effect measure given $ = −(RR)$, negative logarithm risk ratio (relative risk) \\(RR = \\frac{p_1}{p_0}\\). , \\(p_1\\) failure probability experimental treatment (.e. \\(\\mathbb{P}(X_i = 1)\\), probability patient \\(X_i\\) stroke) analogously \\(p_0\\) failure probability control treatment.","code":""},{"path":"https://sterniii3.github.io/drugdevelopR/articles/Binary_distributed_outcomes.html","id":"applying-the-package-to-the-example","dir":"Articles","previous_headings":"","what":"Applying the package to the example","title":"Binary Distributed Outcome Variables","text":"installing package according installation instructions, can load using following code:","code":"library(drugdevelopR) #> Loading required package: mvtnorm #> Loading required package: doParallel #> Loading required package: foreach #> Loading required package: iterators #> Loading required package: parallel #> Loading required package: msm #> Loading required package: cubature #> Loading required package: MASS"},{"path":"https://sterniii3.github.io/drugdevelopR/articles/Binary_distributed_outcomes.html","id":"defining-all-necessary-parameters","dir":"Articles","previous_headings":"Applying the package to the example","what":"Defining all necessary parameters","title":"Binary Distributed Outcome Variables","text":"order apply package setting example, need specify following parameters: p11 probability unfavorable outcome occurs experimental treatment exper p0 probability unfavorable outcome occurs control treatment contro. Lets assume, 30% patients, receive experimental treatment stroke 50% control group. Therefore, set p11 = 0.3 p0 = 0.5. now, assume probabilities fixed independent prior distribution. Thus, set fixed = TRUE. n2min n2max specify minimal maximal number participants phase II trial. package search optimal sample size within region. now, want program search optimal sample size interval 20 400 participants. addition, tell program search region steps four participants time setting stepn2 = 4. rrgomin rrgomax specify minimal maximal threshold value go/-go decision rule terms negative logarithm risk ratio. package search optimal threshold value within region. now, want program search interval 0.7 0.9 going steps steprrgo = 0.01. Note, lower bound decision rule set represents smallest size treatment effect observed phase II allowing go phase III, can used model minimally clinically relevant effect size. Moreover, note interval specified corresponds set \\(\\{-\\log(0.9), ..., -\\log(0.7)\\}\\). c02 c03 fixed costs phase II phase III respectively. set phase II costs 100 phase III costs 150 (\\(10^5\\)$), .e fixed costs 10 000 000$ phase II 15 000 000$ phase III. Note currency input values matter, input value c02 15 also interpreted fixed costs 1 500 000€ necessary. c2 c3 costs phase II phase III per patient. set 0.75 phase II 0.1 phase III. , values given \\(10^5\\)$, .e per patient costs 75 000$ phase II 100 000$ phase III. b1, b2 b3 expected small, medium large benefit categories successfully launching treatment market effect size category \\(10^5\\)$. define small benefit 1000, medium benefit 2000, large benefit 3000. effect size categories directly correspond treatment effect, .e. treatment effect 1 0.95 (terms risk ratio) small treatment effect, hence yielding expected benefits drug development program 100 000 000$. alpha specified significance level. set alpha = 0.05. 1 - beta minimal power require drug development program. set beta = 0.1, meaning require power 90%. setting normally distributed outcomes, treatment effect may fixed (example) follows prior distribution (see Fixed Prior). Furthermore, options adapt program specific needs also available setting (see Paramters). Now defined parameters needed example, ready feed package. use function optimal_binary(), calculates optimal sample size optimal threshold value binary distributed outcome variable.","code":"res <- optimal_binary(p0 = 0.5, p11 =  0.3,               # probabilities of the unfavorable outcome    n2min = 20, n2max = 400, stepn2 = 4,                   # define optimization set for n2    rrgomin = 0.7, rrgomax = 0.9, steprrgo = 0.01,         # define optimization set for RRgo    alpha = 0.05, beta = 0.1,                              # drug development planning parameters    c2 = 0.75, c3 = 1, c02 = 100, c03 = 150,               # define fixed and variable costs for phase II and III,    K = Inf, N = Inf, S = -Inf,                            # constraints    steps1 = 1, stepm1 = 0.95,  stepl1 = 0.85,             # treatment effect size categories as proposed by IQWiG (2016)    b1 = 1000, b2 = 2000, b3 = 3000,                       # expected benefit categories    w = 0.3, p12 = 0.5, in1 = 30, in2 = 60,                # prior (https://web.imbi.uni-heidelberg.de/prior/)    gamma = 0,                                             # population structures in phase II and III    fixed = TRUE,                                          # choose if true treatment effects are fixed or random    skipII = FALSE,                                        # choose if skipping phase II would be an option    num_cl = 1)"},{"path":"https://sterniii3.github.io/drugdevelopR/articles/Binary_distributed_outcomes.html","id":"interpreting-the-output","dir":"Articles","previous_headings":"Applying the package to the example","what":"Interpreting the output","title":"Binary Distributed Outcome Variables","text":"setting input parameters running function, let’s take look output program. program returns total thirteen values input values. now, look important ones: res$n2 optimal sample size phase II res$n3 resulting sample size phase III. see optimal scenario requires 256 participants phase II 290 participants phase III. res$RRgo optimal threshold value go/-go decision rule. see need risk ratio less 0.87 phase II order proceed phase III. res$u expected utility program optimal sample size threshold value. case amounts 1528.94, .e expected utility 152 894 000$.","code":"res #>         u RRgo  n2  n3   n  pgo sProg  p0  p1   K  K2  K3 sProg1 sProg2 sProg3 #> 1 1528.94 0.87 256 290 546 0.99  0.84 0.5 0.3 Inf 292 438   0.05   0.16   0.63 #>   steps1 stepm1 stepl1 alpha beta c02 c03   c2 c3   b1   b2   b3 gamma #> 1      1   0.95   0.85  0.05  0.1 100 150 0.75  1 1000 2000 3000     0"},{"path":"https://sterniii3.github.io/drugdevelopR/articles/Binary_distributed_outcomes.html","id":"where-to-go-from-here","dir":"Articles","previous_headings":"","what":"Where to go from here","title":"Binary Distributed Outcome Variables","text":"article introduced setting, outcome variable binary distributed. information use package, see: Introduction drugdevelopR: See package works basic example. Different outcomes: Apply time--event endpoints. Interpreting rest output: Obtain details drug development program. Fixed prior: Model assumed treatment effect prior distribution. parameters: Define custom effect size categories. Put constraints optimization defining maximum costs, total expected sample size program minimum expected probability successful program. Define expected difference treatment effect phase II III. Skip phase II. Complex drug development programs: Adapt situations biased effect estimators, multiple phase III trials, multi-arm trials, multiple endpoints. Parallel computing: faster calculating optimum using parallel computing.","code":""},{"path":"https://sterniii3.github.io/drugdevelopR/articles/Fixed_and_prior_distributions.html","id":"the-example-setting","dir":"Articles","previous_headings":"","what":"The example setting","title":"Fixed effects and prior distributions","text":"setting introduction, .e. suppose developing new tumor treatment, exper. patient variable want investigate difference tumor width one-year visit baseline. normally distributed outcome variable. parameters insert function optimum_normal parameters also inserted basic setting. However time, set fixed = \"FALSE\", hence assumed true treatment effect fixed follows prior distribution. , start loading drugdevelopR package.","code":"library(drugdevelopR) #> Loading required package: mvtnorm #> Loading required package: doParallel #> Loading required package: foreach #> Loading required package: iterators #> Loading required package: parallel #> Loading required package: msm #> Loading required package: cubature #> Loading required package: MASS"},{"path":"https://sterniii3.github.io/drugdevelopR/articles/Fixed_and_prior_distributions.html","id":"parameters-of-the-prior-distribution","dir":"Articles","previous_headings":"The example setting","what":"Parameters of the prior distribution","title":"Fixed effects and prior distributions","text":"Additionally parameters baseline scenario fixed treatment effects, now need input parameters: Differing baseline scenario now one treatment effect, two: Delta1 Delta2. input parameter Delta1 one got randomized controlled pilot trial team conducted earlier. value given standardized difference means (\\(\\Delta=\\frac{\\mu_{contro} - \\mu_{exper}}{\\sigma}\\)) value determined 0.625. However, sure result, another research group conducted similar study got treatment effect 0.9, now value Delta2. course, choice \\(\\Delta_1\\) \\(\\Delta_2\\) need built two clinical studies, can also derived different sources forming prior belief, e.g. clinical experience. now add information two experiments done two additional parameters in1 in2. call parameters “amount information” refer number participants used study determine treatment effect. study conducted 300 participants value in1 set 300. Let’s assume study research group conducted 600 participants, parameter value in2 600. Now, weight parameter w defined, allows us weigh two treatment effects. want trust results , can set higher parameter value w (Note w 0 1, parameter value 1 put weight results none results second study), think results group reliable reduce value w, thus putting weight Delta2. Note exchanging values Delta1 Delta2 (corresponding values in1 in2) setting \\(w_{new} = 1 - w_{old}\\) final results change. case, want put trust results thus set parameter w 0.6. Setting weight \\(1\\) effectively mean ignoring second treatment effect, also possible. prior distribution used package sum two truncated normal distributions. Hence, need truncation values lower boundary truncation b upper boundary. case set = 0.25 b = 0.75. prior distribution standardized true difference means given \\(\\Delta ∼ w · \\mathcal{N}^t_{[0.25,0.75]} (0.625, 4/300) + (1 − w) · \\mathcal{N}^t_{[0.25,0.75]} (0.9, 4/600)\\) \\(N^t_{[,b]} (\\mu, \\sigma^2)\\) denotes truncated normal distribution mean \\(\\mu\\), variance \\(\\sigma^2\\), truncated b. see different input values change prior distribution refer Shiny App.","code":"res <- optimal_normal(Delta1 = 0.625, Delta2 = 0.8, fixed = FALSE, # treatment effect                        n2min = 20, n2max = 400, # sample size region                        stepn2 = 4, # sample size step size                        kappamin = 0.02, kappamax = 0.2, # threshold region                        stepkappa = 0.02, # threshold step size                        c2 = 0.675, c3 = 0.72, # maximal total trial costs                        c02 = 15, c03 = 20, # maximal per-patient costs                        b1 = 3000, b2 = 8000, b3 = 10000, # gains for patients                        alpha = 0.05, # significance level                        beta = 0.1, # 1 - power                        w = 0.6, in1 = 300, in2 = 600, #weight and amount of information                        a = 0.25, b = 0.75) #truncation values"},{"path":"https://sterniii3.github.io/drugdevelopR/articles/Fixed_and_prior_distributions.html","id":"interpreting-the-output","dir":"Articles","previous_headings":"The example setting","what":"Interpreting the output","title":"Fixed effects and prior distributions","text":"setting input parameters running function, let’s take look output program. program returns total thirteen values input values. focus important ones: res$n2 optimal sample size phase II res$n3 resulting sample size phase III. see optimal scenario requires 76 participants phase II 158 participants phase III. number participants phases reduced compared setting fixed treatment effect. res$Kappa optimal threshold value go/-go decision rule. see need treatment effect 0.06 phase II order proceed phase III, baseline scenario. res$u expected utility program optimal sample size threshold value. case amounts 3473.81, .e expected utility 347 381 000$. 6.56% increase scenario without prior distribution. increase expected utility can attributed additional weight put second treatment effect Delta2, promising treatment effect.","code":"res #>         u Kappa n2  n3   n  pgo sProg   w Delta1 Delta2 in1 in2    a    b   K #> 1 3473.81  0.06 76 158 234 0.99  0.85 0.6  0.625    0.9 300 600 0.25 0.75 Inf #>   K2  K3 sProg1 sProg2 sProg3 steps1 stepm1 stepl1 alpha beta c02 c03    c2 #> 1 66 134   0.64    0.2   0.02      0    0.5    0.8  0.05  0.1  15  20 0.675 #>     c3   b1   b2    b3 gamma #> 1 0.72 3000 8000 10000     0"},{"path":"https://sterniii3.github.io/drugdevelopR/articles/Fixed_and_prior_distributions.html","id":"where-to-go-from-here","dir":"Articles","previous_headings":"","what":"Where to go from here","title":"Fixed effects and prior distributions","text":"tutorial explains use parameters needed prior distribution setting parameter fixed \"FALSE\". information use package, see: Introduction drugdevelopR: See package works basic example. Different outcomes: Apply binary endpoints time--event endpoints. Interpreting rest output: Obtain details drug development program. parameters: Define custom effect size categories. Put constraints optimization defining maximum costs, total expected sample size program minimum expected probability successful program. Define expected difference treatment effect phase II III. Skip phase II. Complex drug development programs: Adapt situations biased effect estimators, multiple phase III trials, multi-arm trials, multiple endpoints. Parallel computing: faster calculating optimum using parallel computing.","code":""},{"path":"https://sterniii3.github.io/drugdevelopR/articles/Interpreting_Output.html","id":"the-example-setting-and-the-input-parameters","dir":"Articles","previous_headings":"","what":"The example setting and the input parameters","title":"Interpreting the Rest of the Output","text":"setting introduction, .e. suppose developing new tumor treatment, exper. patient variable want investigate difference tumor width one-year visit baseline. normally distributed outcome variable. parameters insert function optimum_normal parameters also inserted basic setting. Thus, information input values refer Introduction. start loading drugdevelopR package. insert input values function optimal_normal:","code":"library(drugdevelopR) #> Loading required package: mvtnorm #> Loading required package: doParallel #> Loading required package: foreach #> Loading required package: iterators #> Loading required package: parallel #> Loading required package: msm #> Loading required package: cubature #> Loading required package: MASS res <- optimal_normal(Delta1 = 0.625, fixed = TRUE, # treatment effect                        n2min = 20, n2max = 400, # sample size region                        stepn2 = 4, # sample size step size                        kappamin = 0.02, kappamax = 0.2, # threshold region                        stepkappa = 0.02, # threshold step size                        c2 = 0.675, c3 = 0.72, # maximal total trial costs                        c02 = 15, c03 = 20, # maximal per-patient costs                        b1 = 3000, b2 = 8000, b3 = 10000, # gains for patients                        alpha = 0.05, # significance level                        beta = 0.1, # 1 - power                        Delta2 = NULL, w = NULL, in1 = NULL, in2 = NULL,                         a = NULL,b = NULL) # setting all unneeded parameters to NULL"},{"path":"https://sterniii3.github.io/drugdevelopR/articles/Interpreting_Output.html","id":"interpreting-the-output","dir":"Articles","previous_headings":"The example setting and the input parameters","what":"Interpreting the output","title":"Interpreting the Rest of the Output","text":"setting input parameters running function, let’s take look output program. program returns total thirteen values input values. now take closer look explain output values necessary detail: res$u expected utility program optimal sample size threshold value. case amounts 3259.83, .e expected utility 325 983 000$. function maximizes expected utility, highest expected utility one can receive given input parameters. res$Kappa optimal threshold value go/-go decision rule. see need treatment effect 0.06 phase II order proceed phase III. phase II get treatment effect 0.06, program deemed unsuccessful phase III trial conducted. threshold value, proceed phase III. res$n2 optimal sample size phase II res$n3 resulting sample size phase III. see optimal scenario requires 84 participants phase II 166 participants phase III. res$n sum res$n2 res$n3 refers total number participants. Note, one can set maximum number participants, leading constrained optimization. information, see article input parameters. res$pgo probability go phase III, coincides probability observed treatment effect optimal threshold value. case, get probability close one, rounded 1, implying can expect treatment effect 0.06 phase II hence, trial proceed phase III almost certainly. res$sProg probability program overall successful, .e. proceed phase III observe positive treatment effect phase III. case probability successful program 0.85, trial input parameters successful 85% times. probability successful program subdivided probabilities small, medium large treatment effect. probability small treatment effect res$sProg1 0.68 case, medium treatment effect probability res$sProg2 0.17 large treatment effect probability res&$sProg3 0.01. treatment effects correspond benefit categories, probability 0.68 receive benefit 300,000,000$ . Due rounding, probabilities may add exactly overall probability successful program. Note one can set minimum probability successful program, leading constrained optimization. information, see article input parameters. final output parameters costs res$K2 phase II res$K3 phase III. costs phase II calculated \\(c_{02} + n_2*c_2\\) costs phase II calculated \\((c_{03} + n_3*c_3)p_{go}\\), .e. phase III expected costs returned. setting costs 72 10^5$ (.e. 7,200,000$) phase II costs 139 10^5$(.e. 13,900,000) phase III. Note, one can set maximum cost limit \\(K=K_2+K_3\\) , leading constrained optimization. information, see article input parameters.","code":"res #>         u Kappa n2  n3   n pgo sProg Delta   K K2  K3 sProg1 sProg2 sProg3 #> 1 3259.83  0.06 84 166 250   1  0.85 0.625 Inf 72 139   0.68   0.17   0.01 #>   steps1 stepm1 stepl1 alpha beta c02 c03    c2   c3   b1   b2    b3 gamma #> 1      0    0.5    0.8  0.05  0.1  15  20 0.675 0.72 3000 8000 10000     0"},{"path":"https://sterniii3.github.io/drugdevelopR/articles/Interpreting_Output.html","id":"where-to-go-from-here","dir":"Articles","previous_headings":"","what":"Where to go from here","title":"Interpreting the Rest of the Output","text":"tutorial explains can interpret output generated program. information use package, see: Introduction drugdevelopR: See package works basic example. Different outcomes: Apply binary endpoints time--event endpoints. Fixed prior: Model assumed treatment effect prior distribution. parameters: Define custom effect size categories. Put constraints optimization defining maximum costs, total expected sample size program minimum expected probability successful program. Define expected difference treatment effect phase II III. Skip phase II. Complex drug development programs: Adapt situations biased effect estimators, multiple phase III trials, multi-arm trials, multiple endpoints. Parallel computing: faster calculating optimum using parallel computing.","code":""},{"path":"https://sterniii3.github.io/drugdevelopR/articles/More_Parameters.html","id":"the-example-setting-and-the-input-parameters","dir":"Articles","previous_headings":"","what":"The example setting and the input parameters","title":"More Parameters to Adapt to Specific Settings and Individual Needs","text":"setting introduction, .e. suppose developing new tumor treatment, exper. patient variable want investigate difference tumor width one-year visit baseline. normally distributed outcome variable. parameters insert function optimum_normal parameters also inserted basic setting. Thus, information input values refer Introduction. start loading drugdevelopR package. Back , got following output: now want see, different modifications, .e using paramters change outcome program. Note, setting parameter fixed \"False\", thus using prior distribution, already explained article Fixed prior","code":"library(drugdevelopR) #> Loading required package: mvtnorm #> Loading required package: doParallel #> Loading required package: foreach #> Loading required package: iterators #> Loading required package: parallel #> Loading required package: msm #> Loading required package: cubature #> Loading required package: MASS res #>         u Kappa n2  n3   n pgo sProg Delta   K K2  K3 sProg1 sProg2 sProg3 #> 1 3259.83  0.06 84 166 250   1  0.85 0.625 Inf 72 139   0.68   0.17   0.01 #>   steps1 stepm1 stepl1 alpha beta c02 c03    c2   c3   b1   b2    b3 gamma #> 1      0    0.5    0.8  0.05  0.1  15  20 0.675 0.72 3000 8000 10000     0"},{"path":"https://sterniii3.github.io/drugdevelopR/articles/More_Parameters.html","id":"constraint-optimization","dir":"Articles","previous_headings":"The example setting and the input parameters","what":"Constraint Optimization","title":"More Parameters to Adapt to Specific Settings and Individual Needs","text":"three options include constraint optimization, setting maximum costs limits, maximum number participants demanding minimum probability successful program. options can applied separately combined, best suited specific needs.","code":""},{"path":"https://sterniii3.github.io/drugdevelopR/articles/More_Parameters.html","id":"cost-constraint---maximum-total-costs","dir":"Articles","previous_headings":"The example setting and the input parameters > Constraint Optimization","what":"Cost Constraint - Maximum Total Costs","title":"More Parameters to Adapt to Specific Settings and Individual Needs","text":"total costs given sum cost ins phase II phase III, .e. \\(K2\\) + \\(K3\\). example get total costs \\(72+139=211\\) (10^5 $). Let’s assume investor drug pharmaceutical company willing pay 20,000,000 $. can now set maximum cost constraint providing parameter value K = 200 optimum_normal function. default value K Inf. get following results: see due cost constraint costs phase II actually increase 72 74, however costs phase III decrease 139 125, overall constraint met. Moreover, expected utility optimum decreases 325,983,000 324,742,000 dollars.","code":"resK <- optimal_normal(Delta1 = 0.625, fixed = TRUE, # treatment effect                        n2min = 20, n2max = 400, # sample size region                        stepn2 = 4, # sample size step size                        kappamin = 0.02, kappamax = 0.2, # threshold region                        stepkappa = 0.02, # threshold step size                        c2 = 0.675, c3 = 0.72, # maximal total trial costs                        c02 = 15, c03 = 20, # maximal per-patient costs                        b1 = 3000, b2 = 8000, b3 = 10000, # gains for patients                        alpha = 0.05, # significance level                        beta = 0.1, # 1 - power                        Delta2 = NULL, w = NULL, in1 = NULL, in2 = NULL,                         a = NULL,b = NULL, # setting all unneeded parameters to NULL                        K = 200 # cost constraint                        ) resK #>         u Kappa n2  n3   n  pgo sProg Delta   K K2  K3 sProg1 sProg2 sProg3 #> 1 3247.42   0.1 88 146 234 0.99  0.85 0.625 200 74 125   0.68   0.17   0.01 #>   steps1 stepm1 stepl1 alpha beta c02 c03    c2   c3   b1   b2    b3 gamma #> 1      0    0.5    0.8  0.05  0.1  15  20 0.675 0.72 3000 8000 10000     0"},{"path":"https://sterniii3.github.io/drugdevelopR/articles/More_Parameters.html","id":"sample-size-constraint---maximum-number-of-participants","dir":"Articles","previous_headings":"The example setting and the input parameters > Constraint Optimization","what":"Sample Size Constraint - Maximum Number of Participants","title":"More Parameters to Adapt to Specific Settings and Individual Needs","text":"similarly cost constraint, can set constraint maximum number participants trial. can see, without constraints, optimum need total number 250 participants. However, one can certainly imagine situation, 200 persons willing participate trial, example incidence illness high within target population. model , can easily set sample size constraint, case N = 200. allows optimal allocation participants phase II III. default value N Inf. get following results: Due sample size constraint optimal number participants phase II 72 128 phase III (84 166 respectively) within framework. expected utility optimum decreases 314,241,000.","code":"resN <- optimal_normal(Delta1 = 0.625, fixed = TRUE, # treatment effect                        n2min = 20, n2max = 400, # sample size region                        stepn2 = 4, # sample size step size                        kappamin = 0.02, kappamax = 0.2, # threshold region                        stepkappa = 0.02, # threshold step size                        c2 = 0.675, c3 = 0.72, # maximal total trial costs                        c02 = 15, c03 = 20, # maximal per-patient costs                        b1 = 3000, b2 = 8000, b3 = 10000, # gains for patients                        alpha = 0.05, # significance level                        beta = 0.1, # 1 - power                        Delta2 = NULL, w = NULL, in1 = NULL, in2 = NULL,                         a = NULL,b = NULL, # setting all unneeded parameters to NULL                        N = 200 # sample size constraint                        ) resN #>         u Kappa n2  n3   n  pgo sProg Delta   K K2  K3 sProg1 sProg2 sProg3 #> 1 3142.41  0.18 72 128 200 0.97  0.82 0.625 Inf 64 112   0.66   0.16   0.01 #>   steps1 stepm1 stepl1 alpha beta c02 c03    c2   c3   b1   b2    b3 gamma #> 1      0    0.5    0.8  0.05  0.1  15  20 0.675 0.72 3000 8000 10000     0"},{"path":"https://sterniii3.github.io/drugdevelopR/articles/More_Parameters.html","id":"success-probability-constraint---minimum-probability-of-a-successful-program","dir":"Articles","previous_headings":"The example setting and the input parameters > Constraint Optimization","what":"Success Probability Constraint - Minimum Probability of a Successful Program","title":"More Parameters to Adapt to Specific Settings and Individual Needs","text":"last option provided constraint optimization minimum probability successful program. basic setting, without constraints, hat probability program successful 0.85, .e. probability 0.85 program proceed phase II phase III positive treatment effect detected phase III. Let’s say, willing higher costs return want probability 0.87. can include within framework, including parameter S setting S = 0.87. default value S -Inf. get following results: probability successful program now increased 0.85 0.87, mainly increasing number participants phase II. expected utility decreased 323,557,000.","code":"resS <- optimal_normal(Delta1 = 0.625, fixed = TRUE, # treatment effect                        n2min = 20, n2max = 400, # sample size region                        stepn2 = 4, # sample size step size                        kappamin = 0.02, kappamax = 0.2, # threshold region                        stepkappa = 0.02, # threshold step size                        c2 = 0.675, c3 = 0.72, # maximal total trial costs                        c02 = 15, c03 = 20, # maximal per-patient costs                        b1 = 3000, b2 = 8000, b3 = 10000, # gains for patients                        alpha = 0.05, # significance level                        beta = 0.1, # 1 - power                        Delta2 = NULL, w = NULL, in1 = NULL, in2 = NULL,                         a = NULL,b = NULL, # setting all unneeded parameters to NULL                        S = 0.87 #minimum success probability                        ) resS #>         u Kappa  n2  n3   n pgo sProg Delta   K  K2  K3 sProg1 sProg2 sProg3 #> 1 3235.57  0.06 132 126 258   1  0.87 0.625 Inf 104 111   0.71   0.16   0.01 #>   steps1 stepm1 stepl1 alpha beta c02 c03    c2   c3   b1   b2    b3 gamma #> 1      0    0.5    0.8  0.05  0.1  15  20 0.675 0.72 3000 8000 10000     0"},{"path":"https://sterniii3.github.io/drugdevelopR/articles/More_Parameters.html","id":"customized-effect-size-categories","dir":"Articles","previous_headings":"The example setting and the input parameters","what":"Customized Effect Size Categories","title":"More Parameters to Adapt to Specific Settings and Individual Needs","text":"now, effect size categories small, medium large treatment effect predefined set \\(0-0.5\\) small treatment effect, \\(0.5-0.8\\) medium treatment effect \\(\\geq 0.8\\) large treatment effect (standardized differences mean). parameter values taken Cohen (1988). However, one can easily customize effect size categories inserting threshold values effect size. Let’s say consider program successful treatment effect 0.1. Furthermore, want assign medium benefit treatment effect 0.6 1 large benefit treatment effect 1. Hereby, note one--one relation effect size categories benefit categories, .e. large treatment effect corresponds large benefit . want implement scenario can defining parameters steps1, stepm1 stepl1. , set steps1 = 0.1, stepm1 = 0.6 stepl1 = 1.","code":"res <- optimal_normal(Delta1 = 0.625, fixed = TRUE, # treatment effect                        n2min = 20, n2max = 400, # sample size region                        stepn2 = 4, # sample size step size                        kappamin = 0.02, kappamax = 0.2, # threshold region                        stepkappa = 0.02, # threshold step size                        c2 = 0.675, c3 = 0.72, # maximal total trial costs                        c02 = 15, c03 = 20, # maximal per-patient costs                        b1 = 3000, b2 = 8000, b3 = 10000, # gains for patients                        alpha = 0.05, # significance level                        beta = 0.1, # 1 - power                        Delta2 = NULL, w = NULL, in1 = NULL, in2 = NULL,                         a = NULL,b = NULL, # setting all unneeded parameters to NULL                        steps1 = 0.1, stepm1 = 0.6, stepl1 = 1 #stepsizes for effect size categories                        )"},{"path":"https://sterniii3.github.io/drugdevelopR/articles/More_Parameters.html","id":"differences-in-the-treatments-effect","dir":"Articles","previous_headings":"The example setting and the input parameters","what":"Differences in the Treatments Effect","title":"More Parameters to Adapt to Specific Settings and Individual Needs","text":"Due different population structures phase II phase III assumed true treatment effect Delta1 may phases. Phase III trials often conducted populations heterogeneous preceding phase II trials (Kirby et al., 2012), effect phase III may different phase II. order model differences, one can use parameter gamma. treatment effect phase III calculated follows: \\(\\Delta_3 = \\Delta_2 + \\gamma\\). Values gamma zero indicate pessimistic view, values zero indicate optimistic view treatment effect confirmatory phase. default value gamma zero.","code":""},{"path":"https://sterniii3.github.io/drugdevelopR/articles/More_Parameters.html","id":"skipping-phase-ii","dir":"Articles","previous_headings":"The example setting and the input parameters","what":"Skipping Phase II","title":"More Parameters to Adapt to Specific Settings and Individual Needs","text":"Adding option skip phase II can integrated framework using parameter skipII value treatment effect used phase III planning may calculated median prior distribution used modeling true assumed treatment effect phase II. set parameter TRUE, program calculates expected utility case phase II skipped compares situation phase II skipped.results returned list two results lists, res[[1]] results including phase II res[[2]] skipping phase II. default value skipII = FALSE. get following results: can seen case skipping phase II yields higher utility including phase II. skipping phase II automatically sets n2 = O, leading costs K2 = 0 , hence, overall costs may smaller. Furthermore, note optimal threshold value Kappa also automatically set -Inf probability go phase III pgo = 1, go phase III every time, skipping phase II.","code":"resII <- optimal_normal(Delta1 = 0.625, fixed = TRUE, # treatment effect                        n2min = 20, n2max = 400, # sample size region                        stepn2 = 4, # sample size step size                        kappamin = 0.02, kappamax = 0.2, # threshold region                        stepkappa = 0.02, # threshold step size                        c2 = 0.675, c3 = 0.72, # maximal total trial costs                        c02 = 15, c03 = 20, # maximal per-patient costs                        b1 = 3000, b2 = 8000, b3 = 10000, # gains for patients                        alpha = 0.05, # significance level                        beta = 0.1, # 1 - power                        Delta2 = NULL, w = NULL, in1 = NULL, in2 = NULL,                         a = NULL,b = NULL, # setting all unneeded parameters to NULL                        skipII = TRUE #skipping phase II                        ) resII #> [[1]] #>         u Kappa n2  n3   n pgo sProg Delta   K K2  K3 sProg1 sProg2 sProg3 #> 1 3259.83  0.06 84 166 250   1  0.85 0.625 Inf 72 139   0.68   0.17   0.01 #>   steps1 stepm1 stepl1 alpha beta c02 c03    c2   c3   b1   b2    b3 gamma #> 1      0    0.5    0.8  0.05  0.1  15  20 0.675 0.72 3000 8000 10000     0 #>  #> [[2]] #>         u Delta Kappa n2 n3 pgo sProg   K K2 K3 sProg1 sProg2 sProg3 steps1 #> 1 3353.72  0.62  -Inf  0 88   1   0.9 Inf  0 83   0.76   0.14   0.01      0 #>   stepm1 stepl1 alpha beta c02 c03 c2   c3   b1   b2    b3 gamma #> 1    0.5    0.8  0.05  0.1   0  20  0 0.72 3000 8000 10000     0"},{"path":"https://sterniii3.github.io/drugdevelopR/articles/More_Parameters.html","id":"parallel-computing","dir":"Articles","previous_headings":"The example setting and the input parameters","what":"Parallel Computing","title":"More Parameters to Adapt to Specific Settings and Individual Needs","text":"programs may long run-times, especial complex ones, fast computing enabled parallel programming. parameter num_cl allows set number cores parallel computing. advisable check number cores available using function detectCores(). default value num_cl = 1. Note, using parameters change results, can decrease run-time significantly.","code":""},{"path":"https://sterniii3.github.io/drugdevelopR/articles/More_Parameters.html","id":"where-to-go-from-here","dir":"Articles","previous_headings":"","what":"Where to go from here","title":"More Parameters to Adapt to Specific Settings and Individual Needs","text":"tutorial presents parameters, can adapt program specific needs. information use package, see: Introduction drugdevelopR: See package works basic example. Different outcomes: Apply binary endpoints time--event endpoints. Interpreting rest output: Obtain details drug development program. Fixed prior: Model assumed treatment effect prior distribution. Complex drug development programs: Adapt situations biased effect estimators, multiple phase III trials, multiarm trials, multiple endpoints.","code":""},{"path":"https://sterniii3.github.io/drugdevelopR/articles/More_Parameters.html","id":"references","dir":"Articles","previous_headings":"","what":"References","title":"More Parameters to Adapt to Specific Settings and Individual Needs","text":"Cohen, J. (1988). Statistical power analysis behavioral sciences. Kirby, S., Burke, J., Chuang-Stein, C., Sin, C. (2012). Discounting phase 2 results planning phase 3 clinical trials. Pharmaceutical Statistics, 11(5):373–385.","code":""},{"path":"https://sterniii3.github.io/drugdevelopR/articles/Multitrial.html","id":"the-example-setting","dir":"Articles","previous_headings":"","what":"The example setting","title":"Multitrial Programs - Methods for Programs with Several Phase III Trials","text":"Suppose developing new tumor treatment, exper. patient variable want investigate long patient survives without progression tumor (progression free survival). time event outcome variable. Therefore, use function optimal_multitrial, calculates optimal sample sizes threshold decisions values time--event outcomes several phase III trials performed. Within drug development program, compare experimental treatment exper control treatment contro. treatment effect measure given \\(\\theta = −\\log(HR)\\), negative logarithm hazard ratio \\(HR\\), ratio hazard rates. assume unfavorable events tumor progression occur 75% often control group, hazard ratio 0.75.","code":""},{"path":"https://sterniii3.github.io/drugdevelopR/articles/Multitrial.html","id":"applying-the-package-to-the-example","dir":"Articles","previous_headings":"","what":"Applying the package to the example","title":"Multitrial Programs - Methods for Programs with Several Phase III Trials","text":"installing package according installation instructions, can load using following code: insert input values example time--event outcomes (see vignette time--event endpoints). basic setting, treatment effect may fixed (example) follows prior distribution (see Fixed Prior). Furthermore, options adapt program specific needs also available setting (see Paramters), however skipping phase II, setting predefined benefit categories choosing different treatment effects phase II III possible. program implements framework developed phase II/III drug development programs several phase III trials performed. particular relevance regulatory agencies often require statistical significance two phase III trials. Different cases, defined number significant trials needed approval, implemented package. case, different strategies, defined number phase III trials conducted order reach goal case, implemented. success drug development program, necessary treatment effects phase III trials point direction. example, select case 3 strategy 4, require four phase III trials, three need significant level \\(\\alpha\\) treatment effect fourth must point direction. Hence, addition parameters basic setting, user allowed provide following parameters: parameter set strategy, parameter set case. following cases possible strategies implemented program. *cases 2 3, package also provides strategy use one trial, adjusted significance level. included discussion larger trial adjusted significance level may also may serve evidence efficacy (see Koch (2005)). ** case 2, package also provides 2+1 one strategy: conducting two trials, one delivers significant result trial’s treatment effect points least direction, third trial conducted. strategy called “23” package. , addition parameters basic setting, provide following parameters: parameter case allows us chose number trials phase III, show significant positive treatment effect order overall program deemed successful. implemented cases 1, 2 3 program, one can set parameter one values. following example set parameter case = 3, indicating least two trials phase III show significant treatment effect phase III. parameter strategy amounts number trials conducted phase III. implemented strategies 1, 2, 3 4, programs four trials can evaluated within drugdevelopR framework. Furthermore, setting strategy = TRUE returns results optimization implemented strategies specific case. Note, strategies implemented case. possible case-strategy combinations can seen table . two special combinations, implemented. Setting strategy = 23 case 2 leads situation two phase III trials conducted. one shows significant positive treatment effect (trial’s treatment effect points least direction) third trial conducted. Furthermore, setting strategy = 1 cases 2 3 leads situation one large phase III trial conducted adjusted significance level, .e. \\(\\alpha_{new} = \\alpha^2\\) case 2 \\(\\alpha_{new} = \\alpha^3\\) case 3. Note, setting case = 1 strategy = 1 leads results basic setting, .e. one phase III trial, show significant positive treatment effect. following example set strategy = TRUE. Note, following example, input parameters changed compared basic setting order reduce computation time.","code":"library(drugdevelopR) #> Loading required package: mvtnorm #> Loading required package: doParallel #> Loading required package: foreach #> Loading required package: iterators #> Loading required package: parallel #> Loading required package: msm #> Loading required package: cubature #> Loading required package: MASS res1 <- optimal_multitrial(w = 0.3,                       # define parameters for prior    hr1 = 0.7, hr2 = 0.8, id1 = 210, id2 = 420,            # (https://web.imbi.uni-heidelberg.de/prior/)    d2min = 20, d2max = 200, stepd2 = 5,                   # define optimization set for d2    hrgomin = 0.7, hrgomax = 0.9, stephrgo = 0.02,         # define optimization set for HRgo    alpha = 0.05, beta = 0.1, xi2 = 0.7, xi3 = 0.7,        # drug development planning parameters    c2 = 0.75, c3 = 1, c02 = 100, c03 = 150,               # define fixed and variable costs    K = Inf, N = Inf, S = -Inf,                            # set constraints    b1 = 1000, b2 = 2000, b3 = 3000,                       # define expected benefits    fixed = TRUE,                                          # choose if  effects are fixed or random    case = 3, strategy = TRUE                              # choose case and strategy    num_cl = 3)"},{"path":"https://sterniii3.github.io/drugdevelopR/articles/Multitrial.html","id":"interpreting-the-output","dir":"Articles","previous_headings":"Applying the package to the example","what":"Interpreting the output","title":"Multitrial Programs - Methods for Programs with Several Phase III Trials","text":"setting input parameters running function, let’s take look output program. strategy 1 get: res$d2 optimal number events phase II res$d3 resulting number events phase III. see optimal scenario requires 105 events phase II 444 events phase III, correspond 150 participants phase II 634 phase III. res$HRgo optimal threshold value go/-go decision rule. see need hazard ratio less 0.78 phase II order proceed phase III. res$u expected utility program optimal sample size threshold value. case amounts -64.48, .e expected utility -6 448 000$. Note, input parameter alpha returned value 0.000125, corresponds adjusted significance level \\(\\alpha^3\\). results strategy 3 : res$d2 optimal number events phase II res$d3 resulting number events phase III. see optimal scenario requires 75 events phase II 417 events phase III, leads 108 participants phase II 594 phase III. corresponds three trials phase III trial 298 participants. res$HRgo optimal threshold value go/-go decision rule. see need hazard ratio less 0.78 phase II order proceed phase III. res$u expected utility program optimal sample size threshold value. case amounts -272.50, .e expected utility -27 250 000$. Strategy 4 yields following results: res$d2 optimal number events phase II res$d3 resulting number events phase III. see optimal scenario requires 60 events phase II 264 events phase III, leads 86 participants phase II 376 phase III. corresponds four trials phase III trial 94 participants. res$HRgo optimal threshold value go/-go decision rule. see need hazard ratio less 0.70 phase II order proceed phase III. res$u expected utility program optimal sample size threshold value. case amounts -293.81, .e expected utility -29 381 000$.","code":"res1 #>   Case Strategy       u HRgo  d2  d3   d  n2  n3   n  pgo sProg  hr   K   N #> 1    3        1  -64.48 0.78 105 444 549 150 634 784 0.71  0.45 0.7 Inf Inf #> 2    3        3 -272.50 0.78  75 417 492 108 594 702 0.68  0.32 0.7 Inf Inf #> 3    3        4 -293.81 0.70  60 264 324  86 376 462 0.50  0.25 0.7 Inf Inf #>      S  K2  K3 sProg1 sProg2 sProg3 steps1 stepm1 stepl1    alpha beta xi2 xi3 #> 1 -Inf 212 741   0.10   0.25   0.10      1   0.95   0.85 0.000125  0.1 0.7 0.7 #> 2 -Inf 181 900   0.01   0.13   0.18      1   0.95   0.85 0.050000  0.1 0.7 0.7 #> 3 -Inf 164 676   0.00   0.20   0.05      1   0.95   0.85 0.050000  0.1 0.7 0.7 #>   c02 c03   c2 c3   b1   b2   b3 gamma #> 1 100 150 0.75  1 1000 2000 3000     0 #> 2 100 150 0.75  1 1000 2000 3000     0 #> 3 100 150 0.75  1 1000 2000 3000     0"},{"path":"https://sterniii3.github.io/drugdevelopR/articles/Multitrial.html","id":"where-to-go-from-here","dir":"Articles","previous_headings":"","what":"Where to go from here","title":"Multitrial Programs - Methods for Programs with Several Phase III Trials","text":"article presented example several phase III endpoints performed. Note, example restricted time--event endpoints can also applied binary normally distributed endpoints using functions optimal_multitrial_binary optimal_multitrial_normal. information use package, see: Introduction drugdevelopR: See package works basic example. Different outcomes: Apply binary endpoints time--event endpoints. Interpreting rest output: Obtain details drug development program. Fixed prior: Model assumed treatment effect prior distribution. parameters: Define custom effect size categories. Put constraints optimization defining maximum costs, total expected sample size program minimum expected probability successful program. Define expected difference treatment effect phase II III. Skip phase II. Complex drug development programs: Adapt situations biased effect estimators, multi-arm trials, multiple endpoints. Parallel computing: faster calculating optimum using parallel computing.","code":""},{"path":"https://sterniii3.github.io/drugdevelopR/articles/Multitrial.html","id":"references","dir":"Articles","previous_headings":"","what":"References","title":"Multitrial Programs - Methods for Programs with Several Phase III Trials","text":"Koch, G. G. (2005). Statistical consideration strategy demon- strating clinical evidence effectiveness one larger vs two smaller pivotal studies z. shun, e. chi, s. durrleman l. fisher, statistics medicine 2005; 24: 1619–1637. Statistics Medicine, 24(11):1639–1646.","code":""},{"path":"https://sterniii3.github.io/drugdevelopR/articles/Time-to-event_outcomes.html","id":"the-example-setting","dir":"Articles","previous_headings":"","what":"The example setting","title":"Time-to-event Outcome Variables","text":"Suppose developing new tumor treatment, exper. patient variable want investigate long patient survives without progression tumor (progression free survival). time event outcome variable. Within drug development program, compare experimental treatment exper control treatment contro. treatment effect measure given \\(\\theta = −\\log(HR)\\), negative logarithm hazard ratio \\(HR\\), ratio hazard rates. assume unfavorable events tumor progression occur 75% often control group, hazard ratio 0.75.","code":""},{"path":"https://sterniii3.github.io/drugdevelopR/articles/Time-to-event_outcomes.html","id":"applying-the-package-to-the-example","dir":"Articles","previous_headings":"","what":"Applying the package to the example","title":"Time-to-event Outcome Variables","text":"installing package according installation instructions, can load using following code:","code":"library(drugdevelopR) #> Loading required package: mvtnorm #> Loading required package: doParallel #> Loading required package: foreach #> Loading required package: iterators #> Loading required package: parallel #> Loading required package: msm #> Loading required package: cubature #> Loading required package: MASS"},{"path":"https://sterniii3.github.io/drugdevelopR/articles/Time-to-event_outcomes.html","id":"defining-all-necessary-parameters","dir":"Articles","previous_headings":"Applying the package to the example","what":"Defining all necessary parameters","title":"Time-to-event Outcome Variables","text":"order apply package setting example, need specify following parameters: hr1 hazard ratio. already explained , assume experimental treatment exper leads unfavorable events occurring 75% times compared control treatment contro. Therefore, set hr1 = 0.75. now, assume probabilities fixed independent prior distribution. Thus, set fixed = TRUE. d2min d2max specify minimal maximal number events phase II trial. package search optimal sample size within region. now, want program search optimal sample size interval 20 400 events. addition, tell program search region steps four participants time setting stepd2 = 4. hrgomin hrgomax specify minimal maximal threshold value go/-go decision rule terms negative logarithm hazard ratio. package search optimal threshold value within region. now, want program search interval 0.7 0.9 going steps stephrgo = 0.01. Note, lower bound decision rule set represents smallest size treatment effect observed phase II allowing go phase III, can used model minimally clinically relevant effect size. Moreover, note interval specified corresponds set \\(\\{-\\log(0.9), ..., -\\log(0.7)\\}\\). xi2 xi3 correspond event rates phase II phase III. calculating optimal number events d2 d3, event rates used calculate optimal sample sizes phase II III. assume event rates 0.7 phase, indicating 70 events correspond optimal sample size 100, respectively. c02 c03 fixed costs phase II phase III respectively. set phase II costs 100 phase III costs 150 (\\(10^5\\)$), .e fixed costs 10 000 000$ phase II 15 000 000$ phase III. Note currency input values matter, input value c02 15 also interpreted fixed costs 1 500 000€ necessary. c2 c3 costs phase II phase III per patient. set 0.75 phase II 0.1 phase III. , values given \\(10^5\\)$, .e per patient costs 75 000$ phase II 100 000$ phase III. b1, b2 b3 expected small, medium large benefit categories successfully launching treatment market effect size category \\(10^5\\)$. define small benefit 1000, medium benefit 2000, large benefit 3000. effect size categories directly correspond treatment effect, .e. treatment effect 1 0.95 (terms risk ratio) small treatment effect, hence yielding expected benefits drug development program 100 000 000$. alpha specified significance level. set alpha = 0.05. 1 - beta minimal power require drug development program. set beta = 0.1, meaning require power 90%. setting normally distributed outcomes, treatment effect may fixed (example) follows prior distribution (see Fixed Prior). Note, case using prior distribution, following input parameters specified, differ setting normally distributed outcomes: * Instead parameters in1 in2 “amount information”, use parameters id1 id2 represent “number events”. refer number events observed study determine treatment effect. study 210 events observed, value id1 set 420. assume assume study research group 420 events observed, parameter value id2 420. * Moreover, need truncation values, .e. values parameters b. Furthermore, options adapt program specific needs also available setting (see Paramters). Now defined parameters needed example, ready feed package. use function optimal_tte(), calculates optimal sample size optimal threshold value time--event outcome variable.","code":"res <- optimal_tte(w = 0.3,                               # define parameters for prior    hr1 = 0.75, hr2 = 0.8, id1 = 210, id2 = 420,           # (https://web.imbi.uni-heidelberg.de/prior/)    d2min = 20, d2max = 400, stepd2 = 5,                   # define optimization set for d2    hrgomin = 0.7, hrgomax = 0.9, stephrgo = 0.01,         # define optimization set for HRgo    alpha = 0.05, beta = 0.1, xi2 = 0.7, xi3 = 0.7,        # drug development planning parameters    c2 = 0.75, c3 = 1, c02 = 100, c03 = 150,               # define fixed and variable costs    K = Inf, N = Inf, S = -Inf,                            # set constraints    steps1 = 1,  stepm1 = 0.95, stepl1 = 0.85,             # define boundary for  effect size categories    b1 = 1000, b2 = 2000, b3 = 3000,                       # define expected benefits    gamma = 0,                                             # assume different/same population structures     fixed = TRUE,                                          # choose if  effects are fixed or random    skipII = FALSE,                                        # more parameters    num_cl = 1)"},{"path":"https://sterniii3.github.io/drugdevelopR/articles/Time-to-event_outcomes.html","id":"interpreting-the-output","dir":"Articles","previous_headings":"Applying the package to the example","what":"Interpreting the output","title":"Time-to-event Outcome Variables","text":"setting input parameters running function, let’s take look output program. program returns total sixteen output values input paramters. now, look important ones: res$d2 optimal number events phase II res$d3 resulting number events phase III. see optimal scenario requires 210 events phase II 441 events phase III, correspond 300 participants phase II 630 phase III. res$HRgo optimal threshold value go/-go decision rule. see need hazard ratio less 0.88 phase II order proceed phase III. res$u expected utility program optimal sample size threshold value. case amounts 584.57, .e expected utility 58 457 000$.","code":"res #>        u HRgo  d2  d3   d  n2  n3   n  pgo sProg   hr   K   N    S  K2  K3 #> 1 584.57 0.88 210 441 651 300 630 930 0.88  0.71 0.75 Inf Inf -Inf 325 761 #>   sProg1 sProg2 sProg3 steps1 stepm1 stepl1 alpha beta xi2 xi3 c02 c03   c2 c3 #> 1   0.09    0.3   0.33      1   0.95   0.85  0.05  0.1 0.7 0.7 100 150 0.75  1 #>     b1   b2   b3 gamma #> 1 1000 2000 3000     0"},{"path":"https://sterniii3.github.io/drugdevelopR/articles/Time-to-event_outcomes.html","id":"where-to-go-from-here","dir":"Articles","previous_headings":"","what":"Where to go from here","title":"Time-to-event Outcome Variables","text":"article introduced setting, outcome time--event variable. information use package, see: Introduction drugdevelopR: See package works basic example. Different outcomes: Apply binary endpoints. Interpreting rest output: Obtain details drug development program. Fixed prior: Model assumed treatment effect prior distribution. parameters: Define custom effect size categories. Put constraints optimization defining maximum costs, total expected sample size program minimum expected probability successful program. Define expected difference treatment effect phase II III. Skip phase II. Complex drug development programs: Adapt situations biased effect estimators, multiple phase III trials, multi-arm trials, multiple endpoints. Parallel computing: faster calculating optimum using parallel computing.","code":""},{"path":"https://sterniii3.github.io/drugdevelopR/articles/introduction-to-drugdevelopR.html","id":"the-example-setting","dir":"Articles","previous_headings":"","what":"The example setting","title":"Introduction to planning phase II and phase III trials with drugdevelopR","text":"Suppose developing new tumor treatment, exper. patient variable want investigate difference tumor width one-year visit baseline. normally distributed outcome variable. Within drug development program, compare experimental treatment exper control treatment contro. Building available data, expect mean tumor difference amounts \\(20±1 \\mathrm{mm}\\) contro \\(15±1 \\mathrm{mm}\\) exper. Furthermore, variance assumed 8. treatment effect given standardized difference mean (\\(\\Delta=\\frac{\\mu_{contro} - \\mu_{exper}}{\\sigma}\\)). Thus, obtain standardized treatment difference \\(\\Delta_1 = 0.625\\).","code":""},{"path":"https://sterniii3.github.io/drugdevelopR/articles/introduction-to-drugdevelopR.html","id":"applying-the-package-to-the-example","dir":"Articles","previous_headings":"","what":"Applying the package to the example","title":"Introduction to planning phase II and phase III trials with drugdevelopR","text":"installing package according installation instructions, can load using following code:","code":"library(drugdevelopR) #> Loading required package: mvtnorm #> Loading required package: doParallel #> Loading required package: foreach #> Loading required package: iterators #> Loading required package: parallel #> Loading required package: msm #> Loading required package: cubature #> Loading required package: MASS"},{"path":"https://sterniii3.github.io/drugdevelopR/articles/introduction-to-drugdevelopR.html","id":"defining-all-necessary-parameters","dir":"Articles","previous_headings":"Applying the package to the example","what":"Defining all necessary parameters","title":"Introduction to planning phase II and phase III trials with drugdevelopR","text":"order apply package setting example, need specify following parameters: Delta1 assumed true treatment effect, defined standardized difference means treatment arm control arm. use value \\(\\Delta_1 = 0.625\\) defined . now, assume treatment effects fixed independent prior distribution. Thus, set fixed = TRUE. n2min n2max specify minimal maximal number participants phase II trial. package search optimal sample size within region. now, want program search optimal sample size interval 20 400 participants. addition, tell program search region steps four participants time setting stepn2 = 4. kappamin kappamax specify minimal maximal threshold value go/-go decision rule. package search optimal threshold value within region. now, want program search interval 0.02 0.2 going steps stepkappa = 0.02. Note, lower bound decision rule set represents smallest size treatment effect observed phase II allowing go phase III, can used model minimally clinically relevant effect size. c02 c03 fixed costs phase II phase III respectively. set phase II costs 15 phase III costs 20 (\\(10^5\\)$), .e fixed costs 1 500 000$ phase II 2 000 000$ phase III. Note currency input values matter, input value c02 15 also interpreted fixed costs 1 500 000€ necessary. c2 c3 costs phase II phase III per patient. set 0.675 phase II 0.72 phase III. , values given \\(10^5\\)$, .e per patient costs 67 500$ phase II 72 000$ phase III. b1, b2 b3 expected small, medium large benefit categories successfully launching treatment market effect size category \\(10^5\\)$. define small benefit 3000, medium benefit 8000, large benefit 10000. effect size categories directly correspond treatment effect, .e. treatment effect 0 0.5 (standardized differences mean) small treatment effect, hence yielding expected benefits drug development program 300 000 000$. alpha specified significance level. set alpha = 0.05. 1 - beta minimal power require drug development program. set beta = 0.1, meaning require power 90%. parameters: advanced settings, need pre-specify even parameters. now, can set remaining parameters NULL. use explained vignette parameters vigentte prior distributions. Now defined parameters needed example, ready feed package. use function optimal_normal(), calculates optimal sample size optimal threshold value normally distributed outcome variable.","code":"res <- optimal_normal(Delta1 = 0.625, fixed = TRUE, # treatment effect                        n2min = 20, n2max = 400, # sample size region                        stepn2 = 4, # sample size step size                        kappamin = 0.02, kappamax = 0.2, # threshold region                        stepkappa = 0.02, # threshold step size                        c2 = 0.675, c3 = 0.72, # maximal total trial costs                        c02 = 15, c03 = 20, # maximal per-patient costs                        b1 = 3000, b2 = 8000, b3 = 10000, # gains for patients                        alpha = 0.05, # significance level                        beta = 0.1, # 1 - power                        Delta2 = NULL, w = NULL, in1 = NULL, in2 = NULL,                         a = NULL,b = NULL) # setting all unneeded parameters to NULL"},{"path":"https://sterniii3.github.io/drugdevelopR/articles/introduction-to-drugdevelopR.html","id":"interpreting-the-output","dir":"Articles","previous_headings":"Applying the package to the example","what":"Interpreting the output","title":"Introduction to planning phase II and phase III trials with drugdevelopR","text":"setting input parameters running function, let’s take look output program. program returns total thirteen values input values. now, look important ones: res$n2 optimal sample size phase II res$n3 resulting sample size phase III. see optimal scenario requires 84 participants phase II 166 participants phase III. res$Kappa optimal threshold value go/-go decision rule. see need treatment effect 0.06 phase II order proceed phase III. res$u expected utility program optimal sample size threshold value. case amounts 3259.83, .e expected utility 325 983 000$.","code":"res #>         u Kappa n2  n3   n pgo sProg Delta   K K2  K3 sProg1 sProg2 sProg3 #> 1 3259.83  0.06 84 166 250   1  0.85 0.625 Inf 72 139   0.68   0.17   0.01 #>   steps1 stepm1 stepl1 alpha beta c02 c03    c2   c3   b1   b2    b3 gamma #> 1      0    0.5    0.8  0.05  0.1  15  20 0.675 0.72 3000 8000 10000     0"},{"path":"https://sterniii3.github.io/drugdevelopR/articles/introduction-to-drugdevelopR.html","id":"where-to-go-from-here","dir":"Articles","previous_headings":"","what":"Where to go from here","title":"Introduction to planning phase II and phase III trials with drugdevelopR","text":"tutorial covered drugdevelopR’s basic setting. Luckily, package’s functionality extends multitude different settings. example doesn’t suit needs, can adapt specific setting: Different outcomes: Apply binary endpoints time--event endpoints. Interpreting rest output: Obtain details drug development program. Fixed prior: Model assumed treatment effect prior distribution. parameters: Define custom effect size categories. Put constraints optimization defining maximum costs, total expected sample size program minimum expected probability successful program. Define expected difference treatment effect phase II III. Skip phase II. Complex drug development programs: Adapt situations biased effect estimators, multiple phase III trials, multi-arm trials, multiple endpoints. Parallel computing: faster calculating optimum using parallel computing.","code":""},{"path":"https://sterniii3.github.io/drugdevelopR/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Stella Preussler. Author, maintainer.","code":""},{"path":"https://sterniii3.github.io/drugdevelopR/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Preussler S (2023). drugdevelopR: Utility based optimal phase II/III drug development planning. https://github.com/Sterniii3/drugdevelopR, https://sterniii3.github.io/drugdevelopR/.","code":"@Manual{,   title = {drugdevelopR: Utility based optimal phase II/III drug development planning},   author = {Stella Preussler},   year = {2023},   note = {https://github.com/Sterniii3/drugdevelopR, https://sterniii3.github.io/drugdevelopR/}, }"},{"path":"https://sterniii3.github.io/drugdevelopR/index.html","id":"drugdevelopr-utility-based-optimal-phase-iiiii-drug-development-planning","dir":"","previous_headings":"","what":"Utility based optimal phase II/III drug development planning ","title":"Utility based optimal phase II/III drug development planning ","text":"drugdevelopR package enables plan phase II/III drug development programs optimal sample size allocation go/-go decision rules. assumed true treatment effects can fixed modelled prior distribution. corresponding R Shiny application graphic user interface package thus makes accessible users without prior knowledge R. Fast computing made possible parallel programming. theoretical foundations package laid dissertation “Integrated Planning Pilot Subsequent Confirmatory Study Clinical Research – Finding Optimal Designs Utility-Based Framework” Stella Erdmann Institute Medical Biometry University Heidelberg. package webpage, supply full documentation functions well tutorial getting started drugdevelopR.","code":""},{"path":"https://sterniii3.github.io/drugdevelopR/index.html","id":"installation","dir":"","previous_headings":"","what":"Installation","title":"Utility based optimal phase II/III drug development planning ","text":"Install development version package directly GitHub using following code: access drugdevelopR App via https://web.imbi.uni-heidelberg.de/drugdevelopR/.","code":"if(!require(devtools)) { install.packages(\"devtools\"); require(devtools)}  devtools::install_github(\"Sterniii3/drugdevelopR\")"},{"path":"https://sterniii3.github.io/drugdevelopR/index.html","id":"usage","dir":"","previous_headings":"","what":"Usage","title":"Utility based optimal phase II/III drug development planning ","text":"basic example applying drugdevelopR drug development program normally distributed outcome:","code":"library(drugdevelopR) #> Lade nötiges Paket: mvtnorm #> Lade nötiges Paket: doParallel #> Lade nötiges Paket: foreach #> Lade nötiges Paket: iterators #> Lade nötiges Paket: parallel #> Lade nötiges Paket: msm #> Lade nötiges Paket: cubature #> Lade nötiges Paket: MASS res <- optimal_normal(Delta1 = 0.625, Delta2 = 0.8, fixed = FALSE, # treatment effect                       n2min = 20, n2max = 400, # sample size region                       stepn2 = 4, # sample size step size                       kappamin = 0.02, kappamax = 0.2, # threshold region                       stepkappa = 0.02, # threshold step size                       c2 = 0.675, c3 = 0.72, # maximal total trial costs                       c02 = 15, c03 = 20, # maximal per-patient costs                       b1 = 3000, b2 = 8000, b3 = 10000, # gains for patients                       alpha = 0.05, # significance level                       beta = 0.1, # 1 - power                       w = 0.6, in1 = 300, in2 = 600, # weight and amount of information                       a = 0.25, b = 0.75) # truncation values #> Optimization progress: #>  #>   |                                                                              |                                                                      |   0%  |                                                                              |=======                                                               |  10%  |                                                                              |==============                                                        |  20%  |                                                                              |=====================                                                 |  30%  |                                                                              |============================                                          |  40%  |                                                                              |===================================                                   |  50%  |                                                                              |==========================================                            |  60%  |                                                                              |=================================================                     |  70%  |                                                                              |========================================================              |  80%  |                                                                              |===============================================================       |  90%  |                                                                              |======================================================================| 100% #>  #>  #> Optimization result: #>  #>         u Kappa n2  n3   n  pgo sProg   w Delta1 Delta2 in1 in2    a    b   K #> 1 3392.88  0.06 84 158 242 0.99  0.86 0.6  0.625    0.8 300 600 0.25 0.75 Inf #>   K2  K3 sProg1 sProg2 sProg3 steps1 stepm1 stepl1 alpha beta c02 c03    c2 #> 1 72 134   0.65   0.19   0.01      0    0.5    0.8  0.05  0.1  15  20 0.675 #>     c3   b1   b2    b3 gamma #> 1 0.72 3000 8000 10000     0"},{"path":"https://sterniii3.github.io/drugdevelopR/index.html","id":"drugdevelopr-functions","dir":"","previous_headings":"","what":"drugdevelopR functions","title":"Utility based optimal phase II/III drug development planning ","text":"drugdevelopR package provides functions optimal_tte, optimal_binary, optimal_normal plan optimal phase II/III drug development programs time--event (treatment effect measured hazard ratio (HR)), binary (treatment effect measured risk ratio (RR)), normally distributed (treatment effect measured standardized difference means (Delta)) endpoints, treatment effect modelled prior. Optimal phase II/III drug development planning fixed treatment effects can done help R Shiny application basic. Extensions basic setting : optimal planning programs including methods discounting phase II results (function: optimal_bias, App: bias), optimal planning programs several phase III trials (function: optimal_multitrial, App: multitrial) optimal planning programs multiple arms (function: optimal_multiarm, App: multiarm).","code":""},{"path":"https://sterniii3.github.io/drugdevelopR/reference/EPsProg23.html","id":null,"dir":"Reference","previous_headings":"","what":"Expected probability of a successful program deciding between two or three phase III trials in a time-to-event setting — EPsProg23","title":"Expected probability of a successful program deciding between two or three phase III trials in a time-to-event setting — EPsProg23","text":"function EPsProg23() calculates expected probability successful program time--event setting. function follows special decision rule order determine whether two three phase III trials conducted. First, two phase III trials performed. Depending success, decision third phase III trial made: trials successful, third phase III trial conducted. one two trials successful trial treatment effect points direction, third phase III trial conducted sample size N3 = N3(ymin), depends assumed minimal clinical relevant effect (ymin). third trial significant level alpha one two trials successful treatment effect points opposite direction none two trials successful, third trial performed drug development development program successful. utility function, lead utility -9999.","code":""},{"path":"https://sterniii3.github.io/drugdevelopR/reference/EPsProg23.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Expected probability of a successful program deciding between two or three phase III trials in a time-to-event setting — EPsProg23","text":"","code":"EPsProg23(HRgo, d2, alpha, beta, w, hr1, hr2, id1, id2, case, size, ymin)"},{"path":"https://sterniii3.github.io/drugdevelopR/reference/EPsProg23.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Expected probability of a successful program deciding between two or three phase III trials in a time-to-event setting — EPsProg23","text":"HRgo threshold value go/-go decision rule d2 total number events phase II alpha significance level beta 1-beta power calculation sample size phase III w weight mixture prior distribution hr1 first assumed true treatment effect HR scale prior distribution hr2 second assumed true treatment effect HR scale prior distribution id1 amount information hr1 terms number events id2 amount information hr2 terms number events case choose case: \"least 1, 2 3 significant trials needed approval\" size size category \"small\", \"medium\" \"large\" ymin assumed minimal clinical relevant effect","code":""},{"path":"https://sterniii3.github.io/drugdevelopR/reference/EPsProg23.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Expected probability of a successful program deciding between two or three phase III trials in a time-to-event setting — EPsProg23","text":"output function EPsProg23() expected probability successful program.","code":""},{"path":"https://sterniii3.github.io/drugdevelopR/reference/EPsProg23.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Expected probability of a successful program deciding between two or three phase III trials in a time-to-event setting — EPsProg23","text":"","code":"res <- EPsProg23(HRgo = 0.8, d2 = 50,  alpha = 0.025, beta = 0.1,                                    w = 0.3, hr1 =  0.69, hr2 = 0.81,                                    id1 = 280, id2 = 420, case = 2, size = \"small\",                                   ymin = 0.5)"},{"path":"https://sterniii3.github.io/drugdevelopR/reference/EPsProg23_binary.html","id":null,"dir":"Reference","previous_headings":"","what":"Expected probability of a successful program deciding between two or three phase III trials for a binary distributed outcome — EPsProg23_binary","title":"Expected probability of a successful program deciding between two or three phase III trials for a binary distributed outcome — EPsProg23_binary","text":"function EPsProg23_binary() calculates expected probability successful program normally distributed outcome. function follows special decision rule order determine whether two three phase III trials conducted. First, two phase III trials performed. Depending success, decision third phase III trial made: trials successful, third phase III trial conducted. one two trials successful trial treatment effect points direction, third phase III trial conducted sample size N3 = N3(ymin), depends assumed minimal clinical relevant effect (ymin). third trial significant level alpha one two trials successful treatment effect points opposite direction none two trials successful, third trial performed drug development development program successful. utility function, lead utility -9999.","code":""},{"path":"https://sterniii3.github.io/drugdevelopR/reference/EPsProg23_binary.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Expected probability of a successful program deciding between two or three phase III trials for a binary distributed outcome — EPsProg23_binary","text":"","code":"EPsProg23_binary(   RRgo,   n2,   alpha,   beta,   w,   p0,   p11,   p12,   in1,   in2,   case,   size,   ymin )"},{"path":"https://sterniii3.github.io/drugdevelopR/reference/EPsProg23_binary.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Expected probability of a successful program deciding between two or three phase III trials for a binary distributed outcome — EPsProg23_binary","text":"RRgo threshold value go/-go decision rule n2 total sample size phase II; must even number alpha significance level beta 1-beta power calculation sample size phase III w weight mixture prior distribution p0 assumed true rate control group p11 assumed true rate treatment group p12 assumed true rate treatment group in1 amount information p11 terms sample size in2 amount information p12 terms sample size case choose case: \"least 1, 2 3 significant trials needed approval\" size size category \"small\", \"medium\" \"large\" ymin assumed minimal clinical relevant effect","code":""},{"path":"https://sterniii3.github.io/drugdevelopR/reference/EPsProg23_binary.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Expected probability of a successful program deciding between two or three phase III trials for a binary distributed outcome — EPsProg23_binary","text":"output function EPsProg23_binary() expected probability successful program.","code":""},{"path":"https://sterniii3.github.io/drugdevelopR/reference/EPsProg23_binary.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Expected probability of a successful program deciding between two or three phase III trials for a binary distributed outcome — EPsProg23_binary","text":"","code":"res <- EPsProg23_binary(RRgo = 0.8, n2 = 50,  alpha = 0.025, beta = 0.1,                                   w = 0.6,  p0 = 0.3, p11 =  0.3, p12 = 0.5,                                   in1 = 300, in2 = 600, case = 2, size = \"small\",                                  ymin = 0.5)"},{"path":"https://sterniii3.github.io/drugdevelopR/reference/EPsProg23_normal.html","id":null,"dir":"Reference","previous_headings":"","what":"Expected probability of a successful program deciding between two or three phase III trials for a normally distributed outcome — EPsProg23_normal","title":"Expected probability of a successful program deciding between two or three phase III trials for a normally distributed outcome — EPsProg23_normal","text":"function EPsProg23_normal() calculates expected probability successful program normally distributed outcome. function follows special decision rule order determine whether two three phase III trials conducted. First, two phase III trials performed. Depending success, decision third phase III trial made: trials successful, third phase III trial conducted. one two trials successful trial treatment effect points direction, third phase III trial conducted sample size N3 = N3(ymin), depends assumed minimal clinical relevant effect (ymin). third trial significant level alpha one two trials successful treatment effect points opposite direction none two trials successful, third trial performed drug development development program successful. utility function, lead utility -9999.","code":""},{"path":"https://sterniii3.github.io/drugdevelopR/reference/EPsProg23_normal.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Expected probability of a successful program deciding between two or three phase III trials for a normally distributed outcome — EPsProg23_normal","text":"","code":"EPsProg23_normal(   kappa,   n2,   alpha,   beta,   w,   Delta1,   Delta2,   in1,   in2,   a,   b,   case,   size,   ymin )"},{"path":"https://sterniii3.github.io/drugdevelopR/reference/EPsProg23_normal.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Expected probability of a successful program deciding between two or three phase III trials for a normally distributed outcome — EPsProg23_normal","text":"kappa threshold value go/-go decision rule n2 total sample size phase II; must even number alpha significance level beta type II error rate; means 1 - beta power calculating sample size phase III w weight mixture prior distribution Delta1 assumed true treatment effect standardized difference means Delta2 assumed true treatment effect standardized difference means in1 amount information Delta1 terms sample size in2 amount information Delta2 terms sample size lower boundary truncation b upper boundary truncation case number significant trials needed approval; possible values 2 3 function size effect size category; possible values \"small\", \"medium\", \"large\" \"\" ymin assumed minimal clinical relevant effect","code":""},{"path":"https://sterniii3.github.io/drugdevelopR/reference/EPsProg23_normal.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Expected probability of a successful program deciding between two or three phase III trials for a normally distributed outcome — EPsProg23_normal","text":"output function EPsProg23_normal() expected probability successful program.","code":""},{"path":"https://sterniii3.github.io/drugdevelopR/reference/EPsProg23_normal.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Expected probability of a successful program deciding between two or three phase III trials for a normally distributed outcome — EPsProg23_normal","text":"","code":"res <- EPsProg23_normal(kappa = 0.1, n2 = 50, alpha = 0.025, beta = 0.1, w = 0.3,                                  Delta1 = 0.375, Delta2 = 0.625, in1 = 300, in2 = 600,                                   a = 0.25, b = 0.75,                                   case = 2, size = \"small\", ymin = 0.5)"},{"path":"https://sterniii3.github.io/drugdevelopR/reference/EPsProg_bias.html","id":null,"dir":"Reference","previous_headings":"","what":"Expected probability of a successful program for bias adjustment programs with time-to-event outcomes — EPsProg_bias","title":"Expected probability of a successful program for bias adjustment programs with time-to-event outcomes — EPsProg_bias","text":"discount overoptimistic results phase II calculating optimal sample size phase III, necessary use following functions, describe specific case: EPsProg_L(): calculates expected probability successful additive adjustment factor (.e adjust lower bound one-sided confidence interval), however go-decision affected bias adjustment EPsProg_L2(): calculates expected probability successful additive adjustment factor (.e adjust lower bound one-sided confidence interval) go-decision also affected bias adjustment EPsProg_R(): calculates expected probability successful multiplicative adjustment factor (.e. use estimate retention factor), however go-decision affected bias adjustment EPsProg_R2(): calculates expected probability successful multiplicative adjustment factor (.e. use estimate retention factor) go-decision also affected bias adjustment","code":""},{"path":"https://sterniii3.github.io/drugdevelopR/reference/EPsProg_bias.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Expected probability of a successful program for bias adjustment programs with time-to-event outcomes — EPsProg_bias","text":"","code":"EPsProg_L(   HRgo,   d2,   Adj,   alpha,   beta,   step1,   step2,   w,   hr1,   hr2,   id1,   id2,   fixed )  EPsProg_L2(   HRgo,   d2,   Adj,   alpha,   beta,   step1,   step2,   w,   hr1,   hr2,   id1,   id2,   fixed )  EPsProg_R(   HRgo,   d2,   Adj,   alpha,   beta,   step1,   step2,   w,   hr1,   hr2,   id1,   id2,   fixed )  EPsProg_R2(   HRgo,   d2,   Adj,   alpha,   beta,   step1,   step2,   w,   hr1,   hr2,   id1,   id2,   fixed )"},{"path":"https://sterniii3.github.io/drugdevelopR/reference/EPsProg_bias.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Expected probability of a successful program for bias adjustment programs with time-to-event outcomes — EPsProg_bias","text":"HRgo threshold value go/-go decision rule d2 total events phase II; must even number Adj adjustment parameter alpha significance level beta 1-beta power calculation sample size phase III step1 lower boundary effect size step2 upper boundary effect size w weight mixture prior distribution hr1 first assumed true treatment effect HR scale prior distribution hr2 second assumed true treatment effect HR scale prior distribution id1 amount information hr1 terms number events id2 amount information hr2 terms number events fixed choose true treatment effects fixed random, TRUE hr1 used fixed effect","code":""},{"path":"https://sterniii3.github.io/drugdevelopR/reference/EPsProg_bias.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Expected probability of a successful program for bias adjustment programs with time-to-event outcomes — EPsProg_bias","text":"output functions EPsProg_L(), EPsProg_L2(), EPsProg_R() EPsProg_R2() expected probability successful program.","code":""},{"path":"https://sterniii3.github.io/drugdevelopR/reference/EPsProg_bias.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Expected probability of a successful program for bias adjustment programs with time-to-event outcomes — EPsProg_bias","text":"","code":"res <- EPsProg_L(HRgo = 0.8, d2 = 50, Adj = 0.4,                             alpha = 0.025, beta = 0.1,                             step1 = 1, step2 = 0.95,                             w = 0.3, hr1 = 0.69, hr2 = 0.81,                            id1 = 280, id2 = 420, fixed = FALSE)           res <- EPsProg_L2(HRgo = 0.8, d2 = 50, Adj = 0.4,                             alpha = 0.025, beta = 0.1,                             step1 = 1, step2 = 0.95,                             w = 0.3, hr1 = 0.69, hr2 = 0.81,                            id1 = 280, id2 = 420, fixed = FALSE)           res <- EPsProg_R(HRgo = 0.8, d2 = 50, Adj = 0.9,                             alpha = 0.025, beta = 0.1,                             step1 = 1, step2 = 0.95,                             w = 0.3, hr1 = 0.69, hr2 = 0.81,                            id1 = 280, id2 = 420, fixed = FALSE)           res <- EPsProg_R2(HRgo = 0.8, d2 = 50, Adj = 0.9,                             alpha = 0.025, beta = 0.1,                             step1 = 1, step2 = 0.95,                             w = 0.3, hr1 = 0.69, hr2 = 0.81,                            id1 = 280, id2 = 420, fixed = FALSE)"},{"path":"https://sterniii3.github.io/drugdevelopR/reference/EPsProg_bias_binary.html","id":null,"dir":"Reference","previous_headings":"","what":"Expected probability of a successful program for bias adjustment programs with binary distributed outcomes — EPsProg_bias_binary","title":"Expected probability of a successful program for bias adjustment programs with binary distributed outcomes — EPsProg_bias_binary","text":"discount overoptimistic results phase II calculating optimal sample size phase III, necessary use following functions, describe specific case: EPsProg_binary_L(): calculates expected probability successful additive adjustment factor (.e adjust lower bound one-sided confidence interval), however go-decision affected bias adjustment EPsProg_binary_L2(): calculates expected probability successful additive adjustment factor (.e adjust lower bound one-sided confidence interval) go-decision also affected bias adjustment EPsProg_binary_R(): calculates expected probability successful multiplicative adjustment factor (.e. use estimate retention factor), however go-decision affected bias adjustment EPsProg_binary_R2(): calculates expected probability successful multiplicative adjustment factor (.e. use estimate retention factor) go-decision also affected bias adjustment","code":""},{"path":"https://sterniii3.github.io/drugdevelopR/reference/EPsProg_bias_binary.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Expected probability of a successful program for bias adjustment programs with binary distributed outcomes — EPsProg_bias_binary","text":"","code":"EPsProg_binary_L(   RRgo,   n2,   Adj,   alpha,   beta,   step1,   step2,   p0,   w,   p11,   p12,   in1,   in2,   fixed )  EPsProg_binary_L2(   RRgo,   n2,   Adj,   alpha,   beta,   step1,   step2,   p0,   w,   p11,   p12,   in1,   in2,   fixed )  EPsProg_binary_R(   RRgo,   n2,   Adj,   alpha,   beta,   step1,   step2,   p0,   w,   p11,   p12,   in1,   in2,   fixed )  EPsProg_binary_R2(   RRgo,   n2,   Adj,   alpha,   beta,   step1,   step2,   p0,   w,   p11,   p12,   in1,   in2,   fixed )"},{"path":"https://sterniii3.github.io/drugdevelopR/reference/EPsProg_bias_binary.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Expected probability of a successful program for bias adjustment programs with binary distributed outcomes — EPsProg_bias_binary","text":"RRgo threshold value go/-go decision rule n2 total sample size phase II; must even number Adj adjustment parameter alpha significance level beta 1-beta power calculation sample size phase III step1 lower boundary effect size step2 upper boundary effect size p0 assumed true rate control group w weight mixture prior distribution p11 assumed true rate treatment group p12 assumed true rate treatment group in1 amount information p11 terms sample size in2 amount information p12 terms sample size fixed choose true treatment effects fixed random, TRUE p11 used fixed effect","code":""},{"path":"https://sterniii3.github.io/drugdevelopR/reference/EPsProg_bias_binary.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Expected probability of a successful program for bias adjustment programs with binary distributed outcomes — EPsProg_bias_binary","text":"output functions EPsProg_binary_L(), EPsProg_binary_L2(), EPsProg_binary_R() EPsProg_binary_R2() expected probability successful program.","code":""},{"path":"https://sterniii3.github.io/drugdevelopR/reference/EPsProg_bias_binary.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Expected probability of a successful program for bias adjustment programs with binary distributed outcomes — EPsProg_bias_binary","text":"","code":"res <- EPsProg_binary_L(RRgo = 0.8, n2 = 50, Adj = 0,                                   alpha = 0.025, beta = 0.1,                                   step1 = 1, step2 = 0.95, p0 = 0.6,  w = 0.3,                                  p11 =  0.3, p12 = 0.5, in1 = 300, in2 = 600,                                   fixed = FALSE)           res <- EPsProg_binary_L2(RRgo = 0.8, n2 = 50, Adj = 0,                                   alpha = 0.025, beta = 0.1,                                   step1 = 1, step2 = 0.95, p0 = 0.6,  w = 0.3,                                  p11 =  0.3, p12 = 0.5, in1 = 300, in2 = 600,                                   fixed = FALSE)           res <- EPsProg_binary_R(RRgo = 0.8, n2 = 50, Adj = 1,                                   alpha = 0.025, beta = 0.1,                                   step1 = 1, step2 = 0.95, p0 = 0.6,  w = 0.3,                                  p11 =  0.3, p12 = 0.5, in1 = 300, in2 = 600,                                   fixed = FALSE)           res <- EPsProg_binary_R2(RRgo = 0.8, n2 = 50, Adj = 1,                                   alpha = 0.025, beta = 0.1,                                   step1 = 1, step2 = 0.95, p0 = 0.6,  w = 0.3,                                  p11 =  0.3, p12 = 0.5, in1 = 300, in2 = 600,                                   fixed = FALSE)"},{"path":"https://sterniii3.github.io/drugdevelopR/reference/EPsProg_bias_normal.html","id":null,"dir":"Reference","previous_headings":"","what":"Expected probability of a successful program for bias adjustment programs with normally distributed outcomes — EPsProg_bias_normal","title":"Expected probability of a successful program for bias adjustment programs with normally distributed outcomes — EPsProg_bias_normal","text":"discount overoptimistic results phase II calculating optimal sample size phase III, necessary use following functions, describe specific case: EPsProg_normal_L(): calculates expected probability successful additive adjustment factor (.e adjust lower bound one-sided confidence interval), however go-decision affected bias adjustment EPsProg_normal_L2(): calculates expected probability successful additive adjustment factor (.e adjust lower bound one-sided confidence interval) go-decision also affected bias adjustment EPsProg_normal_R(): calculates expected probability successful multiplicative adjustment factor (.e. use estimate retention factor), however go-decision affected bias adjustment EPsProg_normal_R2(): calculates expected probability successful multiplicative adjustment factor (.e. use estimate retention factor) go-decision also affected bias adjustment","code":""},{"path":"https://sterniii3.github.io/drugdevelopR/reference/EPsProg_bias_normal.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Expected probability of a successful program for bias adjustment programs with normally distributed outcomes — EPsProg_bias_normal","text":"","code":"EPsProg_normal_L(   kappa,   n2,   Adj,   alpha,   beta,   step1,   step2,   w,   Delta1,   Delta2,   in1,   in2,   a,   b,   fixed )  EPsProg_normal_L2(   kappa,   n2,   Adj,   alpha,   beta,   step1,   step2,   w,   Delta1,   Delta2,   in1,   in2,   a,   b,   fixed )  EPsProg_normal_R(   kappa,   n2,   Adj,   alpha,   beta,   step1,   step2,   w,   Delta1,   Delta2,   in1,   in2,   a,   b,   fixed )  EPsProg_normal_R2(   kappa,   n2,   Adj,   alpha,   beta,   step1,   step2,   w,   Delta1,   Delta2,   in1,   in2,   a,   b,   fixed )"},{"path":"https://sterniii3.github.io/drugdevelopR/reference/EPsProg_bias_normal.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Expected probability of a successful program for bias adjustment programs with normally distributed outcomes — EPsProg_bias_normal","text":"kappa threshold value go/-go decision rule n2 total sample size phase II; must even number Adj adjustment parameter alpha significance level beta 1-beta power calculation sample size phase III step1 lower boundary effect size step2 upper boundary effect size w weight mixture prior distribution Delta1 assumed true treatment effect standardized difference means Delta2 assumed true treatment effect standardized difference means in1 amount information Delta1 terms sample size in2 amount information Delta2 terms sample size lower boundary truncation b upper boundary truncation fixed choose true treatment effects fixed random, TRUE Delta1 used fixed effect","code":""},{"path":"https://sterniii3.github.io/drugdevelopR/reference/EPsProg_bias_normal.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Expected probability of a successful program for bias adjustment programs with normally distributed outcomes — EPsProg_bias_normal","text":"output functions EPsProg_normal_L(), EPsProg_normal_L2(), EPsProg_normal_R() EPsProg_normal_R2() expected probability successful program.","code":""},{"path":"https://sterniii3.github.io/drugdevelopR/reference/EPsProg_bias_normal.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Expected probability of a successful program for bias adjustment programs with normally distributed outcomes — EPsProg_bias_normal","text":"","code":"res <- EPsProg_normal_L(kappa = 0.1, n2 = 50, Adj = 0,                                   alpha = 0.025, beta = 0.1, w = 0.3,                                  step1 = 0, step2 = 0.5,                                  Delta1 = 0.375, Delta2 = 0.625,                                   in1 = 300, in2 = 600,                                   a = 0.25, b = 0.75, fixed = FALSE)           res <- EPsProg_normal_L2(kappa = 0.1, n2 = 50, Adj = 0,                                   alpha = 0.025, beta = 0.1, w = 0.3,                                  step1 = 0, step2 = 0.5,                                  Delta1 = 0.375, Delta2 = 0.625,                                   in1 = 300, in2 = 600,                                   a = 0.25, b = 0.75, fixed = FALSE)           res <- EPsProg_normal_R(kappa = 0.1, n2 = 50, Adj = 1,                                   alpha = 0.025, beta = 0.1, w = 0.3,                                  step1 = 0, step2 = 0.5,                                  Delta1 = 0.375, Delta2 = 0.625,                                   in1 = 300, in2 = 600,                                   a = 0.25, b = 0.75, fixed = FALSE)           res <- EPsProg_normal_R2(kappa = 0.1, n2 = 50, Adj = 1,                                   alpha = 0.025, beta = 0.1, w = 0.3,                                  step1 = 0, step2 = 0.5,                                  Delta1 = 0.375, Delta2 = 0.625,                                   in1 = 300, in2 = 600,                                   a = 0.25, b = 0.75, fixed = FALSE)"},{"path":"https://sterniii3.github.io/drugdevelopR/reference/EPsProg_multiple_normal.html","id":null,"dir":"Reference","previous_headings":"","what":"Expected probability of a successful program for multiple endpoints and normally distributed outcomes — EPsProg_multiple_normal","title":"Expected probability of a successful program for multiple endpoints and normally distributed outcomes — EPsProg_multiple_normal","text":"function calculates probability drug development program successful. Successful defined endpoints showing statistically significant positive treatment effect phase III.","code":""},{"path":"https://sterniii3.github.io/drugdevelopR/reference/EPsProg_multiple_normal.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Expected probability of a successful program for multiple endpoints and normally distributed outcomes — EPsProg_multiple_normal","text":"","code":"EPsProg_multiple_normal(   kappa,   n2,   alpha,   beta,   Delta1,   Delta2,   sigma1,   sigma2,   step11,   step12,   step21,   step22,   in1,   in2,   fixed,   rho )"},{"path":"https://sterniii3.github.io/drugdevelopR/reference/EPsProg_multiple_normal.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Expected probability of a successful program for multiple endpoints and normally distributed outcomes — EPsProg_multiple_normal","text":"kappa threshold value go/-go decision rule; n2 total sample size phase II; must even number alpha significance level beta 1-beta power calculation sample size phase III Delta1 assumed true treatment effect standardized difference means Delta2 assumed true treatment effect standardized difference means sigma1 standard deviation first endpoint sigma2 standard deviation second endpoint step11 lower boundary effect size first endpoint step12 lower boundary effect size second endpoint step21 upper boundary effect size first endpoint step22 upper boundary effect size second endpoint in1 amount information Delta1 terms sample size in2 amount information Delta2 terms sample size fixed choose true treatment effects fixed random, TRUE Delta1 used fixed effect rho correlation two endpoints","code":""},{"path":"https://sterniii3.github.io/drugdevelopR/reference/EPsProg_multiple_normal.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Expected probability of a successful program for multiple endpoints and normally distributed outcomes — EPsProg_multiple_normal","text":"output function EPsProg_multiple_normal() expected probability successfull program, going phase III.","code":""},{"path":"https://sterniii3.github.io/drugdevelopR/reference/EPsProg_multiple_normal.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Expected probability of a successful program for multiple endpoints and normally distributed outcomes — EPsProg_multiple_normal","text":"","code":"res <- EPsProg_multiple_normal(kappa = 0.1, n2 = 50, alpha = 0.025, beta = 0.1,                                Delta1 = 0.375, Delta2 = 0.625, sigma1 = 8, sigma2 = 4,                                step11 = 0, step12 = 0, step21 = 0.5, step22 = 0.5,                                 in1 = 300, in2 = 600, fixed = TRUE, rho = 0.3)"},{"path":"https://sterniii3.github.io/drugdevelopR/reference/EPsProg_multiple_tte.html","id":null,"dir":"Reference","previous_headings":"","what":"Expected probability of a successful program for multiple endpoints in a time-to-event setting — EPsProg_multiple_tte","title":"Expected probability of a successful program for multiple endpoints in a time-to-event setting — EPsProg_multiple_tte","text":"function calculates probability drug development program successful. Successful defined least one endpoint showing statistically significant positive treatment effect phase III.","code":""},{"path":"https://sterniii3.github.io/drugdevelopR/reference/EPsProg_multiple_tte.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Expected probability of a successful program for multiple endpoints in a time-to-event setting — EPsProg_multiple_tte","text":"","code":"EPsProg_multiple_tte(   HRgo,   n2,   alpha,   beta,   ec,   hr1,   hr2,   id1,   id2,   step1,   step2,   fixed,   rho )"},{"path":"https://sterniii3.github.io/drugdevelopR/reference/EPsProg_multiple_tte.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Expected probability of a successful program for multiple endpoints in a time-to-event setting — EPsProg_multiple_tte","text":"HRgo threshold value go/-go decision rule; n2 total sample size phase II; must even number alpha significance level beta 1-beta power calculation sample size phase III ec control arm event rate phase II III hr1 assumed true treatment effect HR scale treatment 1 hr2 assumed true treatment effect HR scale treatment 2 id1 amount information hr1 terms sample size id2 amount information hr2 terms sample size step1 lower boundary effect size step2 upper boundary effect size fixed choose true treatment effects fixed random, TRUE hr1 used fixed effect rho correlation two endpoints","code":""},{"path":"https://sterniii3.github.io/drugdevelopR/reference/EPsProg_multiple_tte.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Expected probability of a successful program for multiple endpoints in a time-to-event setting — EPsProg_multiple_tte","text":"output function EPsProg_multiple_tte() expected probability successful program, going phase III.","code":""},{"path":"https://sterniii3.github.io/drugdevelopR/reference/EPsProg_multiple_tte.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Expected probability of a successful program for multiple endpoints in a time-to-event setting — EPsProg_multiple_tte","text":"","code":"res <- EPsProg_multiple_tte(HRgo = 0.8, n2 = 50, alpha = 0.025, beta = 0.1,                                ec = 1, hr1 = 0.75, hr2 = 0.80,                                id1 = 300, id2 = 600,                                 step1 = 1, step2 = 0.95,                                fixed = TRUE, rho = 0.3)"},{"path":"https://sterniii3.github.io/drugdevelopR/reference/EPsProg_multitrial.html","id":null,"dir":"Reference","previous_headings":"","what":"Expected probability of a successful program for multitrial programs in a time-to-event setting — EPsProg_multitrial","title":"Expected probability of a successful program for multitrial programs in a time-to-event setting — EPsProg_multitrial","text":"functions calculate expected probability successful program given parameters. function represents specific strategy, e.g. function EpsProg3() calculates expected probability three phase III trials performed. parameter case specifies many trials successful, .e. many trials show significantly relevant positive treatment effect.","code":""},{"path":"https://sterniii3.github.io/drugdevelopR/reference/EPsProg_multitrial.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Expected probability of a successful program for multitrial programs in a time-to-event setting — EPsProg_multitrial","text":"","code":"EPsProg2(HRgo, d2, alpha, beta, w, hr1, hr2, id1, id2, case, size, fixed)  EPsProg3(HRgo, d2, alpha, beta, w, hr1, hr2, id1, id2, case, size, fixed)  EPsProg4(HRgo, d2, alpha, beta, w, hr1, hr2, id1, id2, case, size, fixed)"},{"path":"https://sterniii3.github.io/drugdevelopR/reference/EPsProg_multitrial.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Expected probability of a successful program for multitrial programs in a time-to-event setting — EPsProg_multitrial","text":"HRgo threshold value go/-go decision rule d2 total number events phase II alpha significance level beta 1-beta power calculation sample size phase III w weight mixture prior distribution hr1 first assumed true treatment effect HR scale prior distribution hr2 second assumed true treatment effect HR scale prior distribution id1 amount information hr1 terms number events id2 amount information hr2 terms number events case choose case: \"least 1, 2 3 significant trials needed approval\" size size category \"small\", \"medium\" \"large\" fixed choose true treatment effects fixed random","code":""},{"path":"https://sterniii3.github.io/drugdevelopR/reference/EPsProg_multitrial.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Expected probability of a successful program for multitrial programs in a time-to-event setting — EPsProg_multitrial","text":"output function EPsProg2(), EPsProg3() EPsProg4() expected probability successful program performing several phase III trials (2, 3 4 respectively)","code":""},{"path":"https://sterniii3.github.io/drugdevelopR/reference/EPsProg_multitrial.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Expected probability of a successful program for multitrial programs in a time-to-event setting — EPsProg_multitrial","text":"following cases can investigated software: Two phase III trials Case 1: Strategy 1/2; least one trial significant, treatment effect one least showing direction Case 2: Strategy 2/2; trials significant Three phase III trials Case 2: Strategy 2/3; least two trials significant, treatment effect one least showing direction Case 3: Strategy 3/3; trials significant Four phase III trials Case 3: Strategy 3/4; least three trials significant, treatment effect one least showing direction","code":""},{"path":"https://sterniii3.github.io/drugdevelopR/reference/EPsProg_multitrial.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Expected probability of a successful program for multitrial programs in a time-to-event setting — EPsProg_multitrial","text":"","code":"res <- EPsProg2(HRgo = 0.8, d2 = 50,  alpha = 0.025, beta = 0.1,                                   w = 0.3, hr1 =  0.69, hr2 = 0.81,                                   id1 = 210, id2 = 420, case = 2, size = \"small\",                                  fixed = FALSE)           res <- EPsProg3(HRgo = 0.8, d2 = 50,  alpha = 0.025, beta = 0.1,                                   w = 0.3, hr1 =  0.69, hr2 = 0.81,                                   id1 = 210, id2 = 420, case = 2, size = \"small\",                                  fixed = TRUE)           res <- EPsProg4(HRgo = 0.8, d2 = 50,  alpha = 0.025, beta = 0.1,                                   w = 0.3, hr1 =  0.69, hr2 = 0.81,                                   id1 = 210, id2 = 420, case = 3, size = \"small\",                                  fixed = TRUE)"},{"path":"https://sterniii3.github.io/drugdevelopR/reference/EPsProg_multitrial_binary.html","id":null,"dir":"Reference","previous_headings":"","what":"Expected probability of a successful program for multitrial programs with binary distributed outcomes — EPsProg_multitrial_binary","title":"Expected probability of a successful program for multitrial programs with binary distributed outcomes — EPsProg_multitrial_binary","text":"functions calculate expected probability successful program given parameters. function represents specific strategy, e.g. function EpsProg3_binary() calculates expected probability three phase III trials performed. parameter case specifies many trials successful, .e. many trials show significantly relevant positive treatment effect.","code":""},{"path":"https://sterniii3.github.io/drugdevelopR/reference/EPsProg_multitrial_binary.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Expected probability of a successful program for multitrial programs with binary distributed outcomes — EPsProg_multitrial_binary","text":"","code":"EPsProg2_binary(   RRgo,   n2,   alpha,   beta,   p0,   w,   p11,   p12,   in1,   in2,   case,   size,   fixed )  EPsProg3_binary(   RRgo,   n2,   alpha,   beta,   p0,   w,   p11,   p12,   in1,   in2,   case,   size,   fixed )  EPsProg4_binary(   RRgo,   n2,   alpha,   beta,   p0,   w,   p11,   p12,   in1,   in2,   case,   size,   fixed )"},{"path":"https://sterniii3.github.io/drugdevelopR/reference/EPsProg_multitrial_binary.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Expected probability of a successful program for multitrial programs with binary distributed outcomes — EPsProg_multitrial_binary","text":"RRgo threshold value go/-go decision rule n2 total sample size phase II; must even number alpha significance level beta 1-beta power calculation sample size phase III p0 assumed true rate control group w weight mixture prior distribution p11 assumed true rate treatment group p12 assumed true rate treatment group in1 amount information p11 terms sample size in2 amount information p12 terms sample size case choose case: \"least 1, 2 3 significant trials needed approval\" size size category \"small\", \"medium\" \"large\" fixed choose true treatment effects fixed random","code":""},{"path":"https://sterniii3.github.io/drugdevelopR/reference/EPsProg_multitrial_binary.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Expected probability of a successful program for multitrial programs with binary distributed outcomes — EPsProg_multitrial_binary","text":"output function EPsProg2_binary(), EPsProg3_binary() EPsProg4_binary() expected probability successful program performing several phase III trials (2, 3 4 respectively)","code":""},{"path":"https://sterniii3.github.io/drugdevelopR/reference/EPsProg_multitrial_binary.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Expected probability of a successful program for multitrial programs with binary distributed outcomes — EPsProg_multitrial_binary","text":"following cases can investigated software: Two phase III trials Case 1: Strategy 1/2; least one trial significant, treatment effect one least showing direction Case 2: Strategy 2/2; trials significant Three phase III trials Case 2: Strategy 2/3; least two trials significant, treatment effect one least showing direction Case 3: Strategy 3/3; trials significant Four phase III trials Case 3: Strategy 3/4; least three trials significant, treatment effect one least showing direction","code":""},{"path":"https://sterniii3.github.io/drugdevelopR/reference/EPsProg_multitrial_binary.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Expected probability of a successful program for multitrial programs with binary distributed outcomes — EPsProg_multitrial_binary","text":"","code":"res <- EPsProg2_binary(RRgo = 0.8, n2 = 50,  alpha = 0.025, beta = 0.1,                                   p0 = 0.6,  w = 0.3, p11 =  0.3, p12 = 0.5,                                   in1 = 300, in2 = 600, case = 2, size = \"small\",                                  fixed = FALSE)           res <- EPsProg3_binary(RRgo = 0.8, n2 = 50,  alpha = 0.025, beta = 0.1,                                   p0 = 0.6,  w = 0.3, p11 =  0.3, p12 = 0.5,                                   in1 = 300, in2 = 600, case = 2, size = \"small\",                                  fixed = FALSE)           res <- EPsProg4_binary(RRgo = 0.8, n2 = 50,  alpha = 0.025, beta = 0.1,                                   p0 = 0.6,  w = 0.3, p11 =  0.3, p12 = 0.5,                                   in1 = 300, in2 = 600, case = 3, size = \"small\",                                  fixed = FALSE)"},{"path":"https://sterniii3.github.io/drugdevelopR/reference/EPsProg_multitrial_normal.html","id":null,"dir":"Reference","previous_headings":"","what":"Expected probability of a successful program for multitrial programs with normally distributed outcomes — EPsProg_multitrial_normal","title":"Expected probability of a successful program for multitrial programs with normally distributed outcomes — EPsProg_multitrial_normal","text":"functions calculate expected probability successful program given parameters. function represents specific strategy, e.g. function EpsProg3_normal() calculates expected probability three phase III trials performed. parameter case specifies many trials successful, .e. many trials show significantly relevant positive treatment effect.","code":""},{"path":"https://sterniii3.github.io/drugdevelopR/reference/EPsProg_multitrial_normal.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Expected probability of a successful program for multitrial programs with normally distributed outcomes — EPsProg_multitrial_normal","text":"","code":"EPsProg2_normal(   kappa,   n2,   alpha,   beta,   w,   Delta1,   Delta2,   in1,   in2,   a,   b,   case,   size,   fixed )  EPsProg3_normal(   kappa,   n2,   alpha,   beta,   w,   Delta1,   Delta2,   in1,   in2,   a,   b,   case,   size,   fixed )  EPsProg4_normal(   kappa,   n2,   alpha,   beta,   w,   Delta1,   Delta2,   in1,   in2,   a,   b,   case,   size,   fixed )"},{"path":"https://sterniii3.github.io/drugdevelopR/reference/EPsProg_multitrial_normal.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Expected probability of a successful program for multitrial programs with normally distributed outcomes — EPsProg_multitrial_normal","text":"kappa threshold value go/-go decision rule n2 total sample size phase II; must even number alpha significance level beta 1-beta power calculation sample size phase III w weight mixture prior distribution Delta1 assumed true treatment effect standardized difference means Delta2 assumed true treatment effect standardized difference means in1 amount information Delta1 terms sample size in2 amount information Delta2 terms sample size lower boundary truncation b upper boundary truncation case choose case: \"least 1, 2 3 significant trials needed approval\" size size category \"small\", \"medium\" \"large\" fixed choose true treatment effects fixed random","code":""},{"path":"https://sterniii3.github.io/drugdevelopR/reference/EPsProg_multitrial_normal.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Expected probability of a successful program for multitrial programs with normally distributed outcomes — EPsProg_multitrial_normal","text":"output function EPsProg2_normal(), EPsProg3_normal() EPsProg4_normal() expected probability successful program performing several phase III trials (2, 3 4 respectively).","code":""},{"path":"https://sterniii3.github.io/drugdevelopR/reference/EPsProg_multitrial_normal.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Expected probability of a successful program for multitrial programs with normally distributed outcomes — EPsProg_multitrial_normal","text":"following cases can investigated software: Two phase III trials Case 1: Strategy 1/2; least one trial significant, treatment effect one least showing direction Case 2: Strategy 2/2; trials significant Three phase III trials Case 2: Strategy 2/3; least two trials significant, treatment effect one least showing direction Case 3: Strategy 3/3; trials significant Four phase III trials Case 3: Strategy 3/4; least three trials significant, treatment effect one least showing direction","code":""},{"path":"https://sterniii3.github.io/drugdevelopR/reference/EPsProg_multitrial_normal.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Expected probability of a successful program for multitrial programs with normally distributed outcomes — EPsProg_multitrial_normal","text":"","code":"res <- EPsProg2_normal(kappa = 0.1, n2 = 50, alpha = 0.025, beta = 0.1, w = 0.3,                                  Delta1 = 0.375, Delta2 = 0.625, in1 = 300, in2 = 600,                                   a = 0.25, b = 0.75,                                   case = 2, size = \"small\", fixed = FALSE)           res <- EPsProg3_normal(kappa = 0.1, n2 = 50, alpha = 0.025, beta = 0.1, w = 0.3,                                  Delta1 = 0.375, Delta2 = 0.625, in1 = 300, in2 = 600,                                   a = 0.25, b = 0.75,                                   case = 2, size = \"small\", fixed = TRUE)           res <- EPsProg4_normal(kappa = 0.1, n2 = 50, alpha = 0.025, beta = 0.1, w = 0.3,                                  Delta1 = 0.375, Delta2 = 0.625, in1 = 300, in2 = 600,                                   a = 0.25, b = 0.75,                                   case = 3, size = \"small\", fixed = TRUE)"},{"path":"https://sterniii3.github.io/drugdevelopR/reference/Ed3_bias.html","id":null,"dir":"Reference","previous_headings":"","what":"Expected sample size for phase III for bias adjustment programs and time-to-event outcomes — Ed3_bias","title":"Expected sample size for phase III for bias adjustment programs and time-to-event outcomes — Ed3_bias","text":"discount overoptimistic results phase II calculating optimal sample size phase III, necessary use functions Ed3_L(), Ed3_L2(), Ed3_R() Ed3_R2(). function describes specific case: Ed3_L(): calculates optimal sample size additive adjustment factor (.e adjust lower bound one-sided confidence interval), however go-decision affected bias adjustment Ed3_L2(): calculates optimal sample size additive adjustment factor (.e adjust lower bound one-sided confidence interval) go-decision also affected bias adjustment Ed3_R(): calculates optimal sample size multiplicative adjustment factor (.e. use estimate retention factor), however go-decision affected bias adjustment Ed3_R2(): calculates optimal sample size multiplicative adjustment factor (.e. use estimate retention factor) go-decision also affected bias adjustment","code":""},{"path":"https://sterniii3.github.io/drugdevelopR/reference/Ed3_bias.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Expected sample size for phase III for bias adjustment programs and time-to-event outcomes — Ed3_bias","text":"","code":"Ed3_L(HRgo, d2, Adj, alpha, beta, w, hr1, hr2, id1, id2, fixed)  Ed3_L2(HRgo, d2, Adj, alpha, beta, w, hr1, hr2, id1, id2, fixed)  Ed3_R(HRgo, d2, Adj, alpha, beta, w, hr1, hr2, id1, id2, fixed)  Ed3_R2(HRgo, d2, Adj, alpha, beta, w, hr1, hr2, id1, id2, fixed)"},{"path":"https://sterniii3.github.io/drugdevelopR/reference/Ed3_bias.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Expected sample size for phase III for bias adjustment programs and time-to-event outcomes — Ed3_bias","text":"HRgo threshold value go/-go decision rule d2 total events phase II; must even number Adj adjustment parameter alpha significance level beta 1-beta power calculation sample size phase III w weight mixture prior distribution hr1 first assumed true treatment effect HR scale prior distribution hr2 second assumed true treatment effect HR scale prior distribution id1 amount information hr1 terms number events id2 amount information hr2 terms number events fixed choose true treatment effects fixed random, TRUE hr1 used fixed effect","code":""},{"path":"https://sterniii3.github.io/drugdevelopR/reference/Ed3_bias.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Expected sample size for phase III for bias adjustment programs and time-to-event outcomes — Ed3_bias","text":"output functions Ed3_L, Ed3_L2, Ed3_R Ed3_R2 expected number participants phase III.","code":""},{"path":"https://sterniii3.github.io/drugdevelopR/reference/Ed3_bias.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Expected sample size for phase III for bias adjustment programs and time-to-event outcomes — Ed3_bias","text":"","code":"res <-  Ed3_L(HRgo = 0.8, d2 = 50, Adj = 0.4,                         alpha = 0.025, beta = 0.1, w = 0.3,                          hr1 =  0.69, hr2 = 0.81,                          id1 = 280, id2 = 420, fixed = FALSE)           res <-  Ed3_L2(HRgo = 0.8, d2 = 50, Adj = 0.4,                         alpha = 0.025, beta = 0.1, w = 0.3,                          hr1 =  0.69, hr2 = 0.81,                          id1 = 280, id2 = 420, fixed = FALSE)           res <- Ed3_R(HRgo = 0.8, d2 = 50, Adj = 0.9,                         alpha = 0.025, beta = 0.1, w = 0.3,                          hr1 =  0.69, hr2 = 0.81,                          id1 = 280, id2 = 420, fixed = FALSE)           res <- Ed3_R2(HRgo = 0.8, d2 = 50, Adj = 0.9,                         alpha = 0.025, beta = 0.1, w = 0.3,                          hr1 =  0.69, hr2 = 0.81,                          id1 = 280, id2 = 420, fixed = FALSE)"},{"path":"https://sterniii3.github.io/drugdevelopR/reference/En3_bias_binary.html","id":null,"dir":"Reference","previous_headings":"","what":"Expected sample size for phase III for bias adjustment programs and binary distributed outcomes — En3_bias_binary","title":"Expected sample size for phase III for bias adjustment programs and binary distributed outcomes — En3_bias_binary","text":"discount overoptimistic results phase II calculating optimal sample size phase III, necessary use functions En3_binary_L(), En3_binary_L2(), En3_binary_R() En3_binary_R2(). function describes specific case: En3_binary_L(): calculates optimal sample size additive adjustment factor (.e adjust lower bound one-sided confidence interval), however go-decision affected bias adjustment En3_binary_L2(): calculates optimal sample size additive adjustment factor (.e adjust lower bound one-sided confidence interval) go-decision also affected bias adjustment En3_binary_R(): calculates optimal sample size multiplicative adjustment factor (.e. use estimate retention factor), however go-decision affected bias adjustment En3_binary_R2(): calculates optimal sample size multiplicative adjustment factor (.e. use estimate retention factor) go-decision also affected bias adjustment","code":""},{"path":"https://sterniii3.github.io/drugdevelopR/reference/En3_bias_binary.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Expected sample size for phase III for bias adjustment programs and binary distributed outcomes — En3_bias_binary","text":"","code":"En3_binary_L(RRgo, n2, Adj, alpha, beta, p0, w, p11, p12, in1, in2, fixed)  En3_binary_L2(RRgo, n2, Adj, alpha, beta, p0, w, p11, p12, in1, in2, fixed)  En3_binary_R(RRgo, n2, Adj, alpha, beta, p0, w, p11, p12, in1, in2, fixed)  En3_binary_R2(RRgo, n2, Adj, alpha, beta, p0, w, p11, p12, in1, in2, fixed)"},{"path":"https://sterniii3.github.io/drugdevelopR/reference/En3_bias_binary.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Expected sample size for phase III for bias adjustment programs and binary distributed outcomes — En3_bias_binary","text":"RRgo threshold value go/-go decision rule n2 total sample size phase II; must even number Adj adjustment parameter alpha significance level beta 1-beta power calculation sample size phase III p0 assumed true rate control group w weight mixture prior distribution p11 assumed true rate treatment group p12 assumed true rate treatment group in1 amount information p11 terms sample size in2 amount information p12 terms sample size fixed choose true treatment effects fixed random, TRUE p11 used fixed effect","code":""},{"path":"https://sterniii3.github.io/drugdevelopR/reference/En3_bias_binary.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Expected sample size for phase III for bias adjustment programs and binary distributed outcomes — En3_bias_binary","text":"output functions En3_binary_L, En3_binary_L2, En3_binary_R En3_binary_R2 expected number participants phase III.","code":""},{"path":"https://sterniii3.github.io/drugdevelopR/reference/En3_bias_binary.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Expected sample size for phase III for bias adjustment programs and binary distributed outcomes — En3_bias_binary","text":"","code":"res <- En3_binary_L(RRgo = 0.8, n2 = 50, Adj = 0,                                alpha = 0.025, beta = 0.1, p0 = 0.6,  w = 0.3,                               p11 =  0.3, p12 = 0.5, in1 = 300, in2 = 600,                                fixed = FALSE)           res <-  En3_binary_L2(RRgo = 0.8, n2 = 50, Adj = 0,                                alpha = 0.025, beta = 0.1, p0 = 0.6,  w = 0.3,                               p11 =  0.3, p12 = 0.5, in1 = 300, in2 = 600,                                fixed = FALSE)           res <- En3_binary_R(RRgo = 0.8, n2 = 50, Adj = 1,                                alpha = 0.025, beta = 0.1, p0 = 0.6,  w = 0.3,                               p11 =  0.3, p12 = 0.5, in1 = 300, in2 = 600,                                fixed = FALSE)           res <- En3_binary_R2(RRgo = 0.8, n2 = 50, Adj = 1,                                alpha = 0.025, beta = 0.1, p0 = 0.6,  w = 0.3,                               p11 =  0.3, p12 = 0.5, in1 = 300, in2 = 600,                                fixed = FALSE)"},{"path":"https://sterniii3.github.io/drugdevelopR/reference/En3_bias_normal.html","id":null,"dir":"Reference","previous_headings":"","what":"Expected sample size for phase III for bias adjustment programs and normally distributed outcomes — En3_bias_normal","title":"Expected sample size for phase III for bias adjustment programs and normally distributed outcomes — En3_bias_normal","text":"discount overoptimistic results phase II calculating optimal sample size phase III, necessary use functions En3_normal_L(), En3_normal_L2(), En3_normal_R() En3_normal_R2(). function describes specific case: En3_normal_L(): calculates optimal sample size additive adjustment factor (.e adjust lower bound one-sided confidence interval), however go-decision affected bias adjustment En3_normal_L2(): calculates optimal sample size additive adjustment factor (.e adjust lower bound one-sided confidence interval) go-decision also affected bias adjustment En3_normal_R(): calculates optimal sample size multiplicative adjustment factor (.e. use estimate retention factor), however go-decision affected bias adjustment En3_normal_R2(): calculates optimal sample size multiplicative adjustment factor (.e. use estimate retention factor) go-decision also affected bias adjustment","code":""},{"path":"https://sterniii3.github.io/drugdevelopR/reference/En3_bias_normal.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Expected sample size for phase III for bias adjustment programs and normally distributed outcomes — En3_bias_normal","text":"","code":"En3_normal_L(   kappa,   n2,   Adj,   alpha,   beta,   w,   Delta1,   Delta2,   in1,   in2,   a,   b,   fixed )  En3_normal_L2(   kappa,   n2,   Adj,   alpha,   beta,   w,   Delta1,   Delta2,   in1,   in2,   a,   b,   fixed )  En3_normal_R(   kappa,   n2,   Adj,   alpha,   beta,   w,   Delta1,   Delta2,   in1,   in2,   a,   b,   fixed )  En3_normal_R2(   kappa,   n2,   Adj,   alpha,   beta,   w,   Delta1,   Delta2,   in1,   in2,   a,   b,   fixed )"},{"path":"https://sterniii3.github.io/drugdevelopR/reference/En3_bias_normal.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Expected sample size for phase III for bias adjustment programs and normally distributed outcomes — En3_bias_normal","text":"kappa threshold value go/-go decision rule n2 total sample size phase II; must even number Adj adjustment parameter alpha significance level beta 1 - beta power calculation sample size phase III w weight mixture prior distribution Delta1 assumed true treatment effect standardized difference means Delta2 assumed true treatment effect standardized difference means in1 amount information Delta1 terms sample size in2 amount information Delta2 terms sample size lower boundary truncation b upper boundary truncation fixed choose true treatment effects fixed random, TRUE Delta1 used fixed effect","code":""},{"path":"https://sterniii3.github.io/drugdevelopR/reference/En3_bias_normal.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Expected sample size for phase III for bias adjustment programs and normally distributed outcomes — En3_bias_normal","text":"output functions En3_normal_L, En3_normal_L2, En3_normal_R En3_normal_R2 expected number participants phase III.","code":""},{"path":"https://sterniii3.github.io/drugdevelopR/reference/En3_bias_normal.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Expected sample size for phase III for bias adjustment programs and normally distributed outcomes — En3_bias_normal","text":"","code":"res <- En3_normal_L(kappa = 0.1, n2 = 50, Adj = 0,                                alpha = 0.025, beta = 0.1, w = 0.3,                               Delta1 = 0.375, Delta2 = 0.625,                                in1 = 300, in2 = 600,                                a = 0.25, b = 0.75, fixed = FALSE)           res <- En3_normal_L2(kappa = 0.1, n2 = 50, Adj = 0,                                alpha = 0.025, beta = 0.1, w = 0.3,                               Delta1 = 0.375, Delta2 = 0.625,                                in1 = 300, in2 = 600,                                a = 0.25, b = 0.75, fixed = TRUE)           res <- En3_normal_R(kappa = 0.1, n2 = 50, Adj = 1,                                alpha = 0.025, beta = 0.1, w = 0.3,                               Delta1 = 0.375, Delta2 = 0.625,                                in1 = 300, in2 = 600,                                a = 0.25, b = 0.75, fixed = FALSE)           res <- En3_normal_R2(kappa = 0.1, n2 = 50, Adj = 1,                                alpha = 0.025, beta = 0.1, w = 0.3,                               Delta1 = 0.375, Delta2 = 0.625,                                in1 = 300, in2 = 600,                                a = 0.25, b = 0.75, fixed = FALSE)"},{"path":"https://sterniii3.github.io/drugdevelopR/reference/Epgo23.html","id":null,"dir":"Reference","previous_headings":"","what":"Expected probability to do third phase III trial — Epgo23","title":"Expected probability to do third phase III trial — Epgo23","text":"setting Case 2: Strategy 2/2( + 1); least two trials significant (treatment effect one least showing direction) function calculates probability third phase III trial necessary.","code":""},{"path":"https://sterniii3.github.io/drugdevelopR/reference/Epgo23.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Expected probability to do third phase III trial — Epgo23","text":"","code":"Epgo23(HRgo, d2, alpha, beta, w, hr1, hr2, id1, id2)"},{"path":"https://sterniii3.github.io/drugdevelopR/reference/Epgo23.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Expected probability to do third phase III trial — Epgo23","text":"HRgo threshold value go/-go decision rule d2 total number events phase II alpha significance level beta 1-beta power calculation sample size phase III w weight mixture prior distribution hr1 first assumed true treatment effect HR scale prior distribution hr2 second assumed true treatment effect HR scale prior distribution id1 amount information hr1 terms number events id2 amount information hr2 terms number events","code":""},{"path":"https://sterniii3.github.io/drugdevelopR/reference/Epgo23.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Expected probability to do third phase III trial — Epgo23","text":"output function Epgo23() probability third phase III trial.","code":""},{"path":"https://sterniii3.github.io/drugdevelopR/reference/Epgo23.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Expected probability to do third phase III trial — Epgo23","text":"","code":"res <- Epgo23(HRgo = 0.8, d2 = 50,  w = 0.3, alpha = 0.025, beta = 0.1,                                hr1 =  0.69, hr2 = 0.81, id1 = 280, id2 = 420)"},{"path":"https://sterniii3.github.io/drugdevelopR/reference/Epgo23_binary.html","id":null,"dir":"Reference","previous_headings":"","what":"Expected probability to do third phase III trial — Epgo23_binary","title":"Expected probability to do third phase III trial — Epgo23_binary","text":"setting Case 2: Strategy 2/2( + 1); least two trials significant (treatment effect one least showing direction) function calculates probability third phase III trial necessary.","code":""},{"path":"https://sterniii3.github.io/drugdevelopR/reference/Epgo23_binary.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Expected probability to do third phase III trial — Epgo23_binary","text":"","code":"Epgo23_binary(RRgo, n2, alpha, beta, p0, w, p11, p12, in1, in2)"},{"path":"https://sterniii3.github.io/drugdevelopR/reference/Epgo23_binary.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Expected probability to do third phase III trial — Epgo23_binary","text":"RRgo threshold value go/-go decision rule n2 total sample size phase II; must even number alpha significance level beta 1-beta power calculation sample size phase III p0 assumed true rate control group w weight mixture prior distribution p11 assumed true rate treatment group p12 assumed true rate treatment group in1 amount information p11 terms sample size in2 amount information p12 terms sample size","code":""},{"path":"https://sterniii3.github.io/drugdevelopR/reference/Epgo23_binary.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Expected probability to do third phase III trial — Epgo23_binary","text":"output function Epgo23_binary() probability third phase III trial.","code":""},{"path":"https://sterniii3.github.io/drugdevelopR/reference/Epgo23_binary.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Expected probability to do third phase III trial — Epgo23_binary","text":"","code":"res <- Epgo23_binary(RRgo = 0.8, n2 = 50,  p0 = 0.3, w = 0.3, alpha = 0.025, beta = 0.1,                                p11 =  0.3, p12 = 0.5, in1 = 300, in2 = 600)"},{"path":"https://sterniii3.github.io/drugdevelopR/reference/Epgo23_normal.html","id":null,"dir":"Reference","previous_headings":"","what":"Expected probability to do third phase III trial — Epgo23_normal","title":"Expected probability to do third phase III trial — Epgo23_normal","text":"setting Case 2: Strategy 2/2( + 1); least two trials significant (treatment effect one least showing direction) function calculates probability third phase III trial necessary.","code":""},{"path":"https://sterniii3.github.io/drugdevelopR/reference/Epgo23_normal.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Expected probability to do third phase III trial — Epgo23_normal","text":"","code":"Epgo23_normal(kappa, n2, alpha, beta, a, b, w, Delta1, Delta2, in1, in2)"},{"path":"https://sterniii3.github.io/drugdevelopR/reference/Epgo23_normal.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Expected probability to do third phase III trial — Epgo23_normal","text":"kappa threshold value go/-go decision rule n2 total sample size phase II; must even number alpha significance level beta 1-beta power calculation sample size phase III lower boundary truncation b upper boundary truncation w weight mixture prior distribution Delta1 assumed true treatment effect standardized difference means Delta2 assumed true treatment effect standardized difference means in1 amount information Delta1 terms sample size in2 amount information Delta2 terms sample size","code":""},{"path":"https://sterniii3.github.io/drugdevelopR/reference/Epgo23_normal.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Expected probability to do third phase III trial — Epgo23_normal","text":"output function Epgo23_normal() probability third phase III trial.","code":""},{"path":"https://sterniii3.github.io/drugdevelopR/reference/Epgo23_normal.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Expected probability to do third phase III trial — Epgo23_normal","text":"","code":"res <- Epgo23_normal(kappa = 0.1, n2 = 50, w = 0.3, alpha = 0.025, beta = 0.1, a = 0.25, b=0.75,                                Delta1 = 0.375, Delta2 = 0.625, in1 = 300, in2 = 600)"},{"path":"https://sterniii3.github.io/drugdevelopR/reference/Epgo_bias.html","id":null,"dir":"Reference","previous_headings":"","what":"Expected probability to go to phase III for bias adjustment programs with time-to-event outcomes — Epgo_bias","title":"Expected probability to go to phase III for bias adjustment programs with time-to-event outcomes — Epgo_bias","text":"case want discount overoptimistic results phase II calculating sample size phase III, also deciding whether go phase III functions Epgo_L2 Epgo_R2 necessary. function Epgo_L2 uses additive adjustment parameter (.e adjust lower bound one-sided confidence interval), function Epgo_R2 uses multiplicative adjustment parameter (.e. use estimate retention factor)","code":""},{"path":"https://sterniii3.github.io/drugdevelopR/reference/Epgo_bias.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Expected probability to go to phase III for bias adjustment programs with time-to-event outcomes — Epgo_bias","text":"","code":"Epgo_L2(HRgo, d2, Adj, w, hr1, hr2, id1, id2, fixed)  Epgo_R2(HRgo, d2, Adj, w, hr1, hr2, id1, id2, fixed)"},{"path":"https://sterniii3.github.io/drugdevelopR/reference/Epgo_bias.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Expected probability to go to phase III for bias adjustment programs with time-to-event outcomes — Epgo_bias","text":"HRgo threshold value go/-go decision rule d2 total number events phase II; must even number Adj adjustment parameter w weight mixture prior distribution hr1 first assumed true treatment effect HR scale prior distribution hr2 second assumed true treatment effect HR scale prior distribution id1 amount information hr1 terms number events id2 amount information hr2 terms number events fixed choose true treatment effects fixed random, TRUE hr1 used fixed effect","code":""},{"path":"https://sterniii3.github.io/drugdevelopR/reference/Epgo_bias.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Expected probability to go to phase III for bias adjustment programs with time-to-event outcomes — Epgo_bias","text":"output functions Epgo_L2 Epgo_R2 expected number participants phase III conservative decision rule sample size calculation.","code":""},{"path":"https://sterniii3.github.io/drugdevelopR/reference/Epgo_bias.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Expected probability to go to phase III for bias adjustment programs with time-to-event outcomes — Epgo_bias","text":"","code":"res <- Epgo_L2(HRgo = 0.8, d2 = 50, Adj = 0.4,                                   w = 0.3, hr1 = 0.69, hr2 = 0.81,                                  id1 = 280, id2 = 420, fixed = FALSE)           res <- Epgo_R2(HRgo = 0.8, d2 = 50, Adj = 0.9,                                   w = 0.3, hr1 = 0.69, hr2 = 0.81,                                  id1 = 280, id2 = 420, fixed = FALSE)"},{"path":"https://sterniii3.github.io/drugdevelopR/reference/Epgo_bias_binary.html","id":null,"dir":"Reference","previous_headings":"","what":"Expected probability to go to phase III for bias adjustment programs with binary distributed outcomes — Epgo_bias_binary","title":"Expected probability to go to phase III for bias adjustment programs with binary distributed outcomes — Epgo_bias_binary","text":"case want discount overoptimistic results phase II calculating sample size phase III, also deciding whether go phase III functions Epgo_binary_L2 Epgo_binary_R2 necessary. function Epgo_binary_L2 uses additive adjustment parameter (.e adjust lower bound one-sided confidence interval), function Epgo_binary_R2 uses multiplicative adjustment parameter (.e. use estimate retention factor)","code":""},{"path":"https://sterniii3.github.io/drugdevelopR/reference/Epgo_bias_binary.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Expected probability to go to phase III for bias adjustment programs with binary distributed outcomes — Epgo_bias_binary","text":"","code":"Epgo_binary_L2(RRgo, n2, Adj, p0, w, p11, p12, in1, in2, fixed)  Epgo_binary_R2(RRgo, n2, Adj, p0, w, p11, p12, in1, in2, fixed)"},{"path":"https://sterniii3.github.io/drugdevelopR/reference/Epgo_bias_binary.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Expected probability to go to phase III for bias adjustment programs with binary distributed outcomes — Epgo_bias_binary","text":"RRgo threshold value go/-go decision rule n2 total sample size phase II; must even number Adj adjustment parameter p0 assumed true rate control group w weight mixture prior distribution p11 assumed true rate treatment group p12 assumed true rate treatment group in1 amount information p11 terms sample size in2 amount information p12 terms sample size fixed choose true treatment effects fixed random, TRUE p11 used fixed effect","code":""},{"path":"https://sterniii3.github.io/drugdevelopR/reference/Epgo_bias_binary.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Expected probability to go to phase III for bias adjustment programs with binary distributed outcomes — Epgo_bias_binary","text":"output functions Epgo_binary_L2 Epgo_binary_R2 expected number participants phase III conservative decision rule sample size calculation.","code":""},{"path":"https://sterniii3.github.io/drugdevelopR/reference/Epgo_bias_binary.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Expected probability to go to phase III for bias adjustment programs with binary distributed outcomes — Epgo_bias_binary","text":"","code":"res <- Epgo_binary_L2(RRgo = 0.8, n2 = 50, Adj = 0,  p0 = 0.6,  w = 0.3,                               p11 =  0.3, p12 = 0.5, in1 = 300, in2 = 600,                                fixed = FALSE)           res <- Epgo_binary_R2(RRgo = 0.8, n2 = 50, Adj = 1,  p0 = 0.6,  w = 0.3,                               p11 =  0.3, p12 = 0.5, in1 = 300, in2 = 600,                                fixed = FALSE)"},{"path":"https://sterniii3.github.io/drugdevelopR/reference/Epgo_bias_normal.html","id":null,"dir":"Reference","previous_headings":"","what":"Expected probability to go to phase III for bias adjustment programs with normally distributed outcomes — Epgo_bias_normal","title":"Expected probability to go to phase III for bias adjustment programs with normally distributed outcomes — Epgo_bias_normal","text":"case want discount overoptimistic results phase II calculating sample size phase III, also deciding whether go phase III functions Epgo_normal_L2 Epgo_normal_R2 necessary. function Epgo_normal_L2 uses additive adjustment parameter (.e adjust lower bound one-sided confidence interval), function Epgo_normal_R2 uses multiplicative adjustment parameter (.e. use estimate retention factor)","code":""},{"path":"https://sterniii3.github.io/drugdevelopR/reference/Epgo_bias_normal.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Expected probability to go to phase III for bias adjustment programs with normally distributed outcomes — Epgo_bias_normal","text":"","code":"Epgo_normal_L2(kappa, n2, Adj, w, Delta1, Delta2, in1, in2, a, b, fixed)  Epgo_normal_R2(kappa, n2, Adj, w, Delta1, Delta2, in1, in2, a, b, fixed)"},{"path":"https://sterniii3.github.io/drugdevelopR/reference/Epgo_bias_normal.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Expected probability to go to phase III for bias adjustment programs with normally distributed outcomes — Epgo_bias_normal","text":"kappa threshold value go/-go decision rule n2 total sample size phase II; must even number Adj adjustment parameter w weight mixture prior distribution Delta1 assumed true treatment effect standardized difference means Delta2 assumed true treatment effect standardized difference means in1 amount information Delta1 terms sample size in2 amount information Delta2 terms sample size lower boundary truncation b upper boundary truncation fixed choose true treatment effects fixed random, TRUE Delta1 used fixed effect","code":""},{"path":"https://sterniii3.github.io/drugdevelopR/reference/Epgo_bias_normal.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Expected probability to go to phase III for bias adjustment programs with normally distributed outcomes — Epgo_bias_normal","text":"output functions Epgo_normal_L2 Epgo_normal_R2 expected number participants phase III conservative decision rule sample size calculation.","code":""},{"path":"https://sterniii3.github.io/drugdevelopR/reference/Epgo_bias_normal.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Expected probability to go to phase III for bias adjustment programs with normally distributed outcomes — Epgo_bias_normal","text":"","code":"res <- Epgo_normal_L2(kappa = 0.1, n2 = 50, Adj = 0, w = 0.3,                                Delta1 = 0.375, Delta2 = 0.625, in1 = 300, in2 = 600,                                 a = 0.25, b = 0.75, fixed = FALSE)           res <- Epgo_normal_R2(kappa = 0.1, n2 = 50, Adj = 1, w = 0.3,                                Delta1 = 0.375, Delta2 = 0.625, in1 = 300, in2 = 600,                                 a = 0.25, b = 0.75, fixed = FALSE)"},{"path":"https://sterniii3.github.io/drugdevelopR/reference/Ess_binary.html","id":null,"dir":"Reference","previous_headings":"","what":"Expected sample size for phase III for multiarm programs with binary distributed outcomes — Ess_binary","title":"Expected sample size for phase III for multiarm programs with binary distributed outcomes — Ess_binary","text":"Given phase II results promising enough get \"go\"-decision go phase III function now calculates expected sample size phase III given cases strategies listed . results function necessary calculating utility program, step maximized optimal_multiarm_binary() function","code":""},{"path":"https://sterniii3.github.io/drugdevelopR/reference/Ess_binary.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Expected sample size for phase III for multiarm programs with binary distributed outcomes — Ess_binary","text":"","code":"Ess_binary(RRgo, n2, alpha, beta, p0, p11, p12, strategy, case)"},{"path":"https://sterniii3.github.io/drugdevelopR/reference/Ess_binary.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Expected sample size for phase III for multiarm programs with binary distributed outcomes — Ess_binary","text":"RRgo threshold value go/-go decision rule n2 total sample size phase II; must even number alpha significance level beta 1-beta power calculation sample size phase III p0 assumed true rate control group p11 assumed true rate treatment group p12 assumed true rate treatment group strategy choose Strategy: 1 (\"best promising\"), 2 (\"promising\") 3 () case different cases: 1 (\"nogo\"), 21 (treatment 1 promising, treatment 2 ), 22 (treatment 2 promising, treatment 1 ), 31 (treatments promising, treatment 1 better), 32 (treatments promising, treatment 2 better)","code":""},{"path":"https://sterniii3.github.io/drugdevelopR/reference/Ess_binary.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Expected sample size for phase III for multiarm programs with binary distributed outcomes — Ess_binary","text":"function Ess_binary() returns expected sample size phase III going phase III","code":""},{"path":"https://sterniii3.github.io/drugdevelopR/reference/Ess_binary.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Expected sample size for phase III for multiarm programs with binary distributed outcomes — Ess_binary","text":"","code":"res <- Ess_binary(RRgo = 0.8 ,n2 = 50 ,alpha = 0.05, beta = 0.1,                             p0 = 0.6, p11 =  0.3, p12 = 0.5,strategy = 3, case = 31)"},{"path":"https://sterniii3.github.io/drugdevelopR/reference/Ess_multiple_normal.html","id":null,"dir":"Reference","previous_headings":"","what":"Expected sample size for phase III for multiple endpoints with normally distributed outcomes — Ess_multiple_normal","title":"Expected sample size for phase III for multiple endpoints with normally distributed outcomes — Ess_multiple_normal","text":"Given phase II results promising enough get \"go\"-decision go phase III function now calculates expected sample size phase III. results function necessary calculating utility program, step maximized optimal_multiple_normal() function","code":""},{"path":"https://sterniii3.github.io/drugdevelopR/reference/Ess_multiple_normal.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Expected sample size for phase III for multiple endpoints with normally distributed outcomes — Ess_multiple_normal","text":"","code":"Ess_multiple_normal(   kappa,   n2,   alpha,   beta,   Delta1,   Delta2,   in1,   in2,   sigma1,   sigma2,   fixed,   rho )"},{"path":"https://sterniii3.github.io/drugdevelopR/reference/Ess_multiple_normal.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Expected sample size for phase III for multiple endpoints with normally distributed outcomes — Ess_multiple_normal","text":"kappa threshold value go/-go decision rule; vector endpoints n2 total sample size phase II; must even number alpha significance level beta 1-beta power calculation sample size phase III Delta1 assumed true treatment effect standardized difference means Delta2 assumed true treatment effect standardized difference means in1 amount information Delta1 terms sample size in2 amount information Delta2 terms sample size sigma1 standard deviation first endpoint sigma2 standard deviation second endpoint fixed choose true treatment effects fixed random, TRUE Delta1 used fixed effect rho correlation two endpoints","code":""},{"path":"https://sterniii3.github.io/drugdevelopR/reference/Ess_multiple_normal.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Expected sample size for phase III for multiple endpoints with normally distributed outcomes — Ess_multiple_normal","text":"output function Ess_multiple_normal expected number participants phase III","code":""},{"path":"https://sterniii3.github.io/drugdevelopR/reference/Ess_multiple_normal.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Expected sample size for phase III for multiple endpoints with normally distributed outcomes — Ess_multiple_normal","text":"","code":"res <- Ess_multiple_normal(kappa = 0.1, n2 = 50, alpha = 0.025, beta = 0.1,                                Delta1 = 0.375, Delta2 = 0.625, in1 = 300, in2 = 600,                                 sigma1 = 8, sigma2 = 4, fixed = TRUE, rho = 0.3)"},{"path":"https://sterniii3.github.io/drugdevelopR/reference/Ess_multiple_tte.html","id":null,"dir":"Reference","previous_headings":"","what":"Expected sample size for phase III for multiple endpoints with normally distributed outcomes — Ess_multiple_tte","title":"Expected sample size for phase III for multiple endpoints with normally distributed outcomes — Ess_multiple_tte","text":"Given phase II results promising enough get \"go\"-decision go phase III function now calculates expected sample size phase III. results function necessary calculating utility program, step maximized optimal_multiple_tte() function","code":""},{"path":"https://sterniii3.github.io/drugdevelopR/reference/Ess_multiple_tte.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Expected sample size for phase III for multiple endpoints with normally distributed outcomes — Ess_multiple_tte","text":"","code":"Ess_multiple_tte(HRgo, n2, alpha, beta, hr1, hr2, id1, id2, fixed, rho)"},{"path":"https://sterniii3.github.io/drugdevelopR/reference/Ess_multiple_tte.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Expected sample size for phase III for multiple endpoints with normally distributed outcomes — Ess_multiple_tte","text":"HRgo threshold value go/-go decision rule; n2 total sample size phase II; must even number alpha one- sided significance level beta 1-beta power calculation number events phase III Schoenfeld (1981) formula hr1 assumed true treatment effect HR scale treatment 1 hr2 assumed true treatment effect HR scale treatment 2 id1 amount information hr1 terms number events id2 amount information hr2 terms number events fixed choose true treatment effects fixed random, TRUE hr1 used fixed effect rho correlation two endpoints","code":""},{"path":"https://sterniii3.github.io/drugdevelopR/reference/Ess_multiple_tte.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Expected sample size for phase III for multiple endpoints with normally distributed outcomes — Ess_multiple_tte","text":"output function Ess_multiple_tte() expected number participants phase III","code":""},{"path":"https://sterniii3.github.io/drugdevelopR/reference/Ess_multiple_tte.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Expected sample size for phase III for multiple endpoints with normally distributed outcomes — Ess_multiple_tte","text":"","code":"res <- Ess_multiple_tte(HRgo = 0.8, n2 = 50, alpha = 0.05, beta = 0.1,                                hr1 = 0.75, hr2 = 0.80,                                 id1 = 300, id2 = 600,                                 fixed = TRUE, rho = 0.3)"},{"path":"https://sterniii3.github.io/drugdevelopR/reference/Ess_normal.html","id":null,"dir":"Reference","previous_headings":"","what":"Expected sample size for phase III for multiarm programs with normally distributed outcomes — Ess_normal","title":"Expected sample size for phase III for multiarm programs with normally distributed outcomes — Ess_normal","text":"Given phase II results promising enough get \"go\"-decision go phase III function now calculates expected sample size phase III given cases strategies listed . results function necessary calculating utility program, step maximized optimal_multiarm_normal() function","code":""},{"path":"https://sterniii3.github.io/drugdevelopR/reference/Ess_normal.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Expected sample size for phase III for multiarm programs with normally distributed outcomes — Ess_normal","text":"","code":"Ess_normal(kappa, n2, alpha, beta, Delta1, Delta2, strategy, case)"},{"path":"https://sterniii3.github.io/drugdevelopR/reference/Ess_normal.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Expected sample size for phase III for multiarm programs with normally distributed outcomes — Ess_normal","text":"kappa threshold value go/-go decision rule n2 total sample size phase II; must even number alpha significance level beta 1-beta power calculation sample size phase III Delta1 assumed true treatment effect standardized difference means Delta2 assumed true treatment effect standardized difference means strategy choose Strategy: 1 (\"best promising\"), 2 (\"promising\") 3 () case different cases: 1 (\"nogo\"), 21 (treatment 1 promising, treatment 2 ), 22 (treatment 2 promising, treatment 1 ), 31 (treatments promising, treatment 1 better), 32 (treatments promising, treatment 2 better)","code":""},{"path":"https://sterniii3.github.io/drugdevelopR/reference/Ess_normal.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Expected sample size for phase III for multiarm programs with normally distributed outcomes — Ess_normal","text":"function Ess_normal() returns expected sample size phase III going phase III outcomes normally distributed consider multiarm programs, .e. several phase III trials different doses different treatments performed","code":""},{"path":"https://sterniii3.github.io/drugdevelopR/reference/Ess_normal.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Expected sample size for phase III for multiarm programs with normally distributed outcomes — Ess_normal","text":"","code":"res <- Ess_normal(kappa = 0.1 ,n2 = 50 ,alpha = 0.05, beta = 0.1,                             Delta1 = 0.375, Delta2 = 0.625, strategy = 3, case = 31)"},{"path":"https://sterniii3.github.io/drugdevelopR/reference/Ess_tte.html","id":null,"dir":"Reference","previous_headings":"","what":"Expected sample size for phase III for multiarm programs with time-to-event outcomes — Ess_tte","title":"Expected sample size for phase III for multiarm programs with time-to-event outcomes — Ess_tte","text":"Given phase II results promising enough get \"go\"-decision go phase III function now calculates expected sample size phase III given cases strategies listed . results function necessary calculating utility program, step maximized optimal_multiarm() function","code":""},{"path":"https://sterniii3.github.io/drugdevelopR/reference/Ess_tte.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Expected sample size for phase III for multiarm programs with time-to-event outcomes — Ess_tte","text":"","code":"Ess_tte(HRgo, n2, alpha, beta, ec, hr1, hr2, strategy, case)"},{"path":"https://sterniii3.github.io/drugdevelopR/reference/Ess_tte.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Expected sample size for phase III for multiarm programs with time-to-event outcomes — Ess_tte","text":"HRgo threshold value go/-go decision rule n2 total sample size phase II; must even number alpha significance level beta 1-beta power calculation sample size phase III ec control arm event rate phase II III hr1 assumed true treatment effect HR scale treatment 1 hr2 assumed true treatment effect HR scale treatment 2 strategy choose Strategy: 1 (\"best promising\"), 2 (\"promising\") 3 () case different cases: 1 (\"nogo\"), 21 (treatment 1 promising, treatment 2 ), 22 (treatment 2 promising, treatment 1 ), 31 (treatments promising, treatment 1 better), 32 (treatments promising, treatment 2 better)","code":""},{"path":"https://sterniii3.github.io/drugdevelopR/reference/Ess_tte.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Expected sample size for phase III for multiarm programs with time-to-event outcomes — Ess_tte","text":"function Ess_tte() returns expected sample size phase III going phase III","code":""},{"path":"https://sterniii3.github.io/drugdevelopR/reference/Ess_tte.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Expected sample size for phase III for multiarm programs with time-to-event outcomes — Ess_tte","text":"","code":"res <- Ess_tte(HRgo = 0.8 ,n2 = 50 ,alpha = 0.05, beta = 0.1,                             ec = 0.6, hr1 = 0.7, hr2 = 0.8, strategy = 2, case = 21)"},{"path":"https://sterniii3.github.io/drugdevelopR/reference/PsProg_binary.html","id":null,"dir":"Reference","previous_headings":"","what":"Probability of a successful program for multiarm programs with binary distributed outcomes — PsProg_binary","title":"Probability of a successful program for multiarm programs with binary distributed outcomes — PsProg_binary","text":"Given get \"go\"-decision phase II, functions now calculates probability results confirmatory trial (phase III) significant, .e. statistically relevant positive effect treatment.","code":""},{"path":"https://sterniii3.github.io/drugdevelopR/reference/PsProg_binary.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Probability of a successful program for multiarm programs with binary distributed outcomes — PsProg_binary","text":"","code":"PsProg_binary(   RRgo,   n2,   alpha,   beta,   p0,   p11,   p12,   step1,   step2,   strategy,   case )"},{"path":"https://sterniii3.github.io/drugdevelopR/reference/PsProg_binary.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Probability of a successful program for multiarm programs with binary distributed outcomes — PsProg_binary","text":"RRgo threshold value go/-go decision rule n2 total sample size phase II; must divisible three alpha significance level beta 1-beta power calculation sample size phase III p0 assumed true rate control group p11 assumed true rate treatment group p12 assumed true rate treatment group step1 lower boundary effect size step2 upper boundary effect size strategy choose Strategy: 1 (\"best promising\"), 2 (\"promising\") 3 () case different cases: 1 (\"nogo\"), 21 (treatment 1 promising, treatment 2 ), 22 (treatment 2 promising, treatment 1 ), 31 (treatments promising, treatment 1 better), 32 (treatments promising, treatment 2 better)","code":""},{"path":"https://sterniii3.github.io/drugdevelopR/reference/PsProg_binary.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Probability of a successful program for multiarm programs with binary distributed outcomes — PsProg_binary","text":"function PsProg_binary() returns probability successful program","code":""},{"path":"https://sterniii3.github.io/drugdevelopR/reference/PsProg_binary.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Probability of a successful program for multiarm programs with binary distributed outcomes — PsProg_binary","text":"","code":"res <- PsProg_binary(RRgo = 0.8 ,n2 = 50 ,alpha = 0.05, beta = 0.1,                             p0 = 0.6, p11 =  0.3, p12 = 0.5, step1 = 1, step2 = 0.95,                             strategy = 3, case = 31)"},{"path":"https://sterniii3.github.io/drugdevelopR/reference/PsProg_normal.html","id":null,"dir":"Reference","previous_headings":"","what":"Probability of a successful program for multiarm programs with normally distributed outcomes — PsProg_normal","title":"Probability of a successful program for multiarm programs with normally distributed outcomes — PsProg_normal","text":"Given get \"go\"-decision phase II, functions now calculates probability results confirmatory trial (phase III) significant, .e. statistically relevant positive effect treatment.","code":""},{"path":"https://sterniii3.github.io/drugdevelopR/reference/PsProg_normal.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Probability of a successful program for multiarm programs with normally distributed outcomes — PsProg_normal","text":"","code":"PsProg_normal(   kappa,   n2,   alpha,   beta,   Delta1,   Delta2,   step1,   step2,   strategy,   case )"},{"path":"https://sterniii3.github.io/drugdevelopR/reference/PsProg_normal.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Probability of a successful program for multiarm programs with normally distributed outcomes — PsProg_normal","text":"kappa threshold value go/-go decision rule n2 total sample size phase II; must even number alpha significance level beta 1-beta power calculation sample size phase III Delta1 assumed true treatment effect standardized difference means Delta2 assumed true treatment effect standardized difference means step1 lower boundary effect size step2 upper boundary effect size strategy choose Strategy: 1 (\"best promising\"), 2 (\"promising\") 3 () case different cases: 1 (\"nogo\"), 21 (treatment 1 promising, treatment 2 ), 22 (treatment 2 promising, treatment 1 ), 31 (treatments promising, treatment 1 better), 32 (treatments promising, treatment 2 better)","code":""},{"path":"https://sterniii3.github.io/drugdevelopR/reference/PsProg_normal.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Probability of a successful program for multiarm programs with normally distributed outcomes — PsProg_normal","text":"function PsProg_normal() returns probability successful program.","code":""},{"path":"https://sterniii3.github.io/drugdevelopR/reference/PsProg_normal.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Probability of a successful program for multiarm programs with normally distributed outcomes — PsProg_normal","text":"","code":"res <- PsProg_normal(kappa = 0.1 ,n2 = 50 ,alpha = 0.05, beta = 0.1,                             Delta1 = 0.375, Delta2 = 0.625,  step1 = 0, step2 = 0.5,                             strategy = 3, case = 31)"},{"path":"https://sterniii3.github.io/drugdevelopR/reference/PsProg_tte.html","id":null,"dir":"Reference","previous_headings":"","what":"Probability of a successful program for multiarm programs with time-to-event outcomes — PsProg_tte","title":"Probability of a successful program for multiarm programs with time-to-event outcomes — PsProg_tte","text":"Given get \"go\"-decision phase II, functions now calculates probability results confirmatory trial (phase III) significant, .e. statistically relevant positive effect treatment.","code":""},{"path":"https://sterniii3.github.io/drugdevelopR/reference/PsProg_tte.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Probability of a successful program for multiarm programs with time-to-event outcomes — PsProg_tte","text":"","code":"PsProg_tte(HRgo, n2, alpha, beta, ec, hr1, hr2, step1, step2, strategy, case)"},{"path":"https://sterniii3.github.io/drugdevelopR/reference/PsProg_tte.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Probability of a successful program for multiarm programs with time-to-event outcomes — PsProg_tte","text":"HRgo threshold value go/-go decision rule n2 total sample size phase II; must divisible three alpha significance level beta 1-beta power calculation sample size phase III ec control arm event rate phase II III hr1 assumed true treatment effect HR scale treatment 1 hr2 assumed true treatment effect HR scale treatment 2 step1 lower boundary effect size step2 upper boundary effect size strategy choose Strategy: 1 (\"best promising\"), 2 (\"promising\") 3 () case different cases: 1 (\"nogo\"), 21 (treatment 1 promising, treatment 2 ), 22 (treatment 2 promising, treatment 1 ), 31 (treatments promising, treatment 1 better), 32 (treatments promising, treatment 2 better)","code":""},{"path":"https://sterniii3.github.io/drugdevelopR/reference/PsProg_tte.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Probability of a successful program for multiarm programs with time-to-event outcomes — PsProg_tte","text":"function PsProg_tte() returns probability successful program","code":""},{"path":"https://sterniii3.github.io/drugdevelopR/reference/PsProg_tte.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Probability of a successful program for multiarm programs with time-to-event outcomes — PsProg_tte","text":"","code":"res <- PsProg_tte(HRgo = 0.8 ,n2 = 50 ,alpha = 0.05, beta = 0.1,                             ec = 0.6, hr1 = 0.7, hr2 = 0.8, step1 = 1, step2 = 0.95,                             strategy = 2, case = 21)"},{"path":"https://sterniii3.github.io/drugdevelopR/reference/dbivanorm.html","id":null,"dir":"Reference","previous_headings":"","what":"Density of the bivariate normal distribution — dbivanorm","title":"Density of the bivariate normal distribution — dbivanorm","text":"Density bivariate normal distribution","code":""},{"path":"https://sterniii3.github.io/drugdevelopR/reference/dbivanorm.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Density of the bivariate normal distribution — dbivanorm","text":"","code":"dbivanorm(x, y, mu1, mu2, sigma1, sigma2, rho)  dbivanorm(x, y, mu1, mu2, sigma1, sigma2, rho)"},{"path":"https://sterniii3.github.io/drugdevelopR/reference/dbivanorm.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Density of the bivariate normal distribution — dbivanorm","text":"x integral variable y integral variable mu1 mean second endpoint mu2 mean first endpoint sigma1 standard deviation first endpoint sigma2 standard deviation second endpoint rho correlation two endpoints","code":""},{"path":"https://sterniii3.github.io/drugdevelopR/reference/dbivanorm.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Density of the bivariate normal distribution — dbivanorm","text":"Function dbivanorm() return density bivariate normal distribution.","code":""},{"path":"https://sterniii3.github.io/drugdevelopR/reference/dbivanorm.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Density of the bivariate normal distribution — dbivanorm","text":"","code":"res <- dbivanorm(x = 0.5, y = 0.5, mu1 = 0.375, mu2 = 0.25, sigma1 = 8, sigma2 = 12, rho = 0.4 )"},{"path":"https://sterniii3.github.io/drugdevelopR/reference/drugdevelopR.html","id":null,"dir":"Reference","previous_headings":"","what":"Utility based optimal phase II/III drug development planning — drugdevelopR","title":"Utility based optimal phase II/III drug development planning — drugdevelopR","text":"drugdevelopR package enables utility based planning phase II/III drug development programs optimal sample size allocation go/-go decision rules. assumed true treatment effects can assumed fixed (planning also possible via user friendly R Shiny App: drugdevelopR) modelled prior distribution. R Shiny application prior visualizes prior distributions used package. Fast computing enabled parallel programming.","code":""},{"path":"https://sterniii3.github.io/drugdevelopR/reference/drugdevelopR.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Utility based optimal phase II/III drug development planning — drugdevelopR","text":"","code":"drugdevelopR()"},{"path":"https://sterniii3.github.io/drugdevelopR/reference/drugdevelopR.html","id":"drugdevelopr-package-and-r-shiny-app","dir":"Reference","previous_headings":"","what":"drugdevelopR package and R Shiny App","title":"Utility based optimal phase II/III drug development planning — drugdevelopR","text":"drugdevelopR package provides functions plan optimal phase II/III drug development programs time--event endpoint (optimal_tte), binary endpoint (optimal_binary) normally distributed endpoint (optimal_normal), treatment effect assumed fixed modelled prior. settings, optimal phase II/III drug development planning fixed assumed treatment effects can also done help R Shiny application basic. Extensions basic setting optimal planning programs including methods discounting phase II results (function: optimal_bias, App: bias), optimal planning programs several phase III trials (function: optimal_multitrial, App: multitrial) optimal planning programs multiple arms (function: optimal_multiarm, App: multiarm). R Shiny App drugdevelopR serves homepage, navigating different parts drugdevelopR via links.","code":""},{"path":"https://sterniii3.github.io/drugdevelopR/reference/drugdevelopR.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Utility based optimal phase II/III drug development planning — drugdevelopR","text":"Kirchner, M., Kieser, M., Goette, H., & Schueler, . (2016). Utility-based optimization phase II/III programs. Statistics Medicine, 35(2), 305-316. Preussler, S., Kieser, M., Kirchner, M. (2019). Optimal sample size allocation go/-go decision rules phase II/III programs several phase III trials performed. Biometrical Journal, 61(2), 357-378. Preussler, S., Kirchner, M., Goette, H., Kieser, M. (2019). Optimal designs phase II/III drug development programs including methods discounting phase II results. Submitted peer-review journal. Preussler, S., Kirchner, M., Goette, H., Kieser, M. (2019). Optimal designs multi-arm Phase II/III drug development programs. Submitted peer-review journal.","code":""},{"path":"https://sterniii3.github.io/drugdevelopR/reference/fmax.html","id":null,"dir":"Reference","previous_headings":"","what":"Density for the maximum of two normally distributed random variables — fmax","title":"Density for the maximum of two normally distributed random variables — fmax","text":"function fmax() return value f(z), value density function maximum two normally distributed random variables.","code":""},{"path":"https://sterniii3.github.io/drugdevelopR/reference/fmax.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Density for the maximum of two normally distributed random variables — fmax","text":"","code":"fmax(z, mu1, mu2, sigma1, sigma2, rho)"},{"path":"https://sterniii3.github.io/drugdevelopR/reference/fmax.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Density for the maximum of two normally distributed random variables — fmax","text":"z integral variable mu1 mean second endpoint mu2 mean first endpoint sigma1 standard deviation first endpoint sigma2 standard deviation second endpoint rho correlation two endpoints","code":""},{"path":"https://sterniii3.github.io/drugdevelopR/reference/fmax.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Density for the maximum of two normally distributed random variables — fmax","text":"function fmax() return value f(z), value density function maximum two normally distributed random variables.","code":""},{"path":"https://sterniii3.github.io/drugdevelopR/reference/fmax.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Density for the maximum of two normally distributed random variables — fmax","text":"Z = max(X,Y) X ~ N(mu1,sigma1^2), Y ~ N(mu2,sigma2^2) f(z)=f1(-z)+f2(-z)","code":""},{"path":"https://sterniii3.github.io/drugdevelopR/reference/fmax.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Density for the maximum of two normally distributed random variables — fmax","text":"","code":"res <- fmax(z = 0.5, mu1 = 0.375, mu2 = 0.25, sigma1 = 8, sigma2 = 12, rho = 0.4 )"},{"path":"https://sterniii3.github.io/drugdevelopR/reference/fmin.html","id":null,"dir":"Reference","previous_headings":"","what":"Density for the minimum of two normally distributed random variables — fmin","title":"Density for the minimum of two normally distributed random variables — fmin","text":"function fmin() return value f(z), value density function minimum two normally distributed random variables.","code":""},{"path":"https://sterniii3.github.io/drugdevelopR/reference/fmin.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Density for the minimum of two normally distributed random variables — fmin","text":"","code":"fmin(y, mu1, mu2, sigma1, sigma2, rho)"},{"path":"https://sterniii3.github.io/drugdevelopR/reference/fmin.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Density for the minimum of two normally distributed random variables — fmin","text":"y integral variable mu1 mean second endpoint mu2 mean first endpoint sigma1 standard deviation first endpoint sigma2 standard deviation second endpoint rho correlation two endpoints","code":""},{"path":"https://sterniii3.github.io/drugdevelopR/reference/fmin.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Density for the minimum of two normally distributed random variables — fmin","text":"function fmin() return value f(z), value density function minimum two normally distributed random variables.","code":""},{"path":"https://sterniii3.github.io/drugdevelopR/reference/fmin.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Density for the minimum of two normally distributed random variables — fmin","text":"Z= min(X,Y) X ~ N(mu1,sigma1^2), Y ~ N(mu2,sigma2^2) f(z)=f1(z)+f2(z)","code":""},{"path":"https://sterniii3.github.io/drugdevelopR/reference/fmin.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Density for the minimum of two normally distributed random variables — fmin","text":"","code":"res <- fmin(y = 0.5, mu1 = 0.375, mu2 = 0.25, sigma1 = 8, sigma2 = 12, rho = 0.4 )"},{"path":"https://sterniii3.github.io/drugdevelopR/reference/optimal_bias.html","id":null,"dir":"Reference","previous_headings":"","what":"Optimal phase II/III drug development planning for time-to-event endpoints\nwhen discounting phase II results — optimal_bias","title":"Optimal phase II/III drug development planning for time-to-event endpoints\nwhen discounting phase II results — optimal_bias","text":"function optimal_bias drugdevelopR package enables planning phase II/III drug development programs optimal sample size allocation go/-go decision rules including methods discounting phase II results time--event endpoints (Preussler et. al, 2020). discounting may necessary programs proceed phase III can overoptimistic treatment effect (.e. biased). assumed true treatment effects can assumed fixed (planning also possible via user friendly R Shiny App: bias) modelled prior distribution. R Shiny application prior visualizes prior distributions used package. Fast computing enabled parallel programming.","code":""},{"path":"https://sterniii3.github.io/drugdevelopR/reference/optimal_bias.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Optimal phase II/III drug development planning for time-to-event endpoints\nwhen discounting phase II results — optimal_bias","text":"","code":"optimal_bias(   w,   hr1,   hr2,   id1,   id2,   d2min,   d2max,   stepd2,   hrgomin,   hrgomax,   stephrgo,   adj = \"both\",   lambdamin = NULL,   lambdamax = NULL,   steplambda = NULL,   alphaCImin = NULL,   alphaCImax = NULL,   stepalphaCI = NULL,   alpha,   beta,   xi2,   xi3,   c2,   c3,   c02,   c03,   K = Inf,   N = Inf,   S = -Inf,   steps1 = 1,   stepm1 = 0.95,   stepl1 = 0.85,   b1,   b2,   b3,   fixed = FALSE,   num_cl = 1 )"},{"path":"https://sterniii3.github.io/drugdevelopR/reference/optimal_bias.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Optimal phase II/III drug development planning for time-to-event endpoints\nwhen discounting phase II results — optimal_bias","text":"w weight mixture prior distribution hr1 first assumed true treatment effect HR scale prior distribution, see vignette priors well Shiny app details concerning definition prior distribution. hr2 second assumed true treatment effect HR scale prior distribution id1 amount information hr1 terms number events id2 amount information hr2 terms number events d2min minimal number events phase II d2max maximal number events phase II stepd2 stepsize optimization d2 hrgomin minimal threshold value go/-go decision rule hrgomax maximal threshold value go/-go decision rule stephrgo stepsize optimization HRgo adj choose type adjustment: \"multiplicative\", \"additive\", \"\" \"\". using \"\", res[1,] contains results using multiplicative method res[2,] contains results using additive method. using \"\", also res[3,] res[4,], containing results multiplicative additive method adjust treatment effect also threshold value decision rule. lambdamin minimal multiplicative adjustment parameter lambda (.e. use estimate retention factor) lambdamax maximal multiplicative adjustment parameter lambda (.e. use estimate retention factor) steplambda stepsize adjustment parameter lambda alphaCImin minimal additive adjustment parameter alphaCI (.e adjust lower bound one-sided confidence interval) alphaCImax maximal additive adjustment parameter alphaCI (.e adjust lower bound one-sided confidence interval) stepalphaCI stepsize alphaCI alpha one-sided significance level beta 1-beta power calculation number events phase III Schoenfeld (1981) formula xi2 event rate phase II xi3 event rate phase III c2 variable per-patient cost phase II 10^5 $ c3 variable per-patient cost phase III 10^5 $ c02 fixed cost phase II 10^5 $ c03 fixed cost phase III 10^5 $ K constraint costs program, default: Inf, e.g. constraint N constraint total expected sample size program, default: Inf, e.g., constraint S constraint expected probability successful program, default: -Inf, e.g., constraint steps1 lower boundary effect size category \"small\" HR scale, default: 1 stepm1 lower boundary effect size category \"medium\" HR scale = upper boundary effect size category \"small\" HR scale, default: 0.95 stepl1 lower boundary effect size category \"large\" HR scale = upper boundary effect size category \"medium\" HR scale, default: 0.85 b1 expected gain effect size category \"small\" 10^5 $ b2 expected gain effect size category \"medium\" 10^5 $ b3 expected gain effect size category \"large\" 10^5 $ fixed choose true treatment effects fixed random, TRUE hr1 used fixed effect num_cl number clusters used parallel computing, default: 1","code":""},{"path":"https://sterniii3.github.io/drugdevelopR/reference/optimal_bias.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Optimal phase II/III drug development planning for time-to-event endpoints\nwhen discounting phase II results — optimal_bias","text":"output function data.frame object containing optimization results: Adj optimal adjustment parameter (lambda alphaCI according Method) u maximal expected utility optimization constraints, .e. expected utility optimal sample size threshold value HRgo optimal threshold value decision rule go phase III d2 optimal total number events phase II d3 total expected number events phase III; rounded next natural number d total expected number events program; d = d2 + d3 n2 total sample size phase II; rounded next even natural number n3 total sample size phase III; rounded next even natural number n total sample size program; n = n2 + n3 K maximal costs program pgo probability go phase III sProg probability successful program sProg1 probability successful program \"small\" treatment effect phase III sProg2 probability successful program \"medium\" treatment effect phase III sProg3 probability successful program \"large\" treatment effect phase III K2 expected costs phase II K3 expected costs phase III input parameters. Taking cat(comment()) data frame lists used optimization sequences, start finish date optimization procedure.","code":""},{"path":"https://sterniii3.github.io/drugdevelopR/reference/optimal_bias.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Optimal phase II/III drug development planning for time-to-event endpoints\nwhen discounting phase II results — optimal_bias","text":"IQWiG (2016). Allgemeine Methoden. Version 5.0, 10.07.2016, Technical Report. Available https://www.iqwig.de/de/methoden/methodenpapier.3020.html, assessed last 15.05.19. Preussler, S., Kirchner, M., Goette, H., Kieser, M. (2020). Optimal designs phase II/III drug development programs including methods discounting phase II results. Submitted peer-review journal. Schoenfeld, D. (1981). asymptotic properties nonparametric tests comparing survival distributions. Biometrika, 68(1), 316-319.","code":""},{"path":"https://sterniii3.github.io/drugdevelopR/reference/optimal_bias.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Optimal phase II/III drug development planning for time-to-event endpoints\nwhen discounting phase II results — optimal_bias","text":"","code":"res <- optimal_bias(w = 0.3,                                 # define parameters for prior   hr1 = 0.69, hr2 = 0.88, id1 = 210, id2 = 420,              # (https://web.imbi.uni-heidelberg.de/prior/)   d2min = 20, d2max = 100, stepd2 = 5,                       # define optimization set for d2   hrgomin = 0.7, hrgomax = 0.9, stephrgo = 0.05,             # define optimization set for HRgo   adj = \"both\",                                              # choose type of adjustment   lambdamin = 0.2, lambdamax = 1, steplambda = 0.05,         # define optimization set for lambda   alphaCImin = 0.025, alphaCImax = 0.5, stepalphaCI = 0.025, # define optimization set for alphaCI   alpha = 0.025, beta = 0.1, xi2 = 0.7, xi3 = 0.7,            # drug development planning parameters   c2 = 0.75, c3 = 1, c02 = 100, c03 = 150,                   # define fixed and variable costs for phase II and III   K = Inf, N = Inf, S = -Inf,                                # set maximal costs/ expected sample size for the program or minimal expected probability of a successful program   steps1 = 1,                                                # define lower boundary for \"small\"   stepm1 = 0.95,                                             # \"medium\"   stepl1 = 0.85,                                             # and \"large\" treatment effect size categories as proposed by IQWiG (2016)   b1 = 1000, b2 = 2000, b3 = 3000,                           # define expected benefit for a \"small\", \"medium\" and \"large\" treatment effect   fixed = FALSE,                                             # choose if true treatment effects are fixed or random   num_cl = 1)                                                # set number of cores used for parallelized computing (check maximum number possible with detectCores()) #>  #> Optimization progess for adjustment type  multiplicative #>  #>    |                                                                               |                                                                      |   0%   |                                                                               |====                                                                  |   6%   |                                                                               |========                                                              |  12%   |                                                                               |============                                                          |  18%   |                                                                               |================                                                      |  24%   |                                                                               |=====================                                                 |  29%   |                                                                               |=========================                                             |  35%   |                                                                               |=============================                                         |  41%   |                                                                               |=================================                                     |  47%   |                                                                               |=====================================                                 |  53%   |                                                                               |=========================================                             |  59%   |                                                                               |=============================================                         |  65%   |                                                                               |=================================================                     |  71%   |                                                                               |======================================================                |  76%   |                                                                               |==========================================================            |  82%   |                                                                               |==============================================================        |  88%   |                                                                               |==================================================================    |  94%   |                                                                               |======================================================================| 100% #> Optimization progess for adjustment type  additive #>  #>    |                                                                               |                                                                      |   0%   |                                                                               |====                                                                  |   5%   |                                                                               |=======                                                               |  10%   |                                                                               |==========                                                            |  15%   |                                                                               |==============                                                        |  20%   |                                                                               |==================                                                    |  25%   |                                                                               |=====================                                                 |  30%   |                                                                               |========================                                              |  35%   |                                                                               |============================                                          |  40%   |                                                                               |================================                                      |  45%   |                                                                               |===================================                                   |  50%   |                                                                               |======================================                                |  55%   |                                                                               |==========================================                            |  60%   |                                                                               |==============================================                        |  65%   |                                                                               |=================================================                     |  70%   |                                                                               |====================================================                  |  75%   |                                                                               |========================================================              |  80%   |                                                                               |============================================================          |  85%   |                                                                               |===============================================================       |  90%   |                                                                               |==================================================================    |  95%   |                                                                               |======================================================================| 100% #>  #>  #> Optimization result: #>  #>      Method     u   Adj HRgo d2  d3   d  n2  n3   n  pgo sProg   w  hr1  hr2 #> 12 multipl. 98.28 0.750 0.75 85 153 238 122 218 340 0.36  0.24 0.3 0.69 0.88 #> 19     add. 75.95 0.475 0.80 90 161 251 130 230 360 0.45  0.26 0.3 0.69 0.88 #>    id1 id2   K   N    S  K2  K3 sProg1 sProg2 sProg3 steps1 stepm1 stepl1 alpha #> 12 210 420 Inf Inf -Inf 192 273   0.04   0.08   0.12      1   0.95   0.85 0.025 #> 19 210 420 Inf Inf -Inf 198 298   0.05   0.09   0.11      1   0.95   0.85 0.025 #>    beta xi2 xi3 c02 c03   c2 c3   b1   b2   b3 #> 12  0.1 0.7 0.7 100 150 0.75  1 1000 2000 3000 #> 19  0.1 0.7 0.7 100 150 0.75  1 1000 2000 3000 #>  res #>      Method     u   Adj HRgo d2  d3   d  n2  n3   n  pgo sProg   w  hr1  hr2 #> 12 multipl. 98.28 0.750 0.75 85 153 238 122 218 340 0.36  0.24 0.3 0.69 0.88 #> 19     add. 75.95 0.475 0.80 90 161 251 130 230 360 0.45  0.26 0.3 0.69 0.88 #>    id1 id2   K   N    S  K2  K3 sProg1 sProg2 sProg3 steps1 stepm1 stepl1 alpha #> 12 210 420 Inf Inf -Inf 192 273   0.04   0.08   0.12      1   0.95   0.85 0.025 #> 19 210 420 Inf Inf -Inf 198 298   0.05   0.09   0.11      1   0.95   0.85 0.025 #>    beta xi2 xi3 c02 c03   c2 c3   b1   b2   b3 #> 12  0.1 0.7 0.7 100 150 0.75  1 1000 2000 3000 #> 19  0.1 0.7 0.7 100 150 0.75  1 1000 2000 3000 cat(comment(res))                                            # displays the optimization sequence, start and finish date of the optimization procedure. #>  #> optimization sequence HRgo: 0.7 0.75 0.8 0.85 0.9  #> optimization sequence d2: 20 25 30 35 40 45 50 55 60 65 70 75 80 85 90 95 100  #> set on date: 2023-01-23 23:46:46  #> finish date: 2023-01-23 23:51:53"},{"path":"https://sterniii3.github.io/drugdevelopR/reference/optimal_bias_binary.html","id":null,"dir":"Reference","previous_headings":"","what":"Optimal phase II/III drug development planning when discounting phase II results with binary endpoint — optimal_bias_binary","title":"Optimal phase II/III drug development planning when discounting phase II results with binary endpoint — optimal_bias_binary","text":"function optimal_bias_binary drugdevelopR package enables planning phase II/III drug development programs optimal sample size allocation go/-go decision rules including methods discounting phase II results binary endpoints (Preussler et. al, 2020). discounting may necessary programs proceed phase III can overoptimistic treatment effect (.e. biased). assumed true treatment effects can assumed fixed modelled prior distribution. R Shiny application prior visualizes prior distributions used package. Fast computing enabled parallel programming.","code":""},{"path":"https://sterniii3.github.io/drugdevelopR/reference/optimal_bias_binary.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Optimal phase II/III drug development planning when discounting phase II results with binary endpoint — optimal_bias_binary","text":"","code":"optimal_bias_binary(   w,   p0,   p11,   p12,   in1,   in2,   n2min,   n2max,   stepn2,   rrgomin,   rrgomax,   steprrgo,   adj = \"both\",   lambdamin = NULL,   lambdamax = NULL,   steplambda = NULL,   alphaCImin = NULL,   alphaCImax = NULL,   stepalphaCI = NULL,   alpha,   beta,   c2,   c3,   c02,   c03,   K = Inf,   N = Inf,   S = -Inf,   steps1 = 1,   stepm1 = 0.95,   stepl1 = 0.85,   b1,   b2,   b3,   fixed = FALSE,   num_cl = 1 )"},{"path":"https://sterniii3.github.io/drugdevelopR/reference/optimal_bias_binary.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Optimal phase II/III drug development planning when discounting phase II results with binary endpoint — optimal_bias_binary","text":"w weight mixture prior distribution p0 assumed true rate control group, see details p11 assumed true rate treatment group, see details p12 assumed true rate treatment group, see details in1 amount information p11 terms sample size, see details in2 amount information p12 terms sample size, see details n2min minimal total sample size phase II; must even number n2max maximal total sample size phase II, must even number stepn2 step size optimization n2; must even number rrgomin minimal threshold value go/-go decision rule rrgomax maximal threshold value go/-go decision rule steprrgo step size optimization RRgo adj choose type adjustment: \"multiplicative\", \"additive\", \"\" \"\". using \"\", res[1,] contains results using multiplicative method res[2,] contains results using additive method. using \"\", also res[3,] res[4,], containing results multiplicative additive method adjust treatment effect also threshold value decision rule. lambdamin minimal multiplicative adjustment parameter lambda (.e. use estimate retention factor) lambdamax maximal multiplicative adjustment parameter lambda (.e. use estimate retention factor) steplambda stepsize adjustment parameter lambda alphaCImin minimal additive adjustment parameter alphaCI (.e adjust lower bound one-sided confidence interval) alphaCImax maximal additive adjustment parameter alphaCI (.e adjust lower bound one-sided confidence interval) stepalphaCI stepsize alphaCI alpha significance level beta type II error rate; .e. 1 - beta power calculation number events phase III c2 variable per-patient cost phase II 10^5 $ c3 variable per-patient cost phase III 10^5 $ c02 fixed cost phase II 10^5 $ c03 fixed cost phase III 10^5 $ K constraint costs program, default: Inf, e.g. constraint N constraint total expected sample size program, default: Inf, e.g. constraint S constraint expected probability successful program, default: -Inf, e.g. constraint steps1 lower boundary effect size category \"small\" RR scale, default: 1 stepm1 lower boundary effect size category \"medium\" RR scale = upper boundary effect size category \"small\" RR scale, default: 0.95 stepl1 lower boundary effect size category \"large\" RR scale = upper boundary effect size category \"medium\" RR scale, default: 0.85 b1 expected gain effect size category \"small\" b2 expected gain effect size category \"medium\" b3 expected gain effect size category \"large\" fixed choose true treatment effects fixed random, TRUE p11 used fixed effect p1 num_cl number clusters used parallel computing, default: 1","code":""},{"path":"https://sterniii3.github.io/drugdevelopR/reference/optimal_bias_binary.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Optimal phase II/III drug development planning when discounting phase II results with binary endpoint — optimal_bias_binary","text":"output function data.frame object containing optimization results: Adj optimal adjustment parameter (lambda alphaCI according Method) u maximal expected utility optimization constraints, .e. expected utility optimal sample size threshold value RRgo optimal threshold value decision rule go phase III n2 total sample size phase II; rounded next even natural number n3 total sample size phase III; rounded next even natural number n total sample size program; n = n2 + n3 K maximal costs program pgo probability go phase III sProg probability successful program sProg1 probability successful program \"small\" treatment effect phase III sProg2 probability successful program \"medium\" treatment effect phase III sProg3 probability successful program \"large\" treatment effect phase III K2 expected costs phase II K3 expected costs phase III input parameters. Taking cat(comment()) data frame lists used optimization sequences, start finish date optimization procedure.","code":""},{"path":"https://sterniii3.github.io/drugdevelopR/reference/optimal_bias_binary.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Optimal phase II/III drug development planning when discounting phase II results with binary endpoint — optimal_bias_binary","text":"IQWiG (2016). Allgemeine Methoden. Version 5.0, 10.07.2016, Technical Report. Available https://www.iqwig.de/de/methoden/methodenpapier.3020.html, assessed last 15.05.19.","code":""},{"path":"https://sterniii3.github.io/drugdevelopR/reference/optimal_bias_binary.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Optimal phase II/III drug development planning when discounting phase II results with binary endpoint — optimal_bias_binary","text":"","code":"res <- optimal_bias_binary(w = 0.3,                           # define parameters for prior   p0 = 0.6, p11 =  0.3, p12 = 0.5, in1 = 30, in2 = 60,   # (https://web.imbi.uni-heidelberg.de/prior/)   n2min = 20, n2max = 100, stepn2 = 4,                   # define optimization set for n2   rrgomin = 0.7, rrgomax = 0.9, steprrgo = 0.05,         # define optimization set for RRgo   adj = \"both\",                                          # choose type of adjustment   alpha = 0.05, beta = 0.1,                              # drug development planning parameters   lambdamin = 0.2, lambdamax = 1, steplambda = 0.05,     # define optimization set for lambda   alphaCImin = 0.025, alphaCImax = 0.5, stepalphaCI = 0.025, # define optimization set for alphaCI   c2 = 0.75, c3 = 1, c02 = 100, c03 = 150,               # define fixed and variable costs for phase II and III,   K = Inf, N = Inf, S = -Inf,                            # set maximal costs/ expected sample size for the program or minimal expected probability of a successful program   steps1 = 1,                                            # define lower boundary for \"small\"   stepm1 = 0.95,                                         # \"medium\"   stepl1 = 0.85,                                         # and \"large\" treatment effect size categories as proposed by IQWiG (2016)   b1 = 1000, b2 = 2000, b3 = 3000,                       # define expected benefit for a \"small\", \"medium\" and \"large\" treatment effect   fixed = FALSE,                                         # choose if true treatment effects are fixed or random   num_cl = 1)                                            # set number of cores used for parallelized computing (check maximum number possible with detectCores()) #>  #> Optimization progess for adjustment type  multiplicative #>  #>    |                                                                               |                                                                      |   0%   |                                                                               |====                                                                  |   6%   |                                                                               |========                                                              |  12%   |                                                                               |============                                                          |  18%   |                                                                               |================                                                      |  24%   |                                                                               |=====================                                                 |  29%   |                                                                               |====                                                                  |   6%   |                                                                               |========                                                              |  12%   |                                                                               |============                                                          |  18%   |                                                                               |================                                                      |  24%   |                                                                               |=====================                                                 |  29%   |                                                                               |====                                                                  |   6%   |                                                                               |========                                                              |  12%   |                                                                               |============                                                          |  18%   |                                                                               |================                                                      |  24%   |                                                                               |=====================                                                 |  29%   |                                                                               |====                                                                  |   6%   |                                                                               |========                                                              |  12%   |                                                                               |============                                                          |  18%   |                                                                               |================                                                      |  24%   |                                                                               |=====================                                                 |  29%   |                                                                               |====                                                                  |   6%   |                                                                               |========                                                              |  12%   |                                                                               |============                                                          |  18%   |                                                                               |================                                                      |  24%   |                                                                               |=====================                                                 |  29%   |                                                                               |====                                                                  |   6%   |                                                                               |========                                                              |  12%   |                                                                               |============                                                          |  18%   |                                                                               |================                                                      |  24%   |                                                                               |=====================                                                 |  29%   |                                                                               |====                                                                  |   6%   |                                                                               |========                                                              |  12%   |                                                                               |============                                                          |  18%   |                                                                               |================                                                      |  24%   |                                                                               |=====================                                                 |  29%   |                                                                               |====                                                                  |   6%   |                                                                               |========                                                              |  12%   |                                                                               |============                                                          |  18%   |                                                                               |================                                                      |  24%   |                                                                               |=====================                                                 |  29%   |                                                                               |====                                                                  |   6%   |                                                                               |========                                                              |  12%   |                                                                               |============                                                          |  18%   |                                                                               |================                                                      |  24%   |                                                                               |=====================                                                 |  29%   |                                                                               |====                                                                  |   6%   |                                                                               |========                                                              |  12%   |                                                                               |============                                                          |  18%   |                                                                               |================                                                      |  24%   |                                                                               |=====================                                                 |  29%   |                                                                               |====                                                                  |   6%   |                                                                               |========                                                              |  12%   |                                                                               |============                                                          |  18%   |                                                                               |================                                                      |  24%   |                                                                               |=====================                                                 |  29%   |                                                                               |====                                                                  |   6%   |                                                                               |========                                                              |  12%   |                                                                               |============                                                          |  18%   |                                                                               |================                                                      |  24%   |                                                                               |=====================                                                 |  29%   |                                                                               |====                                                                  |   6%   |                                                                               |========                                                              |  12%   |                                                                               |============                                                          |  18%   |                                                                               |================                                                      |  24%   |                                                                               |=====================                                                 |  29%   |                                                                               |====                                                                  |   6%   |                                                                               |========                                                              |  12%   |                                                                               |============                                                          |  18%   |                                                                               |================                                                      |  24%   |                                                                               |=====================                                                 |  29%   |                                                                               |====                                                                  |   6%   |                                                                               |========                                                              |  12%   |                                                                               |============                                                          |  18%   |                                                                               |================                                                      |  24%   |                                                                               |=====================                                                 |  29%   |                                                                               |====                                                                  |   6%   |                                                                               |========                                                              |  12%   |                                                                               |============                                                          |  18%   |                                                                               |================                                                      |  24%   |                                                                               |=====================                                                 |  29%   |                                                                               |====                                                                  |   6%   |                                                                               |========                                                              |  12%   |                                                                               |============                                                          |  18%   |                                                                               |================                                                      |  24%   |                                                                               |=====================                                                 |  29% #> Optimization progess for adjustment type  additive #>  #>    |                                                                               |                                                                      |   0%   |                                                                               |====                                                                  |   5%   |                                                                               |=======                                                               |  10%   |                                                                               |==========                                                            |  15%   |                                                                               |==============                                                        |  20%   |                                                                               |==================                                                    |  25%   |                                                                               |====                                                                  |   5%   |                                                                               |=======                                                               |  10%   |                                                                               |==========                                                            |  15%   |                                                                               |==============                                                        |  20%   |                                                                               |==================                                                    |  25%   |                                                                               |====                                                                  |   5%   |                                                                               |=======                                                               |  10%   |                                                                               |==========                                                            |  15%   |                                                                               |==============                                                        |  20%   |                                                                               |==================                                                    |  25%   |                                                                               |====                                                                  |   5%   |                                                                               |=======                                                               |  10%   |                                                                               |==========                                                            |  15%   |                                                                               |==============                                                        |  20%   |                                                                               |==================                                                    |  25%   |                                                                               |====                                                                  |   5%   |                                                                               |=======                                                               |  10%   |                                                                               |==========                                                            |  15%   |                                                                               |==============                                                        |  20%   |                                                                               |==================                                                    |  25%   |                                                                               |====                                                                  |   5%   |                                                                               |=======                                                               |  10%   |                                                                               |==========                                                            |  15%   |                                                                               |==============                                                        |  20%   |                                                                               |==================                                                    |  25%   |                                                                               |====                                                                  |   5%   |                                                                               |=======                                                               |  10%   |                                                                               |==========                                                            |  15%   |                                                                               |==============                                                        |  20%   |                                                                               |==================                                                    |  25%   |                                                                               |====                                                                  |   5%   |                                                                               |=======                                                               |  10%   |                                                                               |==========                                                            |  15%   |                                                                               |==============                                                        |  20%   |                                                                               |==================                                                    |  25%   |                                                                               |====                                                                  |   5%   |                                                                               |=======                                                               |  10%   |                                                                               |==========                                                            |  15%   |                                                                               |==============                                                        |  20%   |                                                                               |==================                                                    |  25%   |                                                                               |====                                                                  |   5%   |                                                                               |=======                                                               |  10%   |                                                                               |==========                                                            |  15%   |                                                                               |==============                                                        |  20%   |                                                                               |==================                                                    |  25%   |                                                                               |====                                                                  |   5%   |                                                                               |=======                                                               |  10%   |                                                                               |==========                                                            |  15%   |                                                                               |==============                                                        |  20%   |                                                                               |==================                                                    |  25%   |                                                                               |====                                                                  |   5%   |                                                                               |=======                                                               |  10%   |                                                                               |==========                                                            |  15%   |                                                                               |==============                                                        |  20%   |                                                                               |==================                                                    |  25%   |                                                                               |====                                                                  |   5%   |                                                                               |=======                                                               |  10%   |                                                                               |==========                                                            |  15%   |                                                                               |==============                                                        |  20%   |                                                                               |==================                                                    |  25%   |                                                                               |====                                                                  |   5%   |                                                                               |=======                                                               |  10%   |                                                                               |==========                                                            |  15%   |                                                                               |==============                                                        |  20%   |                                                                               |==================                                                    |  25%   |                                                                               |====                                                                  |   5%   |                                                                               |=======                                                               |  10%   |                                                                               |==========                                                            |  15%   |                                                                               |==============                                                        |  20%   |                                                                               |==================                                                    |  25%   |                                                                               |====                                                                  |   5%   |                                                                               |=======                                                               |  10%   |                                                                               |==========                                                            |  15%   |                                                                               |==============                                                        |  20%   |                                                                               |==================                                                    |  25%   |                                                                               |====                                                                  |   5%   |                                                                               |=======                                                               |  10%   |                                                                               |==========                                                            |  15%   |                                                                               |==============                                                        |  20%   |                                                                               |==================                                                    |  25%   |                                                                               |====                                                                  |   5%   |                                                                               |=======                                                               |  10%   |                                                                               |==========                                                            |  15%   |                                                                               |==============                                                        |  20%   |                                                                               |==================                                                    |  25%   |                                                                               |====                                                                  |   5%   |                                                                               |=======                                                               |  10%   |                                                                               |==========                                                            |  15%   |                                                                               |==============                                                        |  20%   |                                                                               |==================                                                    |  25%   |                                                                               |====                                                                  |   5%   |                                                                               |=======                                                               |  10%   |                                                                               |==========                                                            |  15%   |                                                                               |==============                                                        |  20%   |                                                                               |==================                                                    |  25% #>  #>  #> Optimization result: #>  #>      Method      u   Adj RRgo  n2  n3   n  pgo sProg   w  p0 p11 p12 in1 in2 #> 11 multipl. 776.51 0.700 0.85 100 370 470 0.66  0.56 0.3 0.6 0.3 0.5  30  60 #> 17     add. 688.38 0.425 0.85 100 216 316 0.66  0.48 0.3 0.6 0.3 0.5  30  60 #>      K  K2  K3 sProg1 sProg2 sProg3 steps1 stepm1 stepl1 alpha beta c02 c03 #> 11 Inf 175 469   0.06   0.14   0.36      1   0.95   0.85  0.05  0.1 100 150 #> 17 Inf 175 315   0.06   0.13   0.28      1   0.95   0.85  0.05  0.1 100 150 #>      c2 c3   b1   b2   b3 #> 11 0.75  1 1000 2000 3000 #> 17 0.75  1 1000 2000 3000 #>  res #>      Method      u   Adj RRgo  n2  n3   n  pgo sProg   w  p0 p11 p12 in1 in2 #> 11 multipl. 776.51 0.700 0.85 100 370 470 0.66  0.56 0.3 0.6 0.3 0.5  30  60 #> 17     add. 688.38 0.425 0.85 100 216 316 0.66  0.48 0.3 0.6 0.3 0.5  30  60 #>      K  K2  K3 sProg1 sProg2 sProg3 steps1 stepm1 stepl1 alpha beta c02 c03 #> 11 Inf 175 469   0.06   0.14   0.36      1   0.95   0.85  0.05  0.1 100 150 #> 17 Inf 175 315   0.06   0.13   0.28      1   0.95   0.85  0.05  0.1 100 150 #>      c2 c3   b1   b2   b3 #> 11 0.75  1 1000 2000 3000 #> 17 0.75  1 1000 2000 3000 cat(comment(res))                                        # displays the optimization sequence, start and finish date of the optimization procedure. #>  #> optimization sequence RRgo: 0.7 0.75 0.8 0.85 0.9  #> optimization sequence n2: 20 24 28 32 36 40 44 48 52 56 60 64 68 72 76 80 84 88 92 96 100  #> set on date: 2023-01-23 23:51:53  #> finish date: 2023-01-24 00:00:43"},{"path":"https://sterniii3.github.io/drugdevelopR/reference/optimal_bias_normal.html","id":null,"dir":"Reference","previous_headings":"","what":"Optimal phase II/III drug development planning when discounting phase II results with normally distributed endpoint — optimal_bias_normal","title":"Optimal phase II/III drug development planning when discounting phase II results with normally distributed endpoint — optimal_bias_normal","text":"function optimal_bias_normal drugdevelopR package enables planning phase II/III drug development programs optimal sample size allocation go/-go decision rules including methods discounting phase II results normally distributed endpoints (Preussler et. al, 2020). discounting may necessary programs proceed phase III can overoptimistic treatment effect (.e. biased). assumed true treatment effects can assumed fixed modelled prior distribution. R Shiny application prior visualizes prior distributions used package. Fast computing enabled parallel programming.","code":""},{"path":"https://sterniii3.github.io/drugdevelopR/reference/optimal_bias_normal.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Optimal phase II/III drug development planning when discounting phase II results with normally distributed endpoint — optimal_bias_normal","text":"","code":"optimal_bias_normal(   w,   Delta1,   Delta2,   in1,   in2,   a,   b,   n2min,   n2max,   stepn2,   kappamin,   kappamax,   stepkappa,   adj = \"both\",   lambdamin = NULL,   lambdamax = NULL,   steplambda = NULL,   alphaCImin = NULL,   alphaCImax = NULL,   stepalphaCI = NULL,   alpha,   beta,   c2,   c3,   c02,   c03,   K = Inf,   N = Inf,   S = -Inf,   steps1 = 0,   stepm1 = 0.5,   stepl1 = 0.8,   b1,   b2,   b3,   fixed = FALSE,   num_cl = 1 )"},{"path":"https://sterniii3.github.io/drugdevelopR/reference/optimal_bias_normal.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Optimal phase II/III drug development planning when discounting phase II results with normally distributed endpoint — optimal_bias_normal","text":"w weight mixture prior distribution Delta1 assumed true prior treatment effect measured standardized difference means, see details Delta2 assumed true prior treatment effect measured standardized difference means, see details in1 amount information Delta1 terms sample size, see details in2 amount information Delta2 terms sample size, see details lower boundary truncation prior distribution b upper boundary truncation prior distribution n2min minimal total sample size phase II; must even number n2max maximal total sample size phase II, must even number stepn2 step size optimization n2; must even number kappamin minimal threshold value kappa go/-go decision rule kappamax maximal threshold value  kappa go/-go decision rule stepkappa step size optimization threshold value kappa adj choose type adjustment: \"multiplicative\", \"additive\", \"\" \"\". using \"\", res[1,] contains results using multiplicative method res[2,] contains results using additive method. using \"\", also res[3,] res[4,], containing results multiplicative additive method adjust treatment effect also threshold value decision rule. lambdamin minimal multiplicative adjustment parameter lambda (.e. use estimate retention factor) lambdamax maximal multiplicative adjustment parameter lambda (.e. use estimate retention factor) steplambda stepsize adjustment parameter lambda alphaCImin minimal additive adjustment parameter alphaCI (.e adjust lower bound one-sided confidence interval) alphaCImax maximal additive adjustment parameter alphaCI (.e adjust lower bound one-sided confidence interval) stepalphaCI stepsize alphaCI alpha significance level beta type II error rate; .e. 1 - beta power calculation sample size phase III c2 variable per-patient cost phase II 10^5 $ c3 variable per-patient cost phase III 10^5 $ c02 fixed cost phase II 10^5 $ c03 fixed cost phase III 10^5 $ K constraint costs program, default: Inf, e.g. constraint N constraint total expected sample size program, default: Inf, e.g. constraint S constraint expected probability successful program, default: -Inf, e.g. constraint steps1 lower boundary effect size category \"small\", default: 0 stepm1 lower boundary effect size category \"medium\" = upper boundary effect size category \"small\" default: 0.5 stepl1 lower boundary effect size category \"large\" = upper boundary effect size category \"medium\", default: 0.8 b1 expected gain effect size category \"small\" 10^5 $ b2 expected gain effect size category \"medium\" 10^5 $ b3 expected gain effect size category \"large\" 10^5 $ fixed choose true treatment effects fixed following prior distribution, TRUE Delta1 used fixed effect num_cl number clusters used parallel computing, default: 1","code":""},{"path":"https://sterniii3.github.io/drugdevelopR/reference/optimal_bias_normal.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Optimal phase II/III drug development planning when discounting phase II results with normally distributed endpoint — optimal_bias_normal","text":"output function data.frame object containing optimization results: Adj optimal adjustment parameter (lambda alphaCI according Method) u maximal expected utility optimization constraints, .e. expected utility optimal sample size threshold value Kappa optimal threshold value decision rule go phase III n2 total sample size phase II; rounded next even natural number n3 total sample size phase III; rounded next even natural number n total sample size program; n = n2 + n3 K maximal costs program pgo probability go phase III sProg probability successful program sProg1 probability successful program \"small\" treatment effect phase III sProg2 probability successful program \"medium\" treatment effect phase III sProg3 probability successful program \"large\" treatment effect phase III K2 expected costs phase II K3 expected costs phase III input parameters. Taking cat(comment()) data frame lists used optimization sequences, start finish date optimization procedure.","code":""},{"path":"https://sterniii3.github.io/drugdevelopR/reference/optimal_bias_normal.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Optimal phase II/III drug development planning when discounting phase II results with normally distributed endpoint — optimal_bias_normal","text":"Cohen, J. (1988). Statistical power analysis behavioral sciences.","code":""},{"path":"https://sterniii3.github.io/drugdevelopR/reference/optimal_bias_normal.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Optimal phase II/III drug development planning when discounting phase II results with normally distributed endpoint — optimal_bias_normal","text":"","code":"res <- optimal_bias_normal(w=0.3,                                 # define parameters for prior   Delta1 = 0.375, Delta2 = 0.625, in1=300, in2=600,          # (https://web.imbi.uni-heidelberg.de/prior/)   a = 0.25, b = 0.75,   n2min = 20, n2max = 100, stepn2 = 4,                       # define optimization set for n2   kappamin = 0.02, kappamax = 0.2, stepkappa = 0.02,         # define optimization set for kappa   adj = \"both\",                                              # choose type of adjustment   lambdamin = 0.2, lambdamax = 1, steplambda = 0.05,         # define optimization set for lambda   alphaCImin = 0.025, alphaCImax = 0.5, stepalphaCI = 0.025, # define optimization set for alphaCI   alpha = 0.05, beta = 0.1,                                  # drug development planning parameters   c2 = 0.675, c3 = 0.72, c02 = 15, c03 = 20,                 # define fixed and variable costs for phase II and III   K = Inf, N = Inf, S = -Inf,                                # set maximal costs/ expected sample size for the program or minimal expected probability of a successful program   steps1 = 0,                                                # define lower boundary for \"small\"   stepm1 = 0.5,                                              # \"medium\"   stepl1 = 0.8,                                              # and \"large\" treatment effect size categories as proposed by e.g. Cohen (1988)   b1 = 3000, b2 = 8000, b3 = 10000,                          # define expected benefit for a \"small\", \"medium\" and \"large\" treatment effect   fixed = FALSE,                                             # choose if true treatment effects are fixed or random   num_cl = 1)                                                # set number of cores used for parallelized computing (check maximum number possible with detectCores()) #>  #> Optimization progess for adjustment type  multiplicative #>  #>    |                                                                               |                                                                      |   0%   |                                                                               |====                                                                  |   6%   |                                                                               |========                                                              |  12%   |                                                                               |============                                                          |  18%   |                                                                               |================                                                      |  24%   |                                                                               |=====================                                                 |  29%   |                                                                               |=========================                                             |  35%   |                                                                               |=============================                                         |  41%   |                                                                               |=================================                                     |  47%   |                                                                               |=====================================                                 |  53%   |                                                                               |=========================================                             |  59%   |                                                                               |=============================================                         |  65%   |                                                                               |=================================================                     |  71%   |                                                                               |======================================================                |  76%   |                                                                               |==========================================================            |  82%   |                                                                               |==============================================================        |  88%   |                                                                               |==================================================================    |  94%   |                                                                               |======================================================================| 100% #> Optimization progess for adjustment type  additive #>  #>    |                                                                               |                                                                      |   0%   |                                                                               |====                                                                  |   5%   |                                                                               |=======                                                               |  10%   |                                                                               |==========                                                            |  15%   |                                                                               |==============                                                        |  20%   |                                                                               |==================                                                    |  25%   |                                                                               |=====================                                                 |  30%   |                                                                               |========================                                              |  35%   |                                                                               |============================                                          |  40%   |                                                                               |================================                                      |  45%   |                                                                               |===================================                                   |  50%   |                                                                               |======================================                                |  55%   |                                                                               |==========================================                            |  60%   |                                                                               |==============================================                        |  65%   |                                                                               |=================================================                     |  70%   |                                                                               |====================================================                  |  75%   |                                                                               |========================================================              |  80%   |                                                                               |============================================================          |  85%   |                                                                               |===============================================================       |  90%   |                                                                               |==================================================================    |  95%   |                                                                               |======================================================================| 100% #>  #>  #> Optimization result: #>  #>      Method       u   Adj Kappa  n2  n3   n  pgo sProg   w Delta1 Delta2 in1 #> 10 multipl. 2488.57 0.650  0.14 100 566 666 0.91  0.87 0.3  0.375  0.625 300 #> 19     add. 2274.03 0.475  0.10 100 344 444 0.93  0.78 0.3  0.375  0.625 300 #>    in2    a    b   K K2  K3 sProg1 sProg2 sProg3 steps1 stepm1 stepl1 alpha #> 10 600 0.25 0.75 Inf 82 426   0.79   0.08      0      0    0.5    0.8  0.05 #> 19 600 0.25 0.75 Inf 82 266   0.73   0.05      0      0    0.5    0.8  0.05 #>    beta c02 c03    c2   c3   b1   b2    b3 #> 10  0.1  15  20 0.675 0.72 3000 8000 10000 #> 19  0.1  15  20 0.675 0.72 3000 8000 10000 #>  res #>      Method       u   Adj Kappa  n2  n3   n  pgo sProg   w Delta1 Delta2 in1 #> 10 multipl. 2488.57 0.650  0.14 100 566 666 0.91  0.87 0.3  0.375  0.625 300 #> 19     add. 2274.03 0.475  0.10 100 344 444 0.93  0.78 0.3  0.375  0.625 300 #>    in2    a    b   K K2  K3 sProg1 sProg2 sProg3 steps1 stepm1 stepl1 alpha #> 10 600 0.25 0.75 Inf 82 426   0.79   0.08      0      0    0.5    0.8  0.05 #> 19 600 0.25 0.75 Inf 82 266   0.73   0.05      0      0    0.5    0.8  0.05 #>    beta c02 c03    c2   c3   b1   b2    b3 #> 10  0.1  15  20 0.675 0.72 3000 8000 10000 #> 19  0.1  15  20 0.675 0.72 3000 8000 10000 cat(comment(res))                                        # displays the optimization sequence, start and finish date of the optimization procedure. #>  #> optimization sequence kappa: 0.02 0.04 0.06 0.08 0.1 0.12 0.14 0.16 0.18 0.2  #> optimization sequence n2: 20 24 28 32 36 40 44 48 52 56 60 64 68 72 76 80 84 88 92 96 100  #> set on date: 2023-01-24 00:00:43  #> finish date: 2023-01-24 00:46:05"},{"path":"https://sterniii3.github.io/drugdevelopR/reference/optimal_binary.html","id":null,"dir":"Reference","previous_headings":"","what":"Optimal phase II/III drug development planning with binary endpoint — optimal_binary","title":"Optimal phase II/III drug development planning with binary endpoint — optimal_binary","text":"optimal_binary function drugdevelopR package enables planning phase II/III drug development programs optimal sample size allocation go/-go decision rules binary endpoints. case, treatment effect measured risk ratio (RR). assumed true treatment effects can assumed fixed modelled prior distribution. R Shiny application prior visualizes prior distributions used package. Fast computing enabled parallel programming.","code":""},{"path":"https://sterniii3.github.io/drugdevelopR/reference/optimal_binary.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Optimal phase II/III drug development planning with binary endpoint — optimal_binary","text":"","code":"optimal_binary(   w,   p0,   p11,   p12,   in1,   in2,   n2min,   n2max,   stepn2,   rrgomin,   rrgomax,   steprrgo,   alpha,   beta,   c2,   c3,   c02,   c03,   K = Inf,   N = Inf,   S = -Inf,   steps1 = 1,   stepm1 = 0.95,   stepl1 = 0.85,   b1,   b2,   b3,   gamma = 0,   fixed = FALSE,   skipII = FALSE,   num_cl = 1 )"},{"path":"https://sterniii3.github.io/drugdevelopR/reference/optimal_binary.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Optimal phase II/III drug development planning with binary endpoint — optimal_binary","text":"w weight mixture prior distribution p0 assumed true rate control group, see details p11 assumed true rate treatment group, see details p12 assumed true rate treatment group, see details in1 amount information p11 terms sample size, see details in2 amount information p12 terms sample size, see details n2min minimal total sample size phase II; must even number n2max maximal total sample size phase II, must even number stepn2 step size optimization n2; must even number rrgomin minimal threshold value go/-go decision rule rrgomax maximal threshold value go/-go decision rule steprrgo step size optimization RRgo alpha significance level beta type II error rate; .e. 1 - beta power calculation number events phase III c2 variable per-patient cost phase II 10^5 $ c3 variable per-patient cost phase III 10^5 $ c02 fixed cost phase II 10^5 $ c03 fixed cost phase III 10^5 $ K constraint costs program, default: Inf, e.g. constraint N constraint total expected sample size program, default: Inf, e.g. constraint S constraint expected probability successful program, default: -Inf, e.g. constraint steps1 lower boundary effect size category \"small\" RR scale, default: 1 stepm1 lower boundary effect size category \"medium\" RR scale = upper boundary effect size category \"small\" RR scale, default: 0.95 stepl1 lower boundary effect size category \"large\" RR scale = upper boundary effect size category \"medium\" RR scale, default: 0.85 b1 expected gain effect size category \"small\" b2 expected gain effect size category \"medium\" b3 expected gain effect size category \"large\" gamma model different populations phase II III choose gamma != 0, default: 0, see details fixed choose true treatment effects fixed random, TRUE p11 used fixed effect p1 skipII skipII choose skipping phase II option, default: FALSE; TRUE, program calculates expected utility case phase II skipped compares situation phase II skipped. results returned list two results lists, res[[1]] results including phase II res[[2]] skipping phase II. num_cl number clusters used parallel computing, default: 1","code":""},{"path":"https://sterniii3.github.io/drugdevelopR/reference/optimal_binary.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Optimal phase II/III drug development planning with binary endpoint — optimal_binary","text":"output function data.frame object containing optimization results: RRgo optimal threshold value decision rule go phase III n2 total sample size phase II; rounded next even natural number n3 total sample size phase III; rounded next even natural number n total sample size program; n = n2 + n3 K maximal costs program pgo probability go phase III sProg probability successful program sProg1 probability successful program \"small\" treatment effect phase III sProg2 probability successful program \"medium\" treatment effect phase III sProg3 probability successful program \"large\" treatment effect phase III K2 expected costs phase II K3 expected costs phase III input parameters. Taking cat(comment()) data frame lists used optimization sequences, start finish date optimization procedure.","code":""},{"path":"https://sterniii3.github.io/drugdevelopR/reference/optimal_binary.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Optimal phase II/III drug development planning with binary endpoint — optimal_binary","text":"IQWiG (2016). Allgemeine Methoden. Version 5.0, 10.07.2016, Technical Report. Available https://www.iqwig.de/de/methoden/methodenpapier.3020.html, assessed last 15.05.19.","code":""},{"path":"https://sterniii3.github.io/drugdevelopR/reference/optimal_binary.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Optimal phase II/III drug development planning with binary endpoint — optimal_binary","text":"","code":"res <- optimal_binary(w = 0.3,                           # define parameters for prior   p0 = 0.6, p11 =  0.3, p12 = 0.5, in1 = 30, in2 = 60,   # (https://web.imbi.uni-heidelberg.de/prior/)   n2min = 20, n2max = 100, stepn2 = 4,                   # define optimization set for n2   rrgomin = 0.7, rrgomax = 0.9, steprrgo = 0.05,         # define optimization set for RRgo   alpha = 0.05, beta = 0.1,                              # drug development planning parameters   c2 = 0.75, c3 = 1, c02 = 100, c03 = 150,               # define fixed and variable costs for phase II and III,   K = Inf, N = Inf, S = -Inf,                            # set maximal costs/ expected sample size for the program or minimal expected probability of a successful program   steps1 = 1,                                            # define lower boundary for \"small\"   stepm1 = 0.95,                                         # \"medium\"   stepl1 = 0.85,                                         # and \"large\" treatment effect size categories as proposed by IQWiG (2016)   b1 = 1000, b2 = 2000, b3 = 3000,                       # define expected benefit for a \"small\", \"medium\" and \"large\" treatment effect   gamma = 0,                                             # assume different/same population structures in phase II and III   fixed = FALSE,                                         # choose if true treatment effects are fixed or random   skipII = FALSE,                                        # choose if skipping phase II would be an option   num_cl = 1)                                            # set number of cores used for parallelized computing (check maximum number possible with detectCores()) #> Optimization progress: #>  #>    |                                                                               |                                                                      |   0%   |                                                                               |==============                                                        |  20%   |                                                                               |============================                                          |  40%   |                                                                               |==========================================                            |  60%   |                                                                               |========================================================              |  80%   |                                                                               |======================================================================| 100% #>  #>  #> Optimization result: #>  #>  res #>        u RRgo  n2  n3   n  pgo sProg   w  p0 p11 p12 in1 in2   K  K2  K3 sProg1 #> 1 678.04 0.85 100 182 282 0.66  0.46 0.3 0.6 0.3 0.5  30  60 Inf 175 281   0.06 #>   sProg2 sProg3 steps1 stepm1 stepl1 alpha beta c02 c03   c2 c3   b1   b2   b3 #> 1   0.13   0.27      1   0.95   0.85  0.05  0.1 100 150 0.75  1 1000 2000 3000 #>   gamma #> 1     0 cat(comment(res))                                        # displays the optimization sequence, start and finish date of the optimization procedure. #>  #> optimization sequence RRgo: 0.7 0.75 0.8 0.85 0.9  #> optimization sequence n2: 20 24 28 32 36 40 44 48 52 56 60 64 68 72 76 80 84 88 92 96 100  #> set on date: 2023-01-24 00:46:05  #> finish date: 2023-01-24 00:46:16"},{"path":"https://sterniii3.github.io/drugdevelopR/reference/optimal_multiarm.html","id":null,"dir":"Reference","previous_headings":"","what":"Optimal phase II/III drug development planning for multi-arm programs with\ntime-to-event endpoint — optimal_multiarm","title":"Optimal phase II/III drug development planning for multi-arm programs with\ntime-to-event endpoint — optimal_multiarm","text":"function optimal_multiarm drugdevelopR package enables planning multi-arm phase II/III drug development programs optimal sample size allocation go/-go decision rules (Preussler et. al, 2019) time--event endpoints. far, three-arm trials two treatments one control supported. assumed true treatment effects assumed fixed (planning also possible via user-friendly R Shiny App: multiarm). Fast computing enabled parallel programming.","code":""},{"path":"https://sterniii3.github.io/drugdevelopR/reference/optimal_multiarm.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Optimal phase II/III drug development planning for multi-arm programs with\ntime-to-event endpoint — optimal_multiarm","text":"","code":"optimal_multiarm(   hr1,   hr2,   ec,   n2min,   n2max,   stepn2,   hrgomin,   hrgomax,   stephrgo,   alpha,   beta,   c2,   c3,   c02,   c03,   K = Inf,   N = Inf,   S = -Inf,   steps1 = 1,   stepm1 = 0.95,   stepl1 = 0.85,   b1,   b2,   b3,   strategy,   num_cl = 1 )"},{"path":"https://sterniii3.github.io/drugdevelopR/reference/optimal_multiarm.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Optimal phase II/III drug development planning for multi-arm programs with\ntime-to-event endpoint — optimal_multiarm","text":"hr1 assumed true treatment effect HR scale treatment 1 hr2 assumed true treatment effect HR scale treatment 2 ec control arm event rate phase II III n2min minimal total sample size phase II, must divisible 3 n2max maximal total sample size phase II, must divisible 3 stepn2 stepsize optimization n2, must divisible 3 hrgomin minimal threshold value go/-go decision rule hrgomax maximal threshold value go/-go decision rule stephrgo step size optimization HRgo alpha one-sided significance level/family-wise error rate beta type-II error rate pair, .e. 1 - beta (-pair) power calculation number events phase III c2 variable per-patient cost phase II c3 variable per-patient cost phase III c02 fixed cost phase II c03 fixed cost phase III K constraint costs program, default: Inf, e.g. constraint N constraint total expected sample size program, default: Inf, e.g. constraint S constraint expected probability successful program, default: -Inf, e.g. constraint steps1 lower boundary effect size category \"small\" HR scale, default: 1 stepm1 lower boundary effect size category \"medium\" HR scale = upper boundary effect size category \"small\" HR scale, default: 0.95 stepl1 lower boundary effect size category \"large\" HR scale = upper boundary effect size category \"medium\" HR scale, default: 0.85 b1 expected gain effect size category \"small\" b2 expected gain effect size category \"medium\" b3 expected gain effect size category \"large\" strategy choose strategy: 1 (best promising candidate), 2 (promising candidates) 3 (strategies) num_cl number clusters used parallel computing, default: 1","code":""},{"path":"https://sterniii3.github.io/drugdevelopR/reference/optimal_multiarm.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Optimal phase II/III drug development planning for multi-arm programs with\ntime-to-event endpoint — optimal_multiarm","text":"output function data.frame object containing optimization results: u maximal expected utility optimization constraints, .e. expected utility optimal sample size threshold value HRgo optimal threshold value decision rule go phase III d2 optimal total number events phase II d3 total expected number events phase III; rounded next natural number d total expected number events program; d = d2 + d3 n2 total sample size phase II; rounded next even natural number n3 total sample size phase III; rounded next even natural number n total sample size program; n = n2 + n3 K maximal costs program pgo probability go phase III sProg probability successful program sProg1 probability successful program \"small\" treatment effect phase III sProg2 probability successful program \"medium\" treatment effect phase III sProg3 probability successful program \"large\" treatment effect phase III K2 expected costs phase II K3 expected costs phase III input parameters. Taking cat(comment()) data frame lists used optimization sequences, start finish date optimization procedure.","code":""},{"path":"https://sterniii3.github.io/drugdevelopR/reference/optimal_multiarm.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Optimal phase II/III drug development planning for multi-arm programs with\ntime-to-event endpoint — optimal_multiarm","text":"Preussler, S., Kirchner, M., Goette, H., Kieser, M. (2019). Optimal Designs Multi-Arm Phase II/III Drug Development Programs. Submitted peer-review journal. IQWiG (2016). Allgemeine Methoden. Version 5.0, 10.07.2016, Technical Report. Available https://www.iqwig.de/de/methoden/methodenpapier.3020.html, assessed last 15.05.19.","code":""},{"path":"https://sterniii3.github.io/drugdevelopR/reference/optimal_multiarm.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Optimal phase II/III drug development planning for multi-arm programs with\ntime-to-event endpoint — optimal_multiarm","text":"","code":"res <- optimal_multiarm(hr1 = 0.75, hr2 = 0.80, ec = 0.6,# define assumed true HRs and control arm event rate   n2min = 30, n2max = 90, stepn2 = 6,                    # define optimization set for n2   hrgomin = 0.7, hrgomax = 0.9, stephrgo = 0.05,         # define optimization set for HRgo   alpha = 0.05, beta = 0.1,                              # drug development planning parameters   c2 = 0.75, c3 = 1, c02 = 100, c03 = 150,               # define fixed and variable costs for phase II and III   K = Inf, N = Inf, S = -Inf,                            # set maximal costs/ expected sample size for the program or minimal expected probability of a successful program   steps1 = 1,                                            # define lower boundary for \"small\"   stepm1 = 0.95,                                         # \"medium\"   stepl1 = 0.85,                                         # and \"large\" treatment effect size categories as proposed by IQWiG (2016)   b1 = 1000, b2 = 2000, b3 = 3000,                       # define expected benefit for a \"small\", \"medium\" and \"large\" treatment effect   strategy = 1,                                          # choose strategy: 1, 2 or 3   num_cl = 1)                                            # set number of cores used for parallelized computing (check maximum number possible with detectCores()) #> Optimization progress: #>  #>    |                                                                               |                                                                      |   0%   |                                                                               |==============                                                        |  20%   |                                                                               |============================                                          |  40%   |                                                                               |==========================================                            |  60%   |                                                                               |========================================================              |  80%   |                                                                               |======================================================================| 100% #>  #>  #> Optimization result: #>  #>   Strategy      u HRgo n2  n3   n  pgo sProg  hr1 hr2  ec   K   N    S  K2  K3 #> 1        1 241.46 0.85 90 342 432 0.77   0.4 0.75 0.8 0.6 Inf Inf -Inf 168 457 #>   sProg2 sProg3 steps1 stepm1 stepl1 alpha beta c02 c03   c2 c3   b1   b2   b3 #> 1    0.4      0      1   0.95   0.85  0.05  0.1 100 150 0.75  1 1000 2000 3000 #>  res #>   Strategy      u HRgo n2  n3   n  pgo sProg  hr1 hr2  ec   K   N    S  K2  K3 #> 1        1 241.46 0.85 90 342 432 0.77   0.4 0.75 0.8 0.6 Inf Inf -Inf 168 457 #>   sProg2 sProg3 steps1 stepm1 stepl1 alpha beta c02 c03   c2 c3   b1   b2   b3 #> 1    0.4      0      1   0.95   0.85  0.05  0.1 100 150 0.75  1 1000 2000 3000 cat(comment(res))                                        # displays the optimization sequence, start and finish date of the optimization procedure. #>  #> optimization sequence HRgo: 0.7 0.75 0.8 0.85 0.9  #> optimization sequence n2: 30 36 42 48 54 60 66 72 78 84 90  #> set on date: 2023-01-24 00:46:17  #> finish date: 2023-01-24 00:46:29"},{"path":"https://sterniii3.github.io/drugdevelopR/reference/optimal_multiarm_binary.html","id":null,"dir":"Reference","previous_headings":"","what":"Optimal phase II/III drug development planning for multi-arm programs with\nbinary endpoint — optimal_multiarm_binary","title":"Optimal phase II/III drug development planning for multi-arm programs with\nbinary endpoint — optimal_multiarm_binary","text":"optimal_multiarm_binary function enables planning multi-arm phase II/III drug development programs optimal sample size allocation go/-go decision rules. binary endpoints treatment effect measured risk ratio (RR). far, three-arm trials two treatments one control supported. assumed true treatment effects can assumed fixed modelled prior distribution. R Shiny application prior visualizes prior distributions used package. Fast computing enabled parallel programming.","code":""},{"path":"https://sterniii3.github.io/drugdevelopR/reference/optimal_multiarm_binary.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Optimal phase II/III drug development planning for multi-arm programs with\nbinary endpoint — optimal_multiarm_binary","text":"","code":"optimal_multiarm_binary(   p0,   p11,   p12,   n2min,   n2max,   stepn2,   rrgomin,   rrgomax,   steprrgo,   alpha,   beta,   c2,   c3,   c02,   c03,   K = Inf,   N = Inf,   S = -Inf,   steps1 = 1,   stepm1 = 0.95,   stepl1 = 0.85,   b1,   b2,   b3,   strategy,   num_cl = 1 )"},{"path":"https://sterniii3.github.io/drugdevelopR/reference/optimal_multiarm_binary.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Optimal phase II/III drug development planning for multi-arm programs with\nbinary endpoint — optimal_multiarm_binary","text":"p0 assumed true rate control group p11 assumed true rate treatment arm 1 p12 assumed true rate treatment arm 2 n2min minimal total sample size phase II, must divisible 3 n2max maximal total sample size phase II, must divisible 3 stepn2 stepsize optimization n2, must divisible 3 rrgomin minimal threshold value go/-go decision rule rrgomax maximal threshold value go/-go decision rule steprrgo step size optimization RRgo alpha one-sided significance level/family-wise error rate beta type-II error rate pair, .e. 1 - beta (-pair) power calculation sample size phase III c2 variable per-patient cost phase II c3 variable per-patient cost phase III c02 fixed cost phase II c03 fixed cost phase III K constraint costs program, default: Inf, e.g. constraint N constraint total expected sample size program, default: Inf, e.g. constraint S constraint expected probability successful program, default: -Inf, e.g. constraint steps1 lower boundary effect size category \"small\" RR scale, default: 1 stepm1 lower boundary effect size category \"medium\" RR scale = upper boundary effect size category \"small\" RR scale, default: 0.95 stepl1 lower boundary effect size category \"large\" RR scale = upper boundary effect size category \"medium\" RR scale, default: 0.85 b1 expected gain effect size category \"small\" b2 expected gain effect size category \"medium\" b3 expected gain effect size category \"large\" strategy choose strategy: 1 (best promising candidate), 2 (promising candidates) 3 (strategies) num_cl number clusters used parallel computing, default: 1","code":""},{"path":"https://sterniii3.github.io/drugdevelopR/reference/optimal_multiarm_binary.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Optimal phase II/III drug development planning for multi-arm programs with\nbinary endpoint — optimal_multiarm_binary","text":"output function data.frame object containing optimization results: u maximal expected utility optimization constraints, .e. expected utility optimal sample size threshold value RRgo optimal threshold value decision rule go phase III n2 total sample size phase II; rounded next even natural number n3 total sample size phase III; rounded next even natural number n total sample size program; n = n2 + n3 K maximal costs program pgo probability go phase III sProg probability successful program sProg1 probability successful program \"small\" treatment effect phase III sProg2 probability successful program \"medium\" treatment effect phase III sProg3 probability successful program \"large\" treatment effect phase III K2 expected costs phase II K3 expected costs phase III input parameters. Taking cat(comment()) data frame lists used optimization sequences, start finish date optimization procedure.","code":""},{"path":"https://sterniii3.github.io/drugdevelopR/reference/optimal_multiarm_binary.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Optimal phase II/III drug development planning for multi-arm programs with\nbinary endpoint — optimal_multiarm_binary","text":"IQWiG (2016). Allgemeine Methoden. Version 5.0, 10.07.2016, Technical Report. Available https://www.iqwig.de/de/methoden/methodenpapier.3020.html, assessed last 15.05.19.","code":""},{"path":"https://sterniii3.github.io/drugdevelopR/reference/optimal_multiarm_binary.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Optimal phase II/III drug development planning for multi-arm programs with\nbinary endpoint — optimal_multiarm_binary","text":"","code":"res <- optimal_multiarm_binary( p0 = 0.6, p11 =  0.3, p12 = 0.5,    n2min = 20, n2max = 100, stepn2 = 4,                   # define optimization set for n2   rrgomin = 0.7, rrgomax = 0.9, steprrgo = 0.05,         # define optimization set for RRgo   alpha = 0.05, beta = 0.1,                              # drug development planning parameters   c2 = 0.75, c3 = 1, c02 = 100, c03 = 150,               # define fixed and variable costs for phase II and III,   K = Inf, N = Inf, S = -Inf,                            # set maximal costs/ expected sample size for the program or minimal expected probability of a successful program   steps1 = 1,                                            # define lower boundary for \"small\"   stepm1 = 0.95,                                         # \"medium\"   stepl1 = 0.85,                                         # and \"large\" treatment effect size categories as proposed by IQWiG (2016)   b1 = 1000, b2 = 2000, b3 = 3000,                       # define expected benefit for a \"small\", \"medium\" and \"large\" treatment effect   strategy = 1, num_cl = 1)                              # set number of cores used for parallelized computing (check maximum number possible with detectCores()) #> Optimization progress: #>  #>    |                                                                               |                                                                      |   0%   |                                                                               |==============                                                        |  20%   |                                                                               |============================                                          |  40%   |                                                                               |==========================================                            |  60%   |                                                                               |========================================================              |  80%   |                                                                               |======================================================================| 100% #>  #>  #> Optimization result: #>  #>   Strategy       u RRgo  n2  n3   n  pgo sProg  p0 p11 p12   K   N    S  K2  K3 #> 1        1 1671.27  0.9 100 192 292 0.98  0.79 0.6 0.3 0.5 Inf Inf -Inf 175 339 #>   sProg2 sProg3 steps1 stepm1 stepl1 alpha beta c02 c03   c2 c3   b1   b2   b3 #> 1   0.79      0      1   0.95   0.85  0.05  0.1 100 150 0.75  1 1000 2000 3000 #>  res #>   Strategy       u RRgo  n2  n3   n  pgo sProg  p0 p11 p12   K   N    S  K2  K3 #> 1        1 1671.27  0.9 100 192 292 0.98  0.79 0.6 0.3 0.5 Inf Inf -Inf 175 339 #>   sProg2 sProg3 steps1 stepm1 stepl1 alpha beta c02 c03   c2 c3   b1   b2   b3 #> 1   0.79      0      1   0.95   0.85  0.05  0.1 100 150 0.75  1 1000 2000 3000 cat(comment(res))                                        # displays the optimization sequence, start and finish date of the optimization procedure. #>  #> optimization sequence RRgo: 0.7 0.75 0.8 0.85 0.9  #> optimization sequence n2: 20 24 28 32 36 40 44 48 52 56 60 64 68 72 76 80 84 88 92 96 100  #> set on date: 2023-01-24 00:46:30  #> finish date: 2023-01-24 00:46:55"},{"path":"https://sterniii3.github.io/drugdevelopR/reference/optimal_multiarm_normal.html","id":null,"dir":"Reference","previous_headings":"","what":"Optimal phase II/III drug development planning for multi-arm programs with\nnormally distributed endpoint — optimal_multiarm_normal","title":"Optimal phase II/III drug development planning for multi-arm programs with\nnormally distributed endpoint — optimal_multiarm_normal","text":"optimal_multiarm_normal function enables planning multi-arm phase II/III drug development programs optimal sample size allocation go/-go decision rules. normally distributed endpoints, treatment effect measured standardized difference means (Delta). far, three-arm trials two treatments one control supported. assumed true treatment effects can assumed fixed modelled prior distribution. R Shiny application prior visualizes prior distributions used package. Fast computing enabled parallel programming.","code":""},{"path":"https://sterniii3.github.io/drugdevelopR/reference/optimal_multiarm_normal.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Optimal phase II/III drug development planning for multi-arm programs with\nnormally distributed endpoint — optimal_multiarm_normal","text":"","code":"optimal_multiarm_normal(   Delta1,   Delta2,   n2min,   n2max,   stepn2,   kappamin,   kappamax,   stepkappa,   alpha,   beta,   c2,   c3,   c02,   c03,   K = Inf,   N = Inf,   S = -Inf,   steps1 = 0,   stepm1 = 0.5,   stepl1 = 0.8,   b1,   b2,   b3,   strategy,   num_cl = 1 )"},{"path":"https://sterniii3.github.io/drugdevelopR/reference/optimal_multiarm_normal.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Optimal phase II/III drug development planning for multi-arm programs with\nnormally distributed endpoint — optimal_multiarm_normal","text":"Delta1 assumed true treatment effect standardized difference means treatment arm 1 Delta2 assumed true treatment effect standardized difference means treatment arm 2 n2min minimal total sample size phase II, must divisible 3 n2max maximal total sample size phase II, must divisible 3 stepn2 stepsize optimization n2, must divisible 3 kappamin minimal threshold value kappa go/-go decision rule kappamax maximal threshold value  kappa go/-go decision rule stepkappa step size optimization threshold value kappa alpha one-sided significance level/family-wise error rate beta type-II error rate pair, .e. 1 - beta (-pair) power calculation sample size phase III c2 variable per-patient cost phase II c3 variable per-patient cost phase III c02 fixed cost phase II c03 fixed cost phase III K constraint costs program, default: Inf, e.g. constraint N constraint total expected sample size program, default: Inf, e.g. constraint S constraint expected probability successful program, default: -Inf, e.g. constraint steps1 lower boundary effect size category \"small\", default: 0 stepm1 lower boundary effect size category \"medium\" = upper boundary effect size category \"small\" default: 0.5 stepl1 lower boundary effect size category \"large\" = upper boundary effect size category \"medium\", default: 0.8 b1 expected gain effect size category \"small\" b2 expected gain effect size category \"medium\" b3 expected gain effect size category \"large\" strategy choose strategy: 1 (best promising candidate), 2 (promising candidates) 3 (strategies) num_cl number clusters used parallel computing, default: 1","code":""},{"path":"https://sterniii3.github.io/drugdevelopR/reference/optimal_multiarm_normal.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Optimal phase II/III drug development planning for multi-arm programs with\nnormally distributed endpoint — optimal_multiarm_normal","text":"output function data.frame object containing optimization results: u maximal expected utility optimization constraints, .e. expected utility optimal sample size threshold value Kappa optimal threshold value decision rule go phase III n2 total sample size phase II; rounded next even natural number n3 total sample size phase III; rounded next even natural number n total sample size program; n = n2 + n3 K maximal costs program pgo probability go phase III sProg probability successful program sProg1 probability successful program \"small\" treatment effect phase III sProg2 probability successful program \"medium\" treatment effect phase III sProg3 probability successful program \"large\" treatment effect phase III K2 expected costs phase II K3 expected costs phase III input parameters. Taking cat(comment()) data frame lists used optimization sequences, start finish date optimization procedure.","code":""},{"path":"https://sterniii3.github.io/drugdevelopR/reference/optimal_multiarm_normal.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Optimal phase II/III drug development planning for multi-arm programs with\nnormally distributed endpoint — optimal_multiarm_normal","text":"Cohen, J. (1988). Statistical power analysis behavioral sciences.","code":""},{"path":"https://sterniii3.github.io/drugdevelopR/reference/optimal_multiarm_normal.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Optimal phase II/III drug development planning for multi-arm programs with\nnormally distributed endpoint — optimal_multiarm_normal","text":"","code":"res <- optimal_multiarm_normal(Delta1 = 0.375, Delta2 = 0.625,        n2min = 20, n2max = 100, stepn2 = 4,                   # define optimization set for n2   kappamin = 0.02, kappamax = 0.2, stepkappa = 0.02,     # define optimization set for kappa   alpha = 0.05, beta = 0.1,                              # drug development planning parameters   c2 = 0.675, c3 = 0.72, c02 = 15, c03 = 20,             # define fixed and variable costs for phase II and III   K = Inf, N = Inf, S = -Inf,                            # set maximal costs/ expected sample size for the program or minimal expected probability of a successful program   steps1 = 0,                                            # define lower boundary for \"small\"   stepm1 = 0.5,                                          # \"medium\"   stepl1 = 0.8,                                          # and \"large\" treatment effect size categories as proposed by e.g. Cohen (1988)   b1 = 3000, b2 = 8000, b3 = 10000,                      # define expected benefit for a \"small\", \"medium\" and \"large\" treatment effect   strategy = 1,   num_cl = 1)                                            # set number of cores used for parallelized computing (check maximum number possible with detectCores()) #> Optimization progress: #>  #>    |                                                                               |                                                                      |   0%   |                                                                               |=======                                                               |  10%   |                                                                               |==============                                                        |  20%   |                                                                               |=====================                                                 |  30%   |                                                                               |============================                                          |  40%   |                                                                               |===================================                                   |  50%   |                                                                               |==========================================                            |  60%   |                                                                               |=================================================                     |  70%   |                                                                               |========================================================              |  80%   |                                                                               |===============================================================       |  90%   |                                                                               |======================================================================| 100% #>  #>  #> Optimization result: #>  #>   Strategy       u kappa  n2  n3   n  pgo sProg Delta1 Delta2   K   N    S K2 #> 1        1 2924.13  0.06 100 164 264 0.99   0.8  0.375  0.625 Inf Inf -Inf 82 #>    K3 sProg2 sProg3 steps1 stepm1 stepl1 alpha beta c02 c03    c2   c3   b1 #> 1 138    0.8      0      0    0.5    0.8  0.05  0.1  15  20 0.675 0.72 3000 #>     b2    b3 #> 1 8000 10000 #>  res #>   Strategy       u kappa  n2  n3   n  pgo sProg Delta1 Delta2   K   N    S K2 #> 1        1 2924.13  0.06 100 164 264 0.99   0.8  0.375  0.625 Inf Inf -Inf 82 #>    K3 sProg2 sProg3 steps1 stepm1 stepl1 alpha beta c02 c03    c2   c3   b1 #> 1 138    0.8      0      0    0.5    0.8  0.05  0.1  15  20 0.675 0.72 3000 #>     b2    b3 #> 1 8000 10000 cat(comment(res))                                        # displays the optimization sequence, start and finish date of the optimization procedure. #>  #> optimization sequence Kappa: 0.02 0.04 0.06 0.08 0.1 0.12 0.14 0.16 0.18 0.2  #> optimization sequence n2: 20 24 28 32 36 40 44 48 52 56 60 64 68 72 76 80 84 88 92 96 100  #> set on date: 2023-01-24 00:46:55  #> finish date: 2023-01-24 00:47:51"},{"path":"https://sterniii3.github.io/drugdevelopR/reference/optimal_multiple_normal.html","id":null,"dir":"Reference","previous_headings":"","what":"Optimal phase II/III drug development planning for programs with multiple\nnormally distributed endpoints — optimal_multiple_normal","title":"Optimal phase II/III drug development planning for programs with multiple\nnormally distributed endpoints — optimal_multiple_normal","text":"function optimal_multiple_normal drugdevelopR package enables planning phase II/III drug development programs optimal sample size allocation go/-go decision rules two-arm trials two normally  distributed endpoints one control group (Preussler et. al, 2019). setting, drug development program defined successful proceeds phase II phase III endpoints show statistically significant treatment effect phase III. example, situation found Alzheimer’s disease trials, drug show significant results improving cognition (cognitive endpoint) well improving activities daily living (functional endpoint). effect size categories small, medium large applied endpoints. order define overall effect size two individual effect sizes, function implements two different combination rules: strict rule (relaxed = FALSE) assigning large overall effect case endpoints show effect large size, small overall effect case least one endpoints shows small effect, medium overall effect otherwise, relaxed rule (relaxed = TRUE) assigning large overall effect least one endpoints shows large effect, small effect endpoints show  small effect, medium overall effect otherwise. Fast computing enabled parallel programming.","code":""},{"path":"https://sterniii3.github.io/drugdevelopR/reference/optimal_multiple_normal.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Optimal phase II/III drug development planning for programs with multiple\nnormally distributed endpoints — optimal_multiple_normal","text":"","code":"optimal_multiple_normal(   Delta1,   Delta2,   in1,   in2,   sigma1,   sigma2,   n2min,   n2max,   stepn2,   kappamin,   kappamax,   stepkappa,   alpha,   beta,   c2,   c3,   c02,   c03,   K = Inf,   N = Inf,   S = -Inf,   steps1 = 0,   stepm1 = 0.5,   stepl1 = 0.8,   b1,   b2,   b3,   rho,   fixed,   relaxed = FALSE,   num_cl = 1 )"},{"path":"https://sterniii3.github.io/drugdevelopR/reference/optimal_multiple_normal.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Optimal phase II/III drug development planning for programs with multiple\nnormally distributed endpoints — optimal_multiple_normal","text":"Delta1 assumed true treatment effect endpoint 1 measured standardized difference means Delta2 assumed true treatment effect endpoint 2 measured standardized difference means in1 amount information Delta1 terms number events in2 amount information Delta2 terms number events sigma1 variance endpoint 1 sigma2 variance endpoint 2 n2min minimal total sample size phase II, must divisible 3 n2max maximal total sample size phase II, must divisible 3 stepn2 stepsize optimization n2, must divisible 3 kappamin minimal threshold value kappa go/-go decision rule kappamax maximal threshold value  kappa go/-go decision rule stepkappa step size optimization threshold value kappa alpha one-sided significance level/family-wise error rate beta type-II error rate pair, .e. 1 - beta (-pair) power calculation sample size phase III c2 variable per-patient cost phase II 10^5 $ c3 variable per-patient cost phase III 10^5 $ c02 fixed cost phase II 10^5 $ c03 fixed cost phase III 10^5 $ K constraint costs program, default: Inf, e.g. constraint N constraint total expected sample size program, default: Inf, e.g. constraint S constraint expected probability successful program, default: -Inf, e.g. constraint steps1 lower boundary effect size category \"small\", default: 0 stepm1 lower boundary effect size category \"medium\" = upper boundary effect size category \"small\" default: 0.5 stepl1 lower boundary effect size category \"large\" = upper boundary effect size category \"medium\", default: 0.8 b1 expected gain effect size category \"small\" 10^5 $ b2 expected gain effect size category \"medium\" 10^5 $ b3 expected gain effect size category \"large\" 10^5 $ rho correlation two endpoints fixed assumed fixed treatment effect relaxed relaxed strict decision rule num_cl number clusters used parallel computing, default: 1","code":""},{"path":"https://sterniii3.github.io/drugdevelopR/reference/optimal_multiple_normal.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Optimal phase II/III drug development planning for programs with multiple\nnormally distributed endpoints — optimal_multiple_normal","text":"output function data.frame object containing optimization results: Kappa optimal threshold value decision rule go phase III n2 total sample size phase II; rounded next even natural number n3 total sample size phase III; rounded next even natural number n total sample size program; n = n2 + n3 K maximal costs program pgo probability go phase III sProg probability successful program sProg1 probability successful program \"small\" treatment effect phase III sProg2 probability successful program \"medium\" treatment effect phase III sProg3 probability successful program \"large\" treatment effect phase III K2 expected costs phase II K3 expected costs phase III input parameters. Taking cat(comment()) data frame lists used optimization sequences, start finish date optimization procedure.","code":""},{"path":"https://sterniii3.github.io/drugdevelopR/reference/optimal_multiple_normal.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Optimal phase II/III drug development planning for programs with multiple\nnormally distributed endpoints — optimal_multiple_normal","text":"Meinhard Kieser, Marietta Kirchner, Eva Dölger, Heiko Götte (2018). Optimal planning phase II/III programs clinical trials multiple endpoints IQWiG (2016). Allgemeine Methoden. Version 5.0, 10.07.2016, Technical Report. Available https://www.iqwig.de/de/methoden/methodenpapier.3020.html, assessed last 15.05.19.","code":""},{"path":"https://sterniii3.github.io/drugdevelopR/reference/optimal_multiple_normal.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Optimal phase II/III drug development planning for programs with multiple\nnormally distributed endpoints — optimal_multiple_normal","text":"","code":"#res <- optimal_multiple_normal(Delta1 = 0.75, Delta2 = 0.80,    # define assumed true HRs  # in1=300, in2=600, sigma1 = 8, sigma2= 12,  # n2min = 30, n2max = 90, stepn2 = 6,                    # define optimization set for n2  # kappamin = 0.02, kappamax = 0.2, stepkappa = 0.02,         # define optimization set for HRgo  # alpha = 0.05, beta = 0.1,                              # drug development planning parameters  # c2 = 0.75, c3 = 1, c02 = 100, c03 = 150,               # define fixed and variable costs for phase II and III  # K = Inf, N = Inf, S = -Inf,                            # set maximal costs/ expected sample size for the program or minimal expected probability of a successful program  # steps1 = 0,                                            # define lower boundary for \"small\"  # stepm1 = 0.5,                                          # \"medium\"  # stepl1 = 0.8,                                         # and \"large\" treatment effect size categories as proposed by IQWiG (2016)  #  b1 = 1000, b2 = 2000, b3 = 3000,                       # define expected benefit for a \"small\", \"medium\" and \"large\" treatment effect  # rho = 0.5, relaxed = TRUE,                             # relaxed \"TRUE\"  # fixed = TRUE,                                          #   treatment effect  # num_cl = 1)                                            # set number of cores used for parallelized computing (check maximum number possible with detectCores()) #res #cat(comment(res))                                        # displays the optimization sequence, start and finish date of the optimization procedure."},{"path":"https://sterniii3.github.io/drugdevelopR/reference/optimal_multiple_tte.html","id":null,"dir":"Reference","previous_headings":"","what":"Optimal phase II/III drug development planning for programs with multiple\ntime-to-event endpoints — optimal_multiple_tte","title":"Optimal phase II/III drug development planning for programs with multiple\ntime-to-event endpoints — optimal_multiple_tte","text":"function optimal_multiple_tte drugdevelopR package enables planning phase II/III drug development programs optimal sample size allocation go/-go decision rules (Preussler et. al, 2019) two-arm trial two time--event endpoints. setting, drug development program defined successful proceeds phase II phase III least one endpoint shows statistically significant treatment effect phase III. example, situation found oncology trials, overall survival (OS) progression-free survival (PFS) two endpoints interest. gain successful program may differ according importance endpoint significant. endpoint 1 significant (matter whether endpoint 2 significant ), gains b11, b21 b31 used calculation utility. endpoint 2 significant,  b12, b22 b32 used. also matches oncology example, OS (.e. endpoint 1) implicates larger expected gains PFS alone (.e. endpoint 2). Fast computing enabled parallel programming.","code":""},{"path":"https://sterniii3.github.io/drugdevelopR/reference/optimal_multiple_tte.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Optimal phase II/III drug development planning for programs with multiple\ntime-to-event endpoints — optimal_multiple_tte","text":"","code":"optimal_multiple_tte(   hr1,   hr2,   id1,   id2,   n2min,   n2max,   stepn2,   hrgomin,   hrgomax,   stephrgo,   alpha,   beta,   c2,   c3,   c02,   c03,   K = Inf,   N = Inf,   S = -Inf,   b11,   b21,   b31,   b12,   b22,   b32,   steps1,   stepm1,   stepl1,   rho,   fixed,   num_cl = 1 )"},{"path":"https://sterniii3.github.io/drugdevelopR/reference/optimal_multiple_tte.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Optimal phase II/III drug development planning for programs with multiple\ntime-to-event endpoints — optimal_multiple_tte","text":"hr1 assumed true treatment effect HR scale endpoint 1 (e.g. OS) hr2 assumed true treatment effect HR scale endpoint 2 (e.g. PFS) id1 amount information hr1 terms number events id2 amount information hr2 terms number events n2min minimal total sample size phase II, must divisible 3 n2max maximal total sample size phase II, must divisible 3 stepn2 stepsize optimization n2, must divisible 3 hrgomin minimal threshold value go/-go decision rule hrgomax maximal threshold value go/-go decision rule stephrgo step size optimization HRgo alpha one-sided significance level/family-wise error rate beta type-II error rate pair, .e. 1 - beta (-pair) power calculation number events phase III c2 variable per-patient cost phase II 10^5 $. c3 variable per-patient cost phase III 10^5 $. c02 fixed cost phase II 10^5 $. c03 fixed cost phase III 10^5 $. K constraint costs program, default: Inf, e.g. constraint N constraint total expected sample size program, default: Inf, e.g. constraint S constraint expected probability successful program, default: -Inf, e.g. constraint b11 expected gain effect size category \"small\" endpoint 1 significant (endpoint 2 may may significant) b21 expected gain effect size category \"medium\" endpoint 1 significant (endpoint 2 may may significant) b31 expected gain effect size category \"large\" endpoint 1 significant (endpoint 2 may may significant) b12 expected gain effect size category \"small\" endpoint 1 significant, endpoint 2 b22 expected gain effect size category \"medium\"endpoint 1 significant, endpoint 2 b32 expected gain effect size category \"large\" endpoint 1 significant, endpoint 2 steps1 lower boundary effect size category \"small\" HR scale, default: 1 stepm1 lower boundary effect size category \"medium\" HR scale = upper boundary effect size category \"small\" HR scale, default: 0.95 stepl1 lower boundary effect size category \"large\" HR scale = upper boundary effect size category \"medium\" HR scale, default: 0.85 rho correlation two endpoints fixed assumed fixed treatment effect num_cl number clusters used parallel computing, default: 1","code":""},{"path":"https://sterniii3.github.io/drugdevelopR/reference/optimal_multiple_tte.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Optimal phase II/III drug development planning for programs with multiple\ntime-to-event endpoints — optimal_multiple_tte","text":"output function data.frame object containing optimization results: u maximal expected utility optimization constraints, .e. expected utility optimal sample size threshold value HRgo optimal threshold value decision rule go phase III d2 optimal total number events phase II d3 total expected number events phase III; rounded next natural number d total expected number events program; d = d2 + d3 n2 total sample size phase II; rounded next even natural number n3 total sample size phase III; rounded next even natural number n total sample size program; n = n2 + n3 K maximal costs program pgo probability go phase III sProg probability successful program sProg1 probability successful program \"small\" treatment effect phase III sProg2 probability successful program \"medium\" treatment effect phase III sProg3 probability successful program \"large\" treatment effect phase III K2 expected costs phase II K3 expected costs phase III input parameters. Taking cat(comment()) data frame lists used optimization sequences, start finish date optimization procedure.","code":""},{"path":"https://sterniii3.github.io/drugdevelopR/reference/optimal_multiple_tte.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Optimal phase II/III drug development planning for programs with multiple\ntime-to-event endpoints — optimal_multiple_tte","text":"Preussler, S., Kirchner, M., Goette, H., Kieser, M. (2019). Optimal Designs Multi-Arm Phase II/III Drug Development Programs. Submitted peer-review journal. IQWiG (2016). Allgemeine Methoden. Version 5.0, 10.07.2016, Technical Report. Available https://www.iqwig.de/de/methoden/methodenpapier.3020.html, assessed last 15.05.19.","code":""},{"path":"https://sterniii3.github.io/drugdevelopR/reference/optimal_multiple_tte.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Optimal phase II/III drug development planning for programs with multiple\ntime-to-event endpoints — optimal_multiple_tte","text":"","code":"#res <- optimal_multiple_tte(hr1 = 0.75, hr2 = 0.80, # define assumed true HRs #  id1 = 210, id2 = 420, #  n2min = 30, n2max = 90, stepn2 = 6,               # define optimization set for n2 #  hrgomin = 0.7, hrgomax = 0.9, stephrgo = 0.05,    # define optimization set for HRgo #  alpha = 0.05, beta = 0.1,                         # drug development planning parameters #  c2 = 0.75, c3 = 1, c02 = 100, c03 = 150,          # define fixed and variable costs for phase II and III #  K = Inf, N = Inf, S = -Inf,                       # set constraints #  steps1 = 1,                                       # define lower boundary for \"small\" #  stepm1 = 0.95,                                    # \"medium\" #  stepl1 = 0.85,                                    # and \"large\" treatment effect size categories as proposed by IQWiG (2016) #  b11 = 1000, b21 = 2000, b31 = 3000, #  b12 = 1000, b22 = 1500, b32 = 2000,               # define expected benefit for a \"small\", \"medium\" and \"large\" treatment effect (for both categories) #  rho = 0.6, fixed = TRUE,                          # correlation and treatment effect #  num_cl = 1)                                       # set number of cores used for parallelized computing  # res # cat(comment(res))                                   # displays the optimization sequence, start and finish date of the optimization"},{"path":"https://sterniii3.github.io/drugdevelopR/reference/optimal_multitrial.html","id":null,"dir":"Reference","previous_headings":"","what":"Optimal phase II/III drug development planning where several phase III trials are performed for time-to-event endpoints — optimal_multitrial","title":"Optimal phase II/III drug development planning where several phase III trials are performed for time-to-event endpoints — optimal_multitrial","text":"function optimal_multitrial drugdevelopR package enables planning phase II/III drug development programs time--event endpoints programs several phase III trials (Preussler et. al, 2019). main output values optimal sample size allocation optimal go/-go decision rules. assumed true treatment effects can assumed fixed (planning also possible via user friendly R Shiny App: multitrial) can modelled prior distribution. R Shiny application prior visualizes prior distributions used package. Fast coputing enabled parallel programming.","code":""},{"path":"https://sterniii3.github.io/drugdevelopR/reference/optimal_multitrial.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Optimal phase II/III drug development planning where several phase III trials are performed for time-to-event endpoints — optimal_multitrial","text":"","code":"optimal_multitrial(   w,   hr1,   hr2,   id1,   id2,   d2min,   d2max,   stepd2,   hrgomin,   hrgomax,   stephrgo,   alpha,   beta,   xi2,   xi3,   c2,   c3,   c02,   c03,   K = Inf,   N = Inf,   S = -Inf,   b1,   b2,   b3,   case,   strategy = TRUE,   fixed = FALSE,   num_cl = 1 )"},{"path":"https://sterniii3.github.io/drugdevelopR/reference/optimal_multitrial.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Optimal phase II/III drug development planning where several phase III trials are performed for time-to-event endpoints — optimal_multitrial","text":"w weight mixture prior distribution, see Shiny application choice weights hr1 first assumed true treatment effect HR scale prior distribution hr2 second assumed true treatment effect HR scale prior distribution id1 amount information hr1 terms number events id2 amount information hr2 terms number events d2min minimal number events phase II d2max maximal number events phase II stepd2 step size optimization d2 hrgomin minimal threshold value go/-go decision rule hrgomax maximal threshold value go/-go decision rule stephrgo step size optimization HRgo alpha significance level beta type II error rate; .e. 1 - beta power calculation number events phase III Schoenfeld's formula (Schoenfeld 1981) xi2 assumed event rate phase II, used calculating sample size phase II via n2 = d2/xi2 xi3 event rate phase III, used calculating sample size phase III analogy xi2 c2 variable per-patient cost phase II 10^5 $. c3 variable per-patient cost phase III 10^5 $. c02 fixed cost phase II 10^5 $. c03 fixed cost phase III 10^5 $. K constraint costs program, default: Inf, e.g. constraint N constraint total expected sample size program, default: Inf, e.g. constraint S constraint expected probability successful program, default: -Inf, e.g. constraint b1 expected gain effect size category \"small\" b2 expected gain effect size category \"medium\" b3 expected gain effect size category \"large\" case choose case: \"least 1, 2 3 significant trials needed approval\" strategy choose strategy: \"conduct 1, 2, 3 4 trials order achieve case's goal\"; TRUE calculates strategies selected case fixed choose true treatment effects fixed random, TRUE hr1 used fixed effect hr2 ignored num_cl number clusters used parallel computing, default: 1","code":""},{"path":"https://sterniii3.github.io/drugdevelopR/reference/optimal_multitrial.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Optimal phase II/III drug development planning where several phase III trials are performed for time-to-event endpoints — optimal_multitrial","text":"output function data.frame object containing optimization results: Strategy Strategy: \"number trials conducted order achieve goal case\" u maximal expected utility optimization constraints, .e. expected utility optimal sample size threshold value HRgo optimal threshold value decision rule go phase III d2 optimal total number events phase II d3 total expected number events phase III; rounded next natural number d total expected number events program; d = d2 + d3 n2 total sample size phase II; rounded next even natural number n3 total sample size phase III; rounded next even natural number n total sample size program; n = n2 + n3 K maximal costs program pgo probability go phase III sProg probability successful program sProg1 probability successful program \"small\" treatment effect phase III (lower boundary HR scale set 1, proposed IQWiG (2016)) sProg2 probability successful program \"medium\" treatment effect phase III (lower boundary HR scale set 0.95, proposed IQWiG (2016)) sProg3 probability successful program \"large\" treatment effect phase III (lower boundary HR scale set 0.85, proposed IQWiG (2016)) K2 expected costs phase II K3 expected costs phase III input parameters. Taking cat(comment()) data frame lists used optimization sequences, start finish date optimization procedure.","code":""},{"path":"https://sterniii3.github.io/drugdevelopR/reference/optimal_multitrial.html","id":"effect-sizes","dir":"Reference","previous_headings":"","what":"Effect sizes","title":"Optimal phase II/III drug development planning where several phase III trials are performed for time-to-event endpoints — optimal_multitrial","text":"settings, definition \"small\", \"medium\" \"large\" effect sizes can user-specified using input parameters steps1, stepm1 stepl1. Due complexity multitrial setting, feature included setting. Instead, effect sizes set predefined values explained sProg1, sProg2 sProg3 Value section.","code":""},{"path":"https://sterniii3.github.io/drugdevelopR/reference/optimal_multitrial.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Optimal phase II/III drug development planning where several phase III trials are performed for time-to-event endpoints — optimal_multitrial","text":"IQWiG (2016). Allgemeine Methoden. Version 5.0, 10.07.2016, Technical Report. Available https://www.iqwig.de/de/methoden/methodenpapier.3020.html, assessed last 15.05.19. Preussler, S., Kieser, M., Kirchner, M. (2019). Optimal sample size allocation go/-go decision rules phase II/III programs several phase III trials performed. Biometrical Journal, 61(2), 357-378. Schoenfeld, D. (1981). asymptotic properties nonparametric tests comparing survival distributions. Biometrika, 68(1), 316-319.","code":""},{"path":"https://sterniii3.github.io/drugdevelopR/reference/optimal_multitrial.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Optimal phase II/III drug development planning where several phase III trials are performed for time-to-event endpoints — optimal_multitrial","text":"","code":"res <- optimal_multitrial(w = 0.3,                              # define parameters for prior   hr1 = 0.69, hr2 = 0.88, id1 = 210, id2 = 420,          # (https://web.imbi.uni-heidelberg.de/prior/)   d2min = 20, d2max = 100, stepd2 = 5,                   # define optimization set for d2   hrgomin = 0.7, hrgomax = 0.9, stephrgo = 0.05,         # define optimization set for HRgo   alpha = 0.025, beta = 0.1, xi2 = 0.7, xi3 = 0.7,       # drug development planning parameters   c2 = 0.75, c3 = 1, c02 = 100, c03 = 150,               # define fixed and variable costs for phase II and III   K = Inf, N = Inf, S = -Inf,                            # set constraints   b1 = 1000, b2 = 2000, b3 = 3000,                       # define expected benefit for a \"small\", \"medium\" and \"large\" treatment effect   case = 1, strategy = TRUE,                             # chose Case and Strategy   fixed = TRUE,                                          # choose if true treatment effects are fixed or random   num_cl = 1)                                            # set number of cores used for parallelized computing  #>  #> Case  1 : Optimization progess for Strategy  1 #>  #>    |                                                                               |                                                                      |   0%   |                                                                               |==============                                                        |  20%   |                                                                               |============================                                          |  40%   |                                                                               |==========================================                            |  60%   |                                                                               |========================================================              |  80%   |                                                                               |======================================================================| 100% #>  #> Case  1 : Optimization progess for Strategy  2 #>  #>    |                                                                               |                                                                      |   0%   |                                                                               |==============                                                        |  20%   |                                                                               |============================                                          |  40%   |                                                                               |==========================================                            |  60%   |                                                                               |========================================================              |  80%   |                                                                               |======================================================================| 100% #>  #>  #> Optimization result: #>  #>   Case Strategy      u HRgo  d2  d3   d  n2  n3   n  pgo sProg   hr   K   N #> 1    1        1 859.71 0.85 100 312 412 144 446 590 0.85  0.67 0.69 Inf Inf #> 2    1        2 714.39 0.80 100 440 540 144 628 772 0.77  0.68 0.69 Inf Inf #>      S  K2  K3 sProg1 sProg2 sProg3 steps1 stepm1 stepl1 alpha beta xi2 xi3 c02 #> 1 -Inf 208 574   0.07   0.21   0.38      1   0.95   0.85 0.025  0.1 0.7 0.7 100 #> 2 -Inf 208 859   0.05   0.18   0.46      1   0.95   0.85 0.025  0.1 0.7 0.7 100 #>   c03   c2 c3   b1   b2   b3 gamma #> 1 150 0.75  1 1000 2000 3000     0 #> 2 150 0.75  1 1000 2000 3000     0 #>  res #>   Case Strategy      u HRgo  d2  d3   d  n2  n3   n  pgo sProg   hr   K   N #> 1    1        1 859.71 0.85 100 312 412 144 446 590 0.85  0.67 0.69 Inf Inf #> 2    1        2 714.39 0.80 100 440 540 144 628 772 0.77  0.68 0.69 Inf Inf #>      S  K2  K3 sProg1 sProg2 sProg3 steps1 stepm1 stepl1 alpha beta xi2 xi3 c02 #> 1 -Inf 208 574   0.07   0.21   0.38      1   0.95   0.85 0.025  0.1 0.7 0.7 100 #> 2 -Inf 208 859   0.05   0.18   0.46      1   0.95   0.85 0.025  0.1 0.7 0.7 100 #>   c03   c2 c3   b1   b2   b3 gamma #> 1 150 0.75  1 1000 2000 3000     0 #> 2 150 0.75  1 1000 2000 3000     0 cat(comment(res))                                        # displays the optimization sequence, start/ finish date of procedure. #>  #> optimization sequence HRgo: 0.7 0.75 0.8 0.85 0.9  #> optimization sequence d2: 20 25 30 35 40 45 50 55 60 65 70 75 80 85 90 95 100  #> set on date: 2023-01-24 00:47:52  #> finish date: 2023-01-24 00:48:06"},{"path":"https://sterniii3.github.io/drugdevelopR/reference/optimal_multitrial_binary.html","id":null,"dir":"Reference","previous_headings":"","what":"Optimal phase II/III drug development planning where several phase III trials are performed — optimal_multitrial_binary","title":"Optimal phase II/III drug development planning where several phase III trials are performed — optimal_multitrial_binary","text":"optimal_multitrial_binary function enables planning phase II/III drug development programs several phase III trials binary endpoint. main output values optimal sample size allocation go/-go decision rules. binary endpoints, treatment effect measured risk ratio (RR).","code":""},{"path":"https://sterniii3.github.io/drugdevelopR/reference/optimal_multitrial_binary.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Optimal phase II/III drug development planning where several phase III trials are performed — optimal_multitrial_binary","text":"","code":"optimal_multitrial_binary(   w,   p0,   p11,   p12,   in1,   in2,   n2min,   n2max,   stepn2,   rrgomin,   rrgomax,   steprrgo,   alpha,   beta,   c2,   c3,   c02,   c03,   K = Inf,   N = Inf,   S = -Inf,   b1,   b2,   b3,   case,   strategy = TRUE,   fixed = FALSE,   num_cl = 1 )"},{"path":"https://sterniii3.github.io/drugdevelopR/reference/optimal_multitrial_binary.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Optimal phase II/III drug development planning where several phase III trials are performed — optimal_multitrial_binary","text":"w weight mixture prior distribution p0 assumed true rate control group, see details p11 assumed true rate treatment group, see details p12 assumed true rate treatment group, see details in1 amount information p11 terms sample size, see details in2 amount information p12 terms sample size, see details n2min minimal total sample size phase II; must even number n2max maximal total sample size phase II, must even number stepn2 step size optimization n2; must even number rrgomin minimal threshold value go/-go decision rule rrgomax maximal threshold value go/-go decision rule steprrgo step size optimization RRgo alpha significance level beta type II error rate; .e. 1 - beta power calculation number events phase III c2 variable per-patient cost phase II 10^5 $ c3 variable per-patient cost phase III 10^5 $ c02 fixed cost phase II 10^5 $ c03 fixed cost phase III 10^5 $ K constraint costs program, default: Inf, e.g. constraint N constraint total expected sample size program, default: Inf, e.g. constraint S constraint expected probability successful program, default: -Inf, e.g. constraint b1 expected gain effect size category \"small\" b2 expected gain effect size category \"medium\" b3 expected gain effect size category \"large\" case choose case: \"least 1, 2 3 significant trials needed approval\" strategy choose strategy: \"conduct 1, 2, 3 4 trials order achieve case's goal\"; TRUE calculates strategies selected case fixed choose true treatment effects fixed random, TRUE p11 used fixed effect p1 num_cl number clusters used parallel computing, default: 1","code":""},{"path":"https://sterniii3.github.io/drugdevelopR/reference/optimal_multitrial_binary.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Optimal phase II/III drug development planning where several phase III trials are performed — optimal_multitrial_binary","text":"output function data.frame object containing optimization results: Strategy Strategy: \"number trials conducted order achieve goal case\" u maximal expected utility optimization constraints, .e. expected utility optimal sample size threshold value RRgo optimal threshold value decision rule go phase III n2 total sample size phase II; rounded next even natural number n3 total sample size phase III; rounded next even natural number n total sample size program; n = n2 + n3 K maximal costs program pgo probability go phase III sProg probability successful program sProg1 probability successful program \"small\" treatment effect phase III (lower boundary HR scale set 1, proposed IQWiG (2016)) sProg2 probability successful program \"medium\" treatment effect phase III (lower boundary HR scale set 0.95, proposed IQWiG (2016)) sProg3 probability successful program \"large\" treatment effect phase III (lower boundary HR scale set 0.85, proposed IQWiG (2016)) K2 expected costs phase II K3 expected costs phase III input parameters. Taking cat(comment()) data frame lists used optimization sequences, start finish date optimization procedure.","code":""},{"path":"https://sterniii3.github.io/drugdevelopR/reference/optimal_multitrial_binary.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Optimal phase II/III drug development planning where several phase III trials are performed — optimal_multitrial_binary","text":"assumed true treatment effects can assumed fixed modelled prior distribution. R Shiny application prior visualizes prior distributions used package. Fast computing enabled parallel programming.","code":""},{"path":"https://sterniii3.github.io/drugdevelopR/reference/optimal_multitrial_binary.html","id":"effect-sizes","dir":"Reference","previous_headings":"","what":"Effect sizes","title":"Optimal phase II/III drug development planning where several phase III trials are performed — optimal_multitrial_binary","text":"settings, definition \"small\", \"medium\" \"large\" effect sizes can user-specified using input parameters steps1, stepm1 stepl1. Due complexity multitrial setting, feature included setting. Instead, effect sizes set predefined values explained sProg1, sProg2 sProg3 Value section.","code":""},{"path":"https://sterniii3.github.io/drugdevelopR/reference/optimal_multitrial_binary.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Optimal phase II/III drug development planning where several phase III trials are performed — optimal_multitrial_binary","text":"IQWiG (2016). Allgemeine Methoden. Version 5.0, 10.07.2016, Technical Report. Available https://www.iqwig.de/de/methoden/methodenpapier.3020.html, assessed last 15.05.19.","code":""},{"path":"https://sterniii3.github.io/drugdevelopR/reference/optimal_multitrial_binary.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Optimal phase II/III drug development planning where several phase III trials are performed — optimal_multitrial_binary","text":"","code":"res <- optimal_multitrial_binary(w = 0.3,                # define parameters for prior   p0 = 0.6, p11 =  0.3, p12 = 0.5, in1 = 30, in2 = 60,   # (https://web.imbi.uni-heidelberg.de/prior/)   n2min = 20, n2max = 100, stepn2 = 4,                   # define optimization set for n2   rrgomin = 0.7, rrgomax = 0.9, steprrgo = 0.05,         # define optimization set for RRgo   alpha = 0.05, beta = 0.1,                              # drug development planning parameters   c2 = 0.75, c3 = 1, c02 = 100, c03 = 150,               # define fixed and variable costs for phase II and III,   K = Inf, N = Inf, S = -Inf,                            # set constraints   b1 = 1000, b2 = 2000, b3 = 3000,                       # define expected benefit for a \"small\", \"medium\" and \"large\" treatment effect   case = 1, strategy = TRUE,                             # chose Case and Strategy                                      fixed = TRUE,                                          # choose if true treatment effects are fixed or random   num_cl = 1)                                            # set number of cores used for parallelized computing  #>  #> Case  1 : Optimization progess for Strategy  1 #>  #>    |                                                                               |                                                                      |   0%   |                                                                               |==============                                                        |  20%   |                                                                               |============================                                          |  40%   |                                                                               |==========================================                            |  60%   |                                                                               |========================================================              |  80%   |                                                                               |======================================================================| 100% #>  #> Case  1 : Optimization progess for Strategy  2 #>  #>    |                                                                               |                                                                      |   0%   |                                                                               |==============                                                        |  20%   |                                                                               |============================                                          |  40%   |                                                                               |==========================================                            |  60%   |                                                                               |========================================================              |  80%   |                                                                               |======================================================================| 100% #>  #>  #> Optimization result: #>  #>   Case Strategy       u RRgo  n2  n3   n  pgo sProg  p0  p1   K   N    S  K2 #> 1    1        1 1806.86 0.90 100 166 266 0.99  0.82 0.6 0.3 Inf Inf -Inf 175 #> 2    1        2 1900.29 0.85 100 296 396 0.98  0.92 0.6 0.3 Inf Inf -Inf 175 #>    K3 sProg1 sProg2 sProg3 steps1 stepm1 stepl1 alpha beta c02 c03   c2 c3   b1 #> 1 315   0.04   0.10   0.68      1   0.95   0.85  0.05  0.1 100 150 0.75  1 1000 #> 2 591   0.02   0.06   0.84      1   0.95   0.85  0.05  0.1 100 150 0.75  1 1000 #>     b2   b3 #> 1 2000 3000 #> 2 2000 3000 #>  res #>   Case Strategy       u RRgo  n2  n3   n  pgo sProg  p0  p1   K   N    S  K2 #> 1    1        1 1806.86 0.90 100 166 266 0.99  0.82 0.6 0.3 Inf Inf -Inf 175 #> 2    1        2 1900.29 0.85 100 296 396 0.98  0.92 0.6 0.3 Inf Inf -Inf 175 #>    K3 sProg1 sProg2 sProg3 steps1 stepm1 stepl1 alpha beta c02 c03   c2 c3   b1 #> 1 315   0.04   0.10   0.68      1   0.95   0.85  0.05  0.1 100 150 0.75  1 1000 #> 2 591   0.02   0.06   0.84      1   0.95   0.85  0.05  0.1 100 150 0.75  1 1000 #>     b2   b3 #> 1 2000 3000 #> 2 2000 3000 cat(comment(res))                                        # displays the optimization sequence, start/finish date of procedure #>  #> optimization sequence RRgo: 0.7 0.75 0.8 0.85 0.9  #> optimization sequence n2: 20 24 28 32 36 40 44 48 52 56 60 64 68 72 76 80 84 88 92 96 100  #> set on date: 2023-01-24 00:48:06  #> finish date: 2023-01-24 00:48:27"},{"path":"https://sterniii3.github.io/drugdevelopR/reference/optimal_multitrial_normal.html","id":null,"dir":"Reference","previous_headings":"","what":"Optimal phase II/III drug development planning where several phase III trials are performed — optimal_multitrial_normal","title":"Optimal phase II/III drug development planning where several phase III trials are performed — optimal_multitrial_normal","text":"optimal_multitrial_normal function enables planning phase II/III drug development programs several phase III trials normally distributed endpoint. main output values optimal sample size allocation go/-go decision rules. normally distributed endpoints, treatment effect measured standardized difference means (Delta). assumed true treatment effects can assumed fixed modelled prior distribution.","code":""},{"path":"https://sterniii3.github.io/drugdevelopR/reference/optimal_multitrial_normal.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Optimal phase II/III drug development planning where several phase III trials are performed — optimal_multitrial_normal","text":"","code":"optimal_multitrial_normal(   w,   Delta1,   Delta2,   in1,   in2,   a,   b,   n2min,   n2max,   stepn2,   kappamin,   kappamax,   stepkappa,   alpha,   beta,   c2,   c3,   c02,   c03,   K = Inf,   N = Inf,   S = -Inf,   b1,   b2,   b3,   case,   strategy = TRUE,   fixed = FALSE,   num_cl = 1 )"},{"path":"https://sterniii3.github.io/drugdevelopR/reference/optimal_multitrial_normal.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Optimal phase II/III drug development planning where several phase III trials are performed — optimal_multitrial_normal","text":"w weight mixture prior distribution Delta1 assumed true prior treatment effect measured standardized difference means, see details Delta2 assumed true prior treatment effect measured standardized difference means, see details in1 amount information Delta1 terms sample size, see details in2 amount information Delta2 terms sample size, see details lower boundary truncation prior distribution b upper boundary truncation prior distribution n2min minimal total sample size phase II; must even number n2max maximal total sample size phase II, must even number stepn2 step size optimization n2; must even number kappamin minimal threshold value kappa go/-go decision rule kappamax maximal threshold value  kappa go/-go decision rule stepkappa step size optimization threshold value kappa alpha significance level beta type II error rate; .e. 1 - beta power calculation sample size phase III c2 variable per-patient cost phase II 10^5 $ c3 variable per-patient cost phase III 10^5 $ c02 fixed cost phase II 10^5 $ c03 fixed cost phase III 10^5 $ K constraint costs program, default: Inf, e.g. constraint N constraint total expected sample size program, default: Inf, e.g. constraint S constraint expected probability successful program, default: -Inf, e.g. constraint b1 expected gain effect size category \"small\" 10^5 $ b2 expected gain effect size category \"medium\" 10^5 $ b3 expected gain effect size category \"large\" 10^5 $ case choose case: \"least 1, 2 3 significant trials needed approval\" strategy choose strategy: \"conduct 1, 2, 3 4 trials order achieve case's goal\"; TRUE calculates strategies selected case fixed choose true treatment effects fixed following prior distribution, TRUE Delta1 used fixed effect num_cl number clusters used parallel computing, default: 1","code":""},{"path":"https://sterniii3.github.io/drugdevelopR/reference/optimal_multitrial_normal.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Optimal phase II/III drug development planning where several phase III trials are performed — optimal_multitrial_normal","text":"output function data.frame object containing optimization results: Strategy Strategy: \"number trials conducted order achieve goal case\" u maximal expected utility optimization constraints, .e. expected utility optimal sample size threshold value Kappa optimal threshold value decision rule go phase III n2 total sample size phase II; rounded next even natural number n3 total sample size phase III; rounded next even natural number n total sample size program; n = n2 + n3 K maximal costs program pgo probability go phase III sProg probability successful program sProg1 probability successful program \"small\" treatment effect phase III (lower boundary HR scale set 0, proposed Cohen (1988)) sProg2 probability successful program \"medium\" treatment effect phase III (lower boundary HR scale set 0.5, proposed Cohen (1988)) sProg3 probability successful program \"large\" treatment effect phase III (lower boundary HR scale set 0.8, proposed Cohen (1988)) K2 expected costs phase II K3 expected costs phase III input parameters. Taking cat(comment()) data frame lists used optimization sequences, start finish date optimization procedure.","code":""},{"path":"https://sterniii3.github.io/drugdevelopR/reference/optimal_multitrial_normal.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Optimal phase II/III drug development planning where several phase III trials are performed — optimal_multitrial_normal","text":"R Shiny application prior visualizes prior distributions used package. Fast computing enabled parallel programming.","code":""},{"path":"https://sterniii3.github.io/drugdevelopR/reference/optimal_multitrial_normal.html","id":"effect-sizes","dir":"Reference","previous_headings":"","what":"Effect sizes","title":"Optimal phase II/III drug development planning where several phase III trials are performed — optimal_multitrial_normal","text":"settings, definition \"small\", \"medium\" \"large\" effect sizes can user-specified using input parameters steps1, stepm1 stepl1. Due complexity multitrial setting, feature included setting. Instead, effect sizes set predefined values explained sProg1, sProg2 sProg3 Value section.","code":""},{"path":"https://sterniii3.github.io/drugdevelopR/reference/optimal_multitrial_normal.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Optimal phase II/III drug development planning where several phase III trials are performed — optimal_multitrial_normal","text":"Cohen, J. (1988). Statistical power analysis behavioral sciences.","code":""},{"path":"https://sterniii3.github.io/drugdevelopR/reference/optimal_multitrial_normal.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Optimal phase II/III drug development planning where several phase III trials are performed — optimal_multitrial_normal","text":"","code":"res <- optimal_multitrial_normal(w = 0.3,                # define parameters for prior   Delta1 = 0.375, Delta2 = 0.625, in1 = 300, in2 = 600,  # (https://web.imbi.uni-heidelberg.de/prior/)   a = 0.25, b = 0.75,   n2min = 20, n2max = 100, stepn2 = 4,                   # define optimization set for n2   kappamin = 0.02, kappamax = 0.2, stepkappa = 0.02,     # define optimization set for kappa   alpha = 0.05, beta = 0.1,                              # drug development planning parameters   c2 = 0.675, c3 = 0.72, c02 = 15, c03 = 20,             # define fixed and variable costs for phase II and III   K = Inf, N = Inf, S = -Inf,                            # set constraints   b1 = 3000, b2 = 8000, b3 = 10000,                      # define expected benefit for a \"small\", \"medium\" and \"large\" treatment effect                                             # assume different/same population structures in phase II and III   case = 1, strategy = TRUE,                             # chose Case and Strategy   fixed = TRUE,                                          # choose if true treatment effects are fixed or random   num_cl = 1)                                            # set number of cores used for parallelized computing #>  #> Case  1 : Optimization progess for Strategy  1 #>  #>    |                                                                               |                                                                      |   0%   |                                                                               |=======                                                               |  10%   |                                                                               |==============                                                        |  20%   |                                                                               |=====================                                                 |  30%   |                                                                               |============================                                          |  40%   |                                                                               |===================================                                   |  50%   |                                                                               |==========================================                            |  60%   |                                                                               |=================================================                     |  70%   |                                                                               |========================================================              |  80%   |                                                                               |===============================================================       |  90%   |                                                                               |======================================================================| 100% #>  #> Case  1 : Optimization progess for Strategy  2 #>  #>    |                                                                               |                                                                      |   0%   |                                                                               |=======                                                               |  10%   |                                                                               |==============                                                        |  20%   |                                                                               |=====================                                                 |  30%   |                                                                               |============================                                          |  40%   |                                                                               |===================================                                   |  50%   |                                                                               |==========================================                            |  60%   |                                                                               |=================================================                     |  70%   |                                                                               |========================================================              |  80%   |                                                                               |===============================================================       |  90%   |                                                                               |======================================================================| 100% #>  #>  #> Optimization result: #>  #>   Case Strategy       u Kappa  n2  n3   n  pgo sProg Delta   K   N    S K2  K3 #> 1    1        1 1890.94  0.10 100 376 476 0.92  0.74 0.375 Inf Inf -Inf 82 289 #> 2    1        2 1928.79  0.12 100 656 756 0.90  0.82 0.375 Inf Inf -Inf 82 508 #>   sProg1 sProg2 sProg3 steps1 stepm1 stepl1 alpha beta c02 c03    c2   c3   b1 #> 1   0.74   0.01      0      0    0.5    0.8  0.05  0.1  15  20 0.675 0.72 3000 #> 2   0.81   0.01      0      0    0.5    0.8  0.05  0.1  15  20 0.675 0.72 3000 #>     b2    b3 #> 1 8000 10000 #> 2 8000 10000 #>  res #>   Case Strategy       u Kappa  n2  n3   n  pgo sProg Delta   K   N    S K2  K3 #> 1    1        1 1890.94  0.10 100 376 476 0.92  0.74 0.375 Inf Inf -Inf 82 289 #> 2    1        2 1928.79  0.12 100 656 756 0.90  0.82 0.375 Inf Inf -Inf 82 508 #>   sProg1 sProg2 sProg3 steps1 stepm1 stepl1 alpha beta c02 c03    c2   c3   b1 #> 1   0.74   0.01      0      0    0.5    0.8  0.05  0.1  15  20 0.675 0.72 3000 #> 2   0.81   0.01      0      0    0.5    0.8  0.05  0.1  15  20 0.675 0.72 3000 #>     b2    b3 #> 1 8000 10000 #> 2 8000 10000  cat(comment(res))                                        # displays the optimization sequence, start/ finish date of procedure. #>  #> optimization sequence kappa: 0.02 0.04 0.06 0.08 0.1 0.12 0.14 0.16 0.18 0.2  #> optimization sequence n2: 20 24 28 32 36 40 44 48 52 56 60 64 68 72 76 80 84 88 92 96 100  #> set on date: 2023-01-24 00:48:27  #> finish date: 2023-01-24 00:49:19"},{"path":"https://sterniii3.github.io/drugdevelopR/reference/optimal_normal.html","id":null,"dir":"Reference","previous_headings":"","what":"Optimal phase II/III drug development planning with normally distributed endpoint — optimal_normal","title":"Optimal phase II/III drug development planning with normally distributed endpoint — optimal_normal","text":"function optimal_normal drugdevelopR package enables planning phase II/III drug development programs optimal sample size allocation go/-go decision rules normally distributed endpoints. treatment effect measured standardized difference means. assumed true treatment effects can assumed fixed modelled prior distribution. R Shiny application prior visualizes prior distributions used package. Fast computing enabled parallel programming.","code":""},{"path":"https://sterniii3.github.io/drugdevelopR/reference/optimal_normal.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Optimal phase II/III drug development planning with normally distributed endpoint — optimal_normal","text":"","code":"optimal_normal(   w,   Delta1,   Delta2,   in1,   in2,   a,   b,   n2min,   n2max,   stepn2,   kappamin,   kappamax,   stepkappa,   alpha,   beta,   c2,   c3,   c02,   c03,   K = Inf,   N = Inf,   S = -Inf,   steps1 = 0,   stepm1 = 0.5,   stepl1 = 0.8,   b1,   b2,   b3,   gamma = 0,   fixed = FALSE,   skipII = FALSE,   num_cl = 1 )"},{"path":"https://sterniii3.github.io/drugdevelopR/reference/optimal_normal.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Optimal phase II/III drug development planning with normally distributed endpoint — optimal_normal","text":"w weight mixture prior distribution Delta1 assumed true prior treatment effect measured standardized difference means, see details Delta2 assumed true prior treatment effect measured standardized difference means, see details in1 amount information Delta1 terms sample size, see details in2 amount information Delta2 terms sample size, see details lower boundary truncation prior distribution b upper boundary truncation prior distribution n2min minimal total sample size phase II; must even number n2max maximal total sample size phase II, must even number stepn2 step size optimization n2; must even number kappamin minimal threshold value kappa go/-go decision rule kappamax maximal threshold value  kappa go/-go decision rule stepkappa step size optimization threshold value kappa alpha significance level beta type II error rate; .e. 1 - beta power calculation sample size phase III c2 variable per-patient cost phase II 10^5 $ c3 variable per-patient cost phase III 10^5 $ c02 fixed cost phase II 10^5 $ c03 fixed cost phase III 10^5 $ K constraint costs program, default: Inf, e.g. constraint N constraint total expected sample size program, default: Inf, e.g. constraint S constraint expected probability successful program, default: -Inf, e.g. constraint steps1 lower boundary effect size category \"small\", default: 0 stepm1 lower boundary effect size category \"medium\" = upper boundary effect size category \"small\" default: 0.5 stepl1 lower boundary effect size category \"large\" = upper boundary effect size category \"medium\", default: 0.8 b1 expected gain effect size category \"small\" 10^5 $ b2 expected gain effect size category \"medium\" 10^5 $ b3 expected gain effect size category \"large\" 10^5 $ gamma model different populations phase II III choose gamma != 0, default: 0, see details fixed choose true treatment effects fixed following prior distribution, TRUE Delta1 used fixed effect skipII choose skipping phase II option, default: FALSE; TRUE, program calculates expected utility case phase II skipped compares situation phase II skipped. results returned list two results lists, res[[1]] results including phase II res[[2]] skipping phase II. num_cl number clusters used parallel computing, default: 1","code":""},{"path":"https://sterniii3.github.io/drugdevelopR/reference/optimal_normal.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Optimal phase II/III drug development planning with normally distributed endpoint — optimal_normal","text":"output function optimal_normal data.frame containing optimization results: u maximal expected utility optimization constraints, .e. expected utility optimal sample size threshold value Kappa optimal threshold value decision rule go phase III n2 total sample size phase II n3 total sample size phase III; rounded next even natural number n total sample size program; n = n2 + n3 K maximal costs program pgo probability go phase III sProg probability successful program sProg1 probability successful program \"small\" treatment effect phase III sProg2 probability successful program \"medium\" treatment effect phase III sProg3 probability successful program \"large\" treatment effect phase III K2 expected costs phase II K3 expected costs phase III input parameters. Taking cat(comment()) data.frame object lists used optimization sequences, start finish date optimization procedure.","code":""},{"path":"https://sterniii3.github.io/drugdevelopR/reference/optimal_normal.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Optimal phase II/III drug development planning with normally distributed endpoint — optimal_normal","text":"Cohen, J. (1988). Statistical power analysis behavioral sciences.","code":""},{"path":"https://sterniii3.github.io/drugdevelopR/reference/optimal_normal.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Optimal phase II/III drug development planning with normally distributed endpoint — optimal_normal","text":"","code":"res <- optimal_normal(w=0.3,                             # define parameters for prior   Delta1 = 0.375, Delta2 = 0.625, in1=300, in2=600,      # (https://web.imbi.uni-heidelberg.de/prior/)   a = 0.25, b = 0.75,   n2min = 20, n2max = 100, stepn2 = 4,                   # define optimization set for n2   kappamin = 0.02, kappamax = 0.2, stepkappa = 0.02,     # define optimization set for kappa   alpha = 0.05, beta = 0.1,                              # drug development planning parameters   c2 = 0.675, c3 = 0.72, c02 = 15, c03 = 20,             # define fixed and variable costs for phase II and III   K = Inf, N = Inf, S = -Inf,                            # set maximal costs/ expected sample size for the program or minimal expected probability of a successful program   steps1 = 0,                                            # define lower boundary for \"small\"   stepm1 = 0.5,                                          # \"medium\"   stepl1 = 0.8,                                          # and \"large\" treatment effect size categories as proposed by e.g. Cohen (1988)   b1 = 3000, b2 = 8000, b3 = 10000,                      # define expected benefit for a \"small\", \"medium\" and \"large\" treatment effect   gamma = 0,                                             # assume different/same population structures in phase II and III   fixed = FALSE,                                         # choose if true treatment effects are fixed or random   skipII = FALSE,                                        # choose if skipping phase II would be an option   num_cl = 1)                                            # set number of cores used for parallelized computing (check maximum number possible with detectCores()) #> Optimization progress: #>  #>    |                                                                               |                                                                      |   0%   |                                                                               |=======                                                               |  10%   |                                                                               |==============                                                        |  20%   |                                                                               |=====================                                                 |  30%   |                                                                               |============================                                          |  40%   |                                                                               |===================================                                   |  50%   |                                                                               |==========================================                            |  60%   |                                                                               |=================================================                     |  70%   |                                                                               |========================================================              |  80%   |                                                                               |===============================================================       |  90%   |                                                                               |======================================================================| 100% #>  #>  #> Optimization result: #>  #>         u Kappa  n2  n3   n  pgo sProg   w Delta1 Delta2 in1 in2    a    b   K #> 1 2272.13  0.08 100 350 450 0.94  0.78 0.3  0.375  0.625 300 600 0.25 0.75 Inf #>   K2  K3 sProg1 sProg2 sProg3 steps1 stepm1 stepl1 alpha beta c02 c03    c2 #> 1 82 271   0.73   0.05      0      0    0.5    0.8  0.05  0.1  15  20 0.675 #>     c3   b1   b2    b3 gamma #> 1 0.72 3000 8000 10000     0 #>  res #>         u Kappa  n2  n3   n  pgo sProg   w Delta1 Delta2 in1 in2    a    b   K #> 1 2272.13  0.08 100 350 450 0.94  0.78 0.3  0.375  0.625 300 600 0.25 0.75 Inf #>   K2  K3 sProg1 sProg2 sProg3 steps1 stepm1 stepl1 alpha beta c02 c03    c2 #> 1 82 271   0.73   0.05      0      0    0.5    0.8  0.05  0.1  15  20 0.675 #>     c3   b1   b2    b3 gamma #> 1 0.72 3000 8000 10000     0 cat(comment(res))                                        # displays the optimization sequence, start and finish date of the optimization procedure #>  #> optimization sequence Kappa: 0.02 0.04 0.06 0.08 0.1 0.12 0.14 0.16 0.18 0.2  #> optimization sequence n2: 20 24 28 32 36 40 44 48 52 56 60 64 68 72 76 80 84 88 92 96 100  #> set on date: 2023-01-24 00:49:19  #> finish date: 2023-01-24 00:50:57"},{"path":"https://sterniii3.github.io/drugdevelopR/reference/optimal_tte.html","id":null,"dir":"Reference","previous_headings":"","what":"Optimal phase II/III drug development planning with time-to-event endpoint — optimal_tte","title":"Optimal phase II/III drug development planning with time-to-event endpoint — optimal_tte","text":"function optimal_tte drugdevelopR package enables planning phase II/III drug development programs optimal sample size allocation go/-go decision rules time--event endpoints (Kirchner et al., 2016). assumed true treatment effects can assumed fixed modelled prior distribution. assuming fixed true treatment effects, planning can also done user-friendly R Shiny app basic. app prior visualizes prior distributions used package. Fast computing enabled parallel programming. functions optimal_tte optimal_tte_graphic return output (given input values). However, optimal_tte_graphic returns graphical output accompany results.","code":""},{"path":"https://sterniii3.github.io/drugdevelopR/reference/optimal_tte.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Optimal phase II/III drug development planning with time-to-event endpoint — optimal_tte","text":"","code":"optimal_tte(   w,   hr1,   hr2,   id1,   id2,   d2min,   d2max,   stepd2,   hrgomin,   hrgomax,   stephrgo,   alpha,   beta,   xi2,   xi3,   c2,   c3,   c02,   c03,   K = Inf,   N = Inf,   S = -Inf,   steps1 = 1,   stepm1 = 0.95,   stepl1 = 0.85,   b1,   b2,   b3,   gamma = 0,   fixed = FALSE,   skipII = FALSE,   num_cl = 1 )  optimal_tte_graphic(   w,   hr1,   hr2,   id1,   id2,   d2min,   d2max,   stepd2,   hrgomin,   hrgomax,   stephrgo,   alpha,   beta,   xi2,   xi3,   c2,   c3,   c02,   c03,   K = Inf,   N = Inf,   S = -Inf,   steps1 = 1,   stepm1 = 0.95,   stepl1 = 0.85,   b1,   b2,   b3,   gamma = 0,   fixed = FALSE,   skipII = FALSE,   num_cl = 1 )"},{"path":"https://sterniii3.github.io/drugdevelopR/reference/optimal_tte.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Optimal phase II/III drug development planning with time-to-event endpoint — optimal_tte","text":"data.frame containing optimization results (see Value)","code":""},{"path":"https://sterniii3.github.io/drugdevelopR/reference/optimal_tte.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Optimal phase II/III drug development planning with time-to-event endpoint — optimal_tte","text":"w weight mixture prior distribution, see Shiny application choice weights hr1 first assumed true treatment effect HR scale prior distribution hr2 second assumed true treatment effect HR scale prior distribution id1 amount information hr1 terms number events id2 amount information hr2 terms number events d2min minimal number events phase II d2max maximal number events phase II stepd2 step size optimization d2 hrgomin minimal threshold value go/-go decision rule hrgomax maximal threshold value go/-go decision rule stephrgo step size optimization HRgo alpha significance level beta type II error rate; .e. 1 - beta power calculation number events phase III Schoenfeld's formula (Schoenfeld 1981) xi2 assumed event rate phase II, used calculating sample size phase II via n2 = d2/xi2 xi3 event rate phase III, used calculating sample size phase III analogy xi2 c2 variable per-patient cost phase II 10^5 $. c3 variable per-patient cost phase III 10^5 $. c02 fixed cost phase II 10^5 $. c03 fixed cost phase III 10^5 $. K constraint costs program, default: Inf, e.g. constraint N constraint total expected sample size program, default: Inf, e.g. constraint S constraint expected probability successful program, default: -Inf, e.g. constraint steps1 lower boundary effect size category \"small\" HR scale, default: 1 stepm1 lower boundary effect size category \"medium\" HR scale = upper boundary effect size category \"small\" HR scale, default: 0.95 stepl1 lower boundary effect size category \"large\" HR scale = upper boundary effect size category \"medium\" HR scale, default: 0.85 b1 expected gain effect size category \"small\" b2 expected gain effect size category \"medium\" b3 expected gain effect size category \"large\" gamma model different populations phase II III choose gamma != 0, default: 0 fixed choose true treatment effects fixed random, TRUE hr1 used fixed effect hr2 ignored skipII choose skipping phase II option, default: FALSE; TRUE, program calculates expected utility case phase II skipped compares situation phase II skipped. results returned list two results lists, res[[1]] results including phase II res[[2]] skipping phase II. res[[2]] additional parameter, res[[2]]$HR, assumed hazards ratio used planning phase III study phase II skipped. calculated exponential function median prior function. num_cl number clusters used parallel computing, default: 1","code":""},{"path":"https://sterniii3.github.io/drugdevelopR/reference/optimal_tte.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Optimal phase II/III drug development planning with time-to-event endpoint — optimal_tte","text":"output function data.frame object containing optimization results: HRgo optimal threshold value decision rule go phase III d2 optimal total number events phase II d3 total expected number events phase III; rounded next natural number d total expected number events program; d = d2 + d3 n2 total sample size phase II; rounded next even natural number n3 total sample size phase III; rounded next even natural number n total sample size program; n = n2 + n3 K maximal costs program pgo probability go phase III sProg probability successful program sProg1 probability successful program \"small\" treatment effect phase III sProg2 probability successful program \"medium\" treatment effect phase III sProg3 probability successful program \"large\" treatment effect phase III K2 expected costs phase II K3 expected costs phase III input parameters. Taking cat(comment()) data frame lists used optimization sequences, start finish date optimization procedure.","code":""},{"path":"https://sterniii3.github.io/drugdevelopR/reference/optimal_tte.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Optimal phase II/III drug development planning with time-to-event endpoint — optimal_tte","text":"Kirchner, M., Kieser, M., Goette, H., & Schueler, . (2016). Utility-based optimization phase II/III programs. Statistics Medicine, 35(2), 305-316. IQWiG (2016). Allgemeine Methoden. Version 5.0, 10.07.2016, Technical Report. Available https://www.iqwig.de/de/methoden/methodenpapier.3020.html, assessed last 15.05.19. Schoenfeld, D. (1981). asymptotic properties nonparametric tests comparing survival distributions. Biometrika, 68(1), 316-319.","code":""},{"path":[]},{"path":"https://sterniii3.github.io/drugdevelopR/reference/optimal_tte.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Optimal phase II/III drug development planning with time-to-event endpoint — optimal_tte","text":"","code":"res <- optimal_tte(w = 0.3,                              # define parameters for prior   hr1 = 0.69, hr2 = 0.88, id1 = 210, id2 = 420,          # (https://web.imbi.uni-heidelberg.de/prior/)   d2min = 20, d2max = 100, stepd2 = 5,                   # define optimization set for d2   hrgomin = 0.7, hrgomax = 0.9, stephrgo = 0.05,         # define optimization set for HRgo   alpha = 0.05, beta = 0.1, xi2 = 0.7, xi3 = 0.7,        # drug development planning parameters   c2 = 0.75, c3 = 1, c02 = 100, c03 = 150,               # define fixed and variable costs for phase II and III   K = Inf, N = Inf, S = -Inf,                            # set maximal costs/ expected sample size for the program or minimal expected probability of a successful program   steps1 = 1,                                            # define lower boundary for \"small\"   stepm1 = 0.95,                                         # \"medium\"   stepl1 = 0.85,                                         # and \"large\" treatment effect size categories as proposed by IQWiG (2016)   b1 = 1000, b2 = 2000, b3 = 3000,                       # define expected benefit for a \"small\", \"medium\" and \"large\" treatment effect   gamma = 0,                                             # assume different/same population structures in phase II and III   fixed = FALSE,                                         # choose if true treatment effects are fixed or random   skipII = FALSE,                                        # choose if skipping phase II would be an option   num_cl = 1)                                            # set number of cores used for parallelized computing (check maximum number possible with detectCores()) #>  #> Optimization progress: #>  #>    |                                                                               |                                                                      |   0%   |                                                                               |==============                                                        |  20%   |                                                                               |============================                                          |  40%   |                                                                               |==========================================                            |  60%   |                                                                               |========================================================              |  80%   |                                                                               |======================================================================| 100% #>  #>  #> Optimization result: #>  #>        u HRgo d2  d3   d  n2  n3   n  pgo sProg   w  hr1  hr2 id1 id2   K   N #> 1 164.01  0.8 90 121 211 130 172 302 0.45  0.26 0.3 0.69 0.88 210 420 Inf Inf #>      S  K2  K3 sProg1 sProg2 sProg3 steps1 stepm1 stepl1 alpha beta xi2 xi3 c02 #> 1 -Inf 198 240   0.05   0.09   0.12      1   0.95   0.85  0.05  0.1 0.7 0.7 100 #>   c03   c2 c3   b1   b2   b3 gamma #> 1 150 0.75  1 1000 2000 3000     0 #>  res #>        u HRgo d2  d3   d  n2  n3   n  pgo sProg   w  hr1  hr2 id1 id2   K   N #> 1 164.01  0.8 90 121 211 130 172 302 0.45  0.26 0.3 0.69 0.88 210 420 Inf Inf #>      S  K2  K3 sProg1 sProg2 sProg3 steps1 stepm1 stepl1 alpha beta xi2 xi3 c02 #> 1 -Inf 198 240   0.05   0.09   0.12      1   0.95   0.85  0.05  0.1 0.7 0.7 100 #>   c03   c2 c3   b1   b2   b3 gamma #> 1 150 0.75  1 1000 2000 3000     0 cat(comment(res))                                        # displays the optimization sequence, start and finish date of the optimization procedure. #>  #> optimization sequence HRgo: 0.7 0.75 0.8 0.85 0.9  #> optimization sequence d2: 20 25 30 35 40 45 50 55 60 65 70 75 80 85 90 95 100  #> set on date: 2023-01-24 00:50:57  #> finish date: 2023-01-24 00:51:03   # res <- optimal_tte_graphic(w = 0.3,                     # define parameters for prior  # hr1 = 0.69, hr2 = 0.88, id1 = 210, id2 = 420,          # (https://web.imbi.uni-heidelberg.de/prior/)  # d2min = 20, d2max = 100, stepd2 = 5,                   # define optimization set for d2  # hrgomin = 0.7, hrgomax = 0.9, stephrgo = 0.05,         # define optimization set for HRgo  # alpha = 0.05, beta = 0.1, xi2 = 0.7, xi3 = 0.7,        # drug development planning parameters  # c2 = 0.75, c3 = 1, c02 = 100, c03 = 150,               # define fixed and variable costs for phase II and III  # K = Inf, N = Inf, S = -Inf,                            # set maximal costs/ expected sample size for the program or minimal expected probability of a successful program  # steps1 = 1,                                            # define lower boundary for \"small\"  # stepm1 = 0.95,                                         # \"medium\"  # stepl1 = 0.85,                                         # and \"large\" treatment effect size categories as proposed by IQWiG (2016)  # b1 = 1000, b2 = 2000, b3 = 3000,                       # define expected benefit for a \"small\", \"medium\" and \"large\" treatment effect  # gamma = 0,                                             # assume different/same population structures in phase II and III  # fixed = FALSE,                                         # choose if true treatment effects are fixed or random  # skipII = FALSE,                                        # choose if skipping phase II would be an option  # num_cl = 1)                                            # set number of cores used for parallelized computing (check maximum number possible with detectCores()) # res # cat(comment(res))                                        # displays the optimization sequence, start and finish date of the optimi"},{"path":"https://sterniii3.github.io/drugdevelopR/reference/os_tte.html","id":null,"dir":"Reference","previous_headings":"","what":"Probability that endpoint OS significant — os_tte","title":"Probability that endpoint OS significant — os_tte","text":"function calculate probability endpoint OS statistically significant. context cancer research OS stands overall survival, positive treatment effect endpoints thus sufficient successful program.","code":""},{"path":"https://sterniii3.github.io/drugdevelopR/reference/os_tte.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Probability that endpoint OS significant — os_tte","text":"","code":"os_tte(HRgo, n2, alpha, beta, hr1, hr2, id1, id2, fixed, rho)"},{"path":"https://sterniii3.github.io/drugdevelopR/reference/os_tte.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Probability that endpoint OS significant — os_tte","text":"HRgo threshold value go/-go decision rule; n2 total sample size phase II; must even number alpha one- sided significance level beta 1-beta power calculation number events phase III Schoenfeld (1981) formula hr1 assumed true treatment effect HR scale treatment 1 hr2 assumed true treatment effect HR scale treatment 2 id1 amount information hr1 terms number events id2 amount information hr2 terms number events fixed choose true treatment effects fixed random, TRUE hr1 used fixed effect rho correlation two endpoints","code":""},{"path":"https://sterniii3.github.io/drugdevelopR/reference/os_tte.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Probability that endpoint OS significant — os_tte","text":"output function os_tte() probability endpoint OS significant.","code":""},{"path":"https://sterniii3.github.io/drugdevelopR/reference/os_tte.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Probability that endpoint OS significant — os_tte","text":"","code":"res <- os_tte(HRgo = 0.8, n2 = 50, alpha = 0.05, beta = 0.1,                                hr1 = 0.75, hr2 = 0.80,                                 id1 = 300, id2 = 600,                                 fixed = TRUE, rho = 0.3)"},{"path":"https://sterniii3.github.io/drugdevelopR/reference/pgo_binary.html","id":null,"dir":"Reference","previous_headings":"","what":"Probability to go to phase III for multiarm programs with binary distributed outcomes — pgo_binary","title":"Probability to go to phase III for multiarm programs with binary distributed outcomes — pgo_binary","text":"Given parameters function calculates probability go phase III second phase conducted. considered strategies follows:  Strategy: best promising treatment goes phase III","code":""},{"path":"https://sterniii3.github.io/drugdevelopR/reference/pgo_binary.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Probability to go to phase III for multiarm programs with binary distributed outcomes — pgo_binary","text":"","code":"pgo_binary(RRgo, n2, p0, p11, p12, strategy, case)"},{"path":"https://sterniii3.github.io/drugdevelopR/reference/pgo_binary.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Probability to go to phase III for multiarm programs with binary distributed outcomes — pgo_binary","text":"RRgo threshold value go/-go decision rule n2 total sample size phase II; must even number p0 assumed true rate control group p11 assumed true rate treatment group p12 assumed true rate treatment group strategy choose Strategy: 1 (\"best promising\"), 2 (\"promising\") 3 () case different cases: 1 (\"nogo\"), 21 (treatment 1 promising, treatment 2 ), 22 (treatment 2 promising, treatment 1 ), 31 (treatments promising, treatment 1 better), 32 (treatments promising, treatment 2 better)","code":""},{"path":"https://sterniii3.github.io/drugdevelopR/reference/pgo_binary.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Probability to go to phase III for multiarm programs with binary distributed outcomes — pgo_binary","text":"function pgo_binary() returns probability go phase III.","code":""},{"path":"https://sterniii3.github.io/drugdevelopR/reference/pgo_binary.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Probability to go to phase III for multiarm programs with binary distributed outcomes — pgo_binary","text":"","code":"res <- pgo_binary(RRgo = 0.8 ,n2 = 50 ,p0 = 0.6, p11 =  0.3, p12 = 0.5,strategy = 3, case = 31)"},{"path":"https://sterniii3.github.io/drugdevelopR/reference/pgo_multiple_normal.html","id":null,"dir":"Reference","previous_headings":"","what":"Probability to go to phase III for multiple endpoints with normally distributed outcomes — pgo_multiple_normal","title":"Probability to go to phase III for multiple endpoints with normally distributed outcomes — pgo_multiple_normal","text":"function calculated probability go phase III, .e. results phase II promising enough get successful drug development program. Successful means endpoints show statistically significant positive treatment effect phase III.","code":""},{"path":"https://sterniii3.github.io/drugdevelopR/reference/pgo_multiple_normal.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Probability to go to phase III for multiple endpoints with normally distributed outcomes — pgo_multiple_normal","text":"","code":"pgo_multiple_normal(   kappa,   n2,   Delta1,   Delta2,   in1,   in2,   sigma1,   sigma2,   fixed,   rho )"},{"path":"https://sterniii3.github.io/drugdevelopR/reference/pgo_multiple_normal.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Probability to go to phase III for multiple endpoints with normally distributed outcomes — pgo_multiple_normal","text":"kappa threshold value go/-go decision rule; vector endpoints n2 total sample size phase II; must even number Delta1 assumed true treatment effect standardized difference means Delta2 assumed true treatment effect standardized difference means in1 amount information Delta1 terms sample size in2 amount information Delta2 terms sample size sigma1 standard deviation first endpoint sigma2 standard deviation second endpoint fixed choose true treatment effects fixed random, TRUE Delta1 used fixed effect rho correlation two endpoints","code":""},{"path":"https://sterniii3.github.io/drugdevelopR/reference/pgo_multiple_normal.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Probability to go to phase III for multiple endpoints with normally distributed outcomes — pgo_multiple_normal","text":"output function pgo_multiple_normal() probability go phase III.","code":""},{"path":"https://sterniii3.github.io/drugdevelopR/reference/pgo_multiple_normal.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Probability to go to phase III for multiple endpoints with normally distributed outcomes — pgo_multiple_normal","text":"","code":"res <- pgo_multiple_normal(kappa = 0.1, n2 = 50,                                Delta1 = 0.375, Delta2 = 0.625, in1 = 300, in2 = 600,                                 sigma1 = 8, sigma2 = 4, fixed = TRUE, rho = 0.3)"},{"path":"https://sterniii3.github.io/drugdevelopR/reference/pgo_multiple_tte.html","id":null,"dir":"Reference","previous_headings":"","what":"Probability to go to phase III for multiple endpoints in the time-to-event setting — pgo_multiple_tte","title":"Probability to go to phase III for multiple endpoints in the time-to-event setting — pgo_multiple_tte","text":"function calculates probability go phase III, .e. results phase II promising enough get successful drug development program. Successful means least one endpoint shows statistically significant positive treatment effect phase III.","code":""},{"path":"https://sterniii3.github.io/drugdevelopR/reference/pgo_multiple_tte.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Probability to go to phase III for multiple endpoints in the time-to-event setting — pgo_multiple_tte","text":"","code":"pgo_multiple_tte(HRgo, n2, hr1, hr2, id1, id2, fixed, rho)"},{"path":"https://sterniii3.github.io/drugdevelopR/reference/pgo_multiple_tte.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Probability to go to phase III for multiple endpoints in the time-to-event setting — pgo_multiple_tte","text":"HRgo threshold value go/-go decision rule; n2 total sample size phase II; must even number hr1 assumed true treatment effect HR scale treatment 1 hr2 assumed true treatment effect HR scale treatment 2 id1 amount information hr1 terms number events id2 amount information hr2 terms number events fixed choose true treatment effects fixed random, TRUE hr1 used fixed effect rho correlation two endpoints","code":""},{"path":"https://sterniii3.github.io/drugdevelopR/reference/pgo_multiple_tte.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Probability to go to phase III for multiple endpoints in the time-to-event setting — pgo_multiple_tte","text":"output function pgo_multiple_tte() probability go phase III.","code":""},{"path":"https://sterniii3.github.io/drugdevelopR/reference/pgo_multiple_tte.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Probability to go to phase III for multiple endpoints in the time-to-event setting — pgo_multiple_tte","text":"","code":"res <- pgo_multiple_tte(HRgo = 0.8, n2 = 50,                                hr1 = 0.75, hr2 = 0.80, id1 = 300, id2 = 600,                                 fixed = TRUE, rho = 0.3)"},{"path":"https://sterniii3.github.io/drugdevelopR/reference/pgo_normal.html","id":null,"dir":"Reference","previous_headings":"","what":"Probability to go to phase III for multiarm programs with normally distributed outcomes — pgo_normal","title":"Probability to go to phase III for multiarm programs with normally distributed outcomes — pgo_normal","text":"Given parameters function calculates probability go phase III second phase conducted. considered strategies follows:  Strategy: best promising treatment goes phase III","code":""},{"path":"https://sterniii3.github.io/drugdevelopR/reference/pgo_normal.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Probability to go to phase III for multiarm programs with normally distributed outcomes — pgo_normal","text":"","code":"pgo_normal(kappa, n2, Delta1, Delta2, strategy, case)"},{"path":"https://sterniii3.github.io/drugdevelopR/reference/pgo_normal.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Probability to go to phase III for multiarm programs with normally distributed outcomes — pgo_normal","text":"kappa threshold value go/-go decision rule n2 total sample size phase II; must even number Delta1 assumed true treatment effect standardized difference means Delta2 assumed true treatment effect standardized difference means strategy choose Strategy: 1 (\"best promising\"), 2 (\"promising\") 3 () case different cases: 1 (\"nogo\"), 21 (treatment 1 promising, treatment 2 ), 22 (treatment 2 promising, treatment 1 ), 31 (treatments promising, treatment 1 better), 32 (treatments promising, treatment 2 better)","code":""},{"path":"https://sterniii3.github.io/drugdevelopR/reference/pgo_normal.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Probability to go to phase III for multiarm programs with normally distributed outcomes — pgo_normal","text":"function pgo_normal() returns probability go phase III multiarm programs normally distributed outcomes","code":""},{"path":"https://sterniii3.github.io/drugdevelopR/reference/pgo_normal.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Probability to go to phase III for multiarm programs with normally distributed outcomes — pgo_normal","text":"","code":"res <- pgo_normal(kappa = 0.1, n2 = 50, Delta1 = 0.375, Delta2 = 0.625, strategy = 3, case = 31)"},{"path":"https://sterniii3.github.io/drugdevelopR/reference/pgo_tte.html","id":null,"dir":"Reference","previous_headings":"","what":"Probability to go to phase III for multiarm programs with time-to-event outcomes — pgo_tte","title":"Probability to go to phase III for multiarm programs with time-to-event outcomes — pgo_tte","text":"Given parameters function calculates probability go phase III second phase conducted. considered strategies follows:  Strategy: best promising treatment goes phase III","code":""},{"path":"https://sterniii3.github.io/drugdevelopR/reference/pgo_tte.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Probability to go to phase III for multiarm programs with time-to-event outcomes — pgo_tte","text":"","code":"pgo_tte(HRgo, n2, ec, hr1, hr2, strategy, case)"},{"path":"https://sterniii3.github.io/drugdevelopR/reference/pgo_tte.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Probability to go to phase III for multiarm programs with time-to-event outcomes — pgo_tte","text":"HRgo threshold value go/-go decision rule n2 total sample size phase II, must divisible 3 ec control arm event rate phase II III hr1 assumed true treatment effect HR scale treatment 1 hr2 assumed true treatment effect HR scale treatment 2 strategy choose Strategy: 1 (\"best promising\"), 2 (\"promising\") case different cases: 1 (\"nogo\"), 21 (treatment 1 promising, treatment 2 ), 22 (treatment 2 promising, treatment 1 ), 31 (treatments promising, treatment 1 better), 32 (treatments promising, treatment 2 better)","code":""},{"path":"https://sterniii3.github.io/drugdevelopR/reference/pgo_tte.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Probability to go to phase III for multiarm programs with time-to-event outcomes — pgo_tte","text":"function pgo_tte() returns probability go phase III.","code":""},{"path":"https://sterniii3.github.io/drugdevelopR/reference/pgo_tte.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Probability to go to phase III for multiarm programs with time-to-event outcomes — pgo_tte","text":"","code":"res <- pgo_tte(HRgo = 0.8, n2 = 48 , ec = 0.6, hr1 = 0.7, hr2 = 0.8, strategy = 2, case = 31)"},{"path":"https://sterniii3.github.io/drugdevelopR/reference/posp_normal.html","id":null,"dir":"Reference","previous_headings":"","what":"Probability of a successful program, when going to phase III for multiple endpoint with normally distributed outcomes — posp_normal","title":"Probability of a successful program, when going to phase III for multiple endpoint with normally distributed outcomes — posp_normal","text":"getting \"go\"-decision go phase III, .e. results phase II predefined threshold kappa, function calculates probability, program successfull, .e. endpoints show statistically significant positive treatment effect phase III.","code":""},{"path":"https://sterniii3.github.io/drugdevelopR/reference/posp_normal.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Probability of a successful program, when going to phase III for multiple endpoint with normally distributed outcomes — posp_normal","text":"","code":"posp_normal(   kappa,   n2,   alpha,   beta,   Delta1,   Delta2,   sigma1,   sigma2,   in1,   in2,   fixed,   rho )"},{"path":"https://sterniii3.github.io/drugdevelopR/reference/posp_normal.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Probability of a successful program, when going to phase III for multiple endpoint with normally distributed outcomes — posp_normal","text":"kappa threshold value go/-go decision rule; n2 total sample size phase II; must even number alpha significance level beta 1-beta power calculation sample size phase III Delta1 assumed true treatment effect standardized difference means Delta2 assumed true treatment effect standardized difference means sigma1 standard deviation first endpoint sigma2 standard deviation second endpoint in1 amount information Delta1 terms sample size in2 amount information Delta2 terms sample size fixed choose true treatment effects fixed random, TRUE Delta1 used fixed effect rho correlation two endpoints","code":""},{"path":"https://sterniii3.github.io/drugdevelopR/reference/posp_normal.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Probability of a successful program, when going to phase III for multiple endpoint with normally distributed outcomes — posp_normal","text":"output function posp_normal() probability successful program, going phase III.","code":""},{"path":"https://sterniii3.github.io/drugdevelopR/reference/posp_normal.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Probability of a successful program, when going to phase III for multiple endpoint with normally distributed outcomes — posp_normal","text":"","code":"res <- posp_normal(kappa = 0.1, n2 = 50, alpha = 0.025, beta = 0.1,                                Delta1 = 0.375, Delta2 = 0.625, in1 = 300, in2 = 600,                                 sigma1 = 8, sigma2 = 4, fixed = TRUE, rho = 0.3)"},{"path":"https://sterniii3.github.io/drugdevelopR/reference/pw.html","id":null,"dir":"Reference","previous_headings":"","what":"Probabilty that effect in endpoint one is larger than in endpoint two — pw","title":"Probabilty that effect in endpoint one is larger than in endpoint two — pw","text":"function calculated probability treatment effect endpoint one (endpoint x) larger endpoint two (endpoint y), .e. P(x>y) = P(x-y>0)","code":""},{"path":"https://sterniii3.github.io/drugdevelopR/reference/pw.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Probabilty that effect in endpoint one is larger than in endpoint two — pw","text":"","code":"pw(n2, hr1, hr2, id1, id2, fixed, rho)"},{"path":"https://sterniii3.github.io/drugdevelopR/reference/pw.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Probabilty that effect in endpoint one is larger than in endpoint two — pw","text":"n2 total sample size phase II; must even number hr1 assumed true treatment effect HR scale treatment 1 hr2 assumed true treatment effect HR scale treatment 2 id1 amount information hr1 terms number events id2 amount information hr2 terms number events fixed choose true treatment effects fixed random, TRUE hr1 used fixed effect rho correlation two endpoints","code":""},{"path":"https://sterniii3.github.io/drugdevelopR/reference/pw.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Probabilty that effect in endpoint one is larger than in endpoint two — pw","text":"output function pw() probability endpoint one better result endpoint two","code":""},{"path":"https://sterniii3.github.io/drugdevelopR/reference/pw.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Probabilty that effect in endpoint one is larger than in endpoint two — pw","text":"Z=X-Y normally distributed expectation mu_x - mu_y variance sigma_x + sigma_y- 2 rho sdx sdy","code":""},{"path":"https://sterniii3.github.io/drugdevelopR/reference/pw.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Probabilty that effect in endpoint one is larger than in endpoint two — pw","text":"","code":"res <- pw(n2 = 50,hr1 = 0.75, hr2 = 0.80, id1 = 300, id2 = 600,                      fixed = FALSE, rho = 0.3)"},{"path":"https://sterniii3.github.io/drugdevelopR/reference/ss_binary.html","id":null,"dir":"Reference","previous_headings":"","what":"Total sample size for phase III trial with l treatments and equal allocation ratio for binary outcomes — ss_binary","title":"Total sample size for phase III trial with l treatments and equal allocation ratio for binary outcomes — ss_binary","text":"Depending results phase II strategy ,.e. whether proceed best promising treatment (l = 1) promising treatments (l = 2), program calculates number participants phase III. l=1: according Schoenfeld guarantee power log rank test detect treatment effect phase II; l=2: according Dunnett guarantee y -pair power (Horn & Vollandt)","code":""},{"path":"https://sterniii3.github.io/drugdevelopR/reference/ss_binary.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Total sample size for phase III trial with l treatments and equal allocation ratio for binary outcomes — ss_binary","text":"","code":"ss_binary(alpha, beta, p0, p11, y, l)"},{"path":"https://sterniii3.github.io/drugdevelopR/reference/ss_binary.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Total sample size for phase III trial with l treatments and equal allocation ratio for binary outcomes — ss_binary","text":"alpha significance level beta 1-beta power calculation sample size phase III p0 assumed true rate control group p11 assumed true rate treatment group y hat_theta_2; estimator phase II l number treatments phase III: l=1: according Schoenfeld guarantee power log rank test detect treatment effect phase II; l=2: according Dunnett guarantee y -pair power (Horn & Vollandt)","code":""},{"path":"https://sterniii3.github.io/drugdevelopR/reference/ss_binary.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Total sample size for phase III trial with l treatments and equal allocation ratio for binary outcomes — ss_binary","text":"function ss_binary() returns total sample size phase III trial l treatments equal allocation ratio","code":""},{"path":"https://sterniii3.github.io/drugdevelopR/reference/ss_binary.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Total sample size for phase III trial with l treatments and equal allocation ratio for binary outcomes — ss_binary","text":"","code":"res <- ss_binary(alpha = 0.05, beta = 0.1, p0 = 0.6, p11 = 0.3, y = 0.5, l = 1)"},{"path":"https://sterniii3.github.io/drugdevelopR/reference/ss_normal.html","id":null,"dir":"Reference","previous_headings":"","what":"Total sample size for phase III trial with l treatments and equal allocation ratio for normally distributed outcomes — ss_normal","title":"Total sample size for phase III trial with l treatments and equal allocation ratio for normally distributed outcomes — ss_normal","text":"Depending results phase II strategy ,.e. whether proceed best promising treatment (l = 1) promising treatments (l = 2), program calculates number participants phase III. l=1: according Schoenfeld guarantee power log rank test detect treatment effect phase II; l=2: according Dunnett guarantee y -pair power (Horn & Vollandt)","code":""},{"path":"https://sterniii3.github.io/drugdevelopR/reference/ss_normal.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Total sample size for phase III trial with l treatments and equal allocation ratio for normally distributed outcomes — ss_normal","text":"","code":"ss_normal(alpha, beta, y, l)"},{"path":"https://sterniii3.github.io/drugdevelopR/reference/ss_normal.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Total sample size for phase III trial with l treatments and equal allocation ratio for normally distributed outcomes — ss_normal","text":"alpha significance level beta 1-'beta' power calculation sample size phase III y y_hat_theta_2; estimator phase II l number treatments phase III: l=1: according Schoenfeld guarantee power log rank test detect treatment effect phase II; l=2: according Dunnett guarantee y -pair power (Horn & Vollandt)","code":""},{"path":"https://sterniii3.github.io/drugdevelopR/reference/ss_normal.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Total sample size for phase III trial with l treatments and equal allocation ratio for normally distributed outcomes — ss_normal","text":"function ss_normal() returns total sample size phase III trial l treatments equal allocation ratio","code":""},{"path":"https://sterniii3.github.io/drugdevelopR/reference/ss_normal.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Total sample size for phase III trial with l treatments and equal allocation ratio for normally distributed outcomes — ss_normal","text":"","code":"res <- ss_normal(alpha = 0.05, beta = 0.1, y = 0.5, l = 1)"},{"path":"https://sterniii3.github.io/drugdevelopR/reference/ss_tte.html","id":null,"dir":"Reference","previous_headings":"","what":"Total sample size for phase III trial with l treatments and equal allocation ratio for time-to-event outcomes — ss_tte","title":"Total sample size for phase III trial with l treatments and equal allocation ratio for time-to-event outcomes — ss_tte","text":"Depending results phase II strategy ,.e. whether proceed best promising treatment (l = 1) promising treatments (l = 2), program calculates number participants phase III. l=1: according Schoenfeld guarantee power log rank test detect treatment effect phase II; l=2: according Dunnett guarantee y -pair power (Horn & Vollandt)","code":""},{"path":"https://sterniii3.github.io/drugdevelopR/reference/ss_tte.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Total sample size for phase III trial with l treatments and equal allocation ratio for time-to-event outcomes — ss_tte","text":"","code":"ss_tte(alpha, beta, ec, ek, y, l)"},{"path":"https://sterniii3.github.io/drugdevelopR/reference/ss_tte.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Total sample size for phase III trial with l treatments and equal allocation ratio for time-to-event outcomes — ss_tte","text":"alpha significance level beta 1-beta power calculation sample size phase III ec control arm event rate phase II III ek event rate arm k (either arm 1 arm 2) y hat_theta_2; estimator phase II l number treatments phase III: l=1: according Schoenfeld guarantee power log rank test detect treatment effect phase II; l=2: according Dunnett guarantee y -pair power (Horn & Vollandt)","code":""},{"path":"https://sterniii3.github.io/drugdevelopR/reference/ss_tte.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Total sample size for phase III trial with l treatments and equal allocation ratio for time-to-event outcomes — ss_tte","text":"function ss_tte() returns total sample size phase III trial l treatments equal allocation ratio","code":""},{"path":"https://sterniii3.github.io/drugdevelopR/reference/ss_tte.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Total sample size for phase III trial with l treatments and equal allocation ratio for time-to-event outcomes — ss_tte","text":"","code":"res <- ss_tte(alpha = 0.05, beta = 0.1, ec = 0.6, ek = 0.8, y = 0.5, l=1)"},{"path":"https://sterniii3.github.io/drugdevelopR/reference/utility23.html","id":null,"dir":"Reference","previous_headings":"","what":"Utility function for multitrial programs deciding between two or three phase III trials in a time-to-event setting — utility23","title":"Utility function for multitrial programs deciding between two or three phase III trials in a time-to-event setting — utility23","text":"utility function calculates expected utility drug development program given gains minus costs depends parameters expected probability successful program. utility step maximized optimal_multitrial() function.","code":""},{"path":"https://sterniii3.github.io/drugdevelopR/reference/utility23.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Utility function for multitrial programs deciding between two or three phase III trials in a time-to-event setting — utility23","text":"","code":"utility23(   d2,   HRgo,   w,   hr1,   hr2,   id1,   id2,   alpha,   beta,   xi2,   xi3,   c2,   c3,   c02,   c03,   b1,   b2,   b3 )"},{"path":"https://sterniii3.github.io/drugdevelopR/reference/utility23.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Utility function for multitrial programs deciding between two or three phase III trials in a time-to-event setting — utility23","text":"d2 total sample size phase II; must even number HRgo threshold value go/-go decision rule w weight mixture prior distribution hr1 first assumed true treatment effect HR scale prior distribution hr2 second assumed true treatment effect HR scale prior distribution id1 amount information hr1 terms number events id2 amount information hr2 terms number events alpha significance level beta 1-beta power calculation sample size phase III xi2 event rate phase II xi3 event rate phase III c2 variable per-patient cost phase II c3 variable per-patient cost phase III c02 fixed cost phase II c03 fixed cost phase III b1 expected gain effect size category \"small\" b2 expected gain effect size category \"medium\" b3 expected gain effect size category \"large\"","code":""},{"path":"https://sterniii3.github.io/drugdevelopR/reference/utility23.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Utility function for multitrial programs deciding between two or three phase III trials in a time-to-event setting — utility23","text":"output function utility23() expected utility program depending whether two three phase III trials performed.","code":""},{"path":"https://sterniii3.github.io/drugdevelopR/reference/utility23.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Utility function for multitrial programs deciding between two or three phase III trials in a time-to-event setting — utility23","text":"","code":"res <- utility23(d2 = 50, HRgo = 0.8,  w = 0.3,                                   hr1 =  0.69, hr2 = 0.81,                                   id1 = 280, id2 = 420,                                   alpha = 0.025, beta = 0.1, xi2 = 0.7, xi3 = 0.7,                                  c2 = 0.75, c3 = 1, c02 = 100, c03 = 150,                                  b1 = 1000, b2 = 2000, b3 = 3000)"},{"path":"https://sterniii3.github.io/drugdevelopR/reference/utility23_binary.html","id":null,"dir":"Reference","previous_headings":"","what":"Utility function for multitrial programs deciding between two or three phase III trials for a binary distributed outcome — utility23_binary","title":"Utility function for multitrial programs deciding between two or three phase III trials for a binary distributed outcome — utility23_binary","text":"utility function calculates expected utility drug development program given gains minus costs depends parameters expected probability successful program. utility step maximized optimal_multitrial_binary() function.","code":""},{"path":"https://sterniii3.github.io/drugdevelopR/reference/utility23_binary.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Utility function for multitrial programs deciding between two or three phase III trials for a binary distributed outcome — utility23_binary","text":"","code":"utility23_binary(   n2,   RRgo,   w,   p0,   p11,   p12,   in1,   in2,   alpha,   beta,   c2,   c3,   c02,   c03,   b1,   b2,   b3 )"},{"path":"https://sterniii3.github.io/drugdevelopR/reference/utility23_binary.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Utility function for multitrial programs deciding between two or three phase III trials for a binary distributed outcome — utility23_binary","text":"n2 total sample size phase II; must even number RRgo threshold value go/-go decision rule w weight mixture prior distribution p0 assumed true rate control group p11 assumed true rate treatment group p12 assumed true rate treatment group in1 amount information p11 terms sample size in2 amount information p12 terms sample size alpha significance level beta 1-beta power calculation sample size phase III c2 variable per-patient cost phase II c3 variable per-patient cost phase III c02 fixed cost phase II c03 fixed cost phase III b1 expected gain effect size category \"small\" b2 expected gain effect size category \"medium\" b3 expected gain effect size category \"large\"","code":""},{"path":"https://sterniii3.github.io/drugdevelopR/reference/utility23_binary.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Utility function for multitrial programs deciding between two or three phase III trials for a binary distributed outcome — utility23_binary","text":"output function utility23_binary() expected utility program depending whether two three phase III trials performed.","code":""},{"path":"https://sterniii3.github.io/drugdevelopR/reference/utility23_binary.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Utility function for multitrial programs deciding between two or three phase III trials for a binary distributed outcome — utility23_binary","text":"","code":"#res <- utility23_binary(n2 = 50, RRgo = 0.8,  w = 0.3,            #                       alpha = 0.05, beta = 0.1,           #                       p0 = 0.6, p11 =  0.3, p12 = 0.5,            #                       in1 = 300, in2 = 600,            #                       c2 = 0.75, c3 = 1, c02 = 100, c03 = 150,           #                       b1 = 1000, b2 = 2000, b3 = 3000)"},{"path":"https://sterniii3.github.io/drugdevelopR/reference/utility23_normal.html","id":null,"dir":"Reference","previous_headings":"","what":"Utility function for multitrial programs deciding between two or three phase III trials for a normally distributed outcome — utility23_normal","title":"Utility function for multitrial programs deciding between two or three phase III trials for a normally distributed outcome — utility23_normal","text":"utility function calculates expected utility drug development program given gains minus costs depends parameters expected probability successful program. utility step maximized optimal_multitrial_normal() function.","code":""},{"path":"https://sterniii3.github.io/drugdevelopR/reference/utility23_normal.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Utility function for multitrial programs deciding between two or three phase III trials for a normally distributed outcome — utility23_normal","text":"","code":"utility23_normal(   n2,   kappa,   w,   Delta1,   Delta2,   in1,   in2,   a,   b,   alpha,   beta,   c2,   c3,   c02,   c03,   b1,   b2,   b3 )"},{"path":"https://sterniii3.github.io/drugdevelopR/reference/utility23_normal.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Utility function for multitrial programs deciding between two or three phase III trials for a normally distributed outcome — utility23_normal","text":"n2 total sample size phase II; must even number kappa threshold value go/-go decision rule w weight mixture prior distribution Delta1 assumed true treatment effect standardized difference means Delta2 assumed true treatment effect standardized difference means in1 amount information Delta1 terms sample size in2 amount information Delta2 terms sample size lower boundary truncation b upper boundary truncation alpha significance level beta 1-beta power calculation sample size phase III c2 variable per-patient cost phase II c3 variable per-patient cost phase III c02 fixed cost phase II c03 fixed cost phase III b1 expected gain effect size category \"small\" b2 expected gain effect size category \"medium\" b3 expected gain effect size category \"large\"","code":""},{"path":"https://sterniii3.github.io/drugdevelopR/reference/utility23_normal.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Utility function for multitrial programs deciding between two or three phase III trials for a normally distributed outcome — utility23_normal","text":"output function utility23_normal() expected utility program depending whether two three phase III trials performed.","code":""},{"path":"https://sterniii3.github.io/drugdevelopR/reference/utility23_normal.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Utility function for multitrial programs deciding between two or three phase III trials for a normally distributed outcome — utility23_normal","text":"","code":"res <- utility23_normal(n2 = 50, kappa = 0.2, w = 0.3, alpha = 0.025, beta = 0.1,                                 Delta1 = 0.375, Delta2 = 0.625, in1 = 300, in2 = 600,                                  a = 0.25, b = 0.75,                                  c2 = 0.675, c3 = 0.72, c02 = 15, c03 = 20,                                 b1 = 3000, b2 = 8000, b3 = 10000)"},{"path":"https://sterniii3.github.io/drugdevelopR/reference/utility_bias.html","id":null,"dir":"Reference","previous_headings":"","what":"Utility function for bias adjustment programs with time-to-event outcomes. — utility_bias","title":"Utility function for bias adjustment programs with time-to-event outcomes. — utility_bias","text":"utility function calculates expected utility drug development program given gains minus costs depends parameters expected probability successful program. utility step maximized optimal_bias() function.","code":""},{"path":"https://sterniii3.github.io/drugdevelopR/reference/utility_bias.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Utility function for bias adjustment programs with time-to-event outcomes. — utility_bias","text":"","code":"utility_L(   d2,   HRgo,   Adj,   w,   hr1,   hr2,   id1,   id2,   alpha,   beta,   xi2,   xi3,   c2,   c3,   c02,   c03,   K,   N,   S,   steps1,   stepm1,   stepl1,   b1,   b2,   b3,   fixed )  utility_L2(   d2,   HRgo,   Adj,   w,   hr1,   hr2,   id1,   id2,   alpha,   beta,   xi2,   xi3,   c2,   c3,   c02,   c03,   K,   N,   S,   steps1,   stepm1,   stepl1,   b1,   b2,   b3,   fixed )  utility_R(   d2,   HRgo,   Adj,   w,   hr1,   hr2,   id1,   id2,   alpha,   beta,   xi2,   xi3,   c2,   c3,   c02,   c03,   K,   N,   S,   steps1,   stepm1,   stepl1,   b1,   b2,   b3,   fixed )  utility_R2(   d2,   HRgo,   Adj,   w,   hr1,   hr2,   id1,   id2,   alpha,   beta,   xi2,   xi3,   c2,   c3,   c02,   c03,   K,   N,   S,   steps1,   stepm1,   stepl1,   b1,   b2,   b3,   fixed )"},{"path":"https://sterniii3.github.io/drugdevelopR/reference/utility_bias.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Utility function for bias adjustment programs with time-to-event outcomes. — utility_bias","text":"d2 total events phase II; must even number HRgo threshold value go/-go decision rule Adj adjustment parameter w weight mixture prior distribution hr1 first assumed true treatment effect HR scale prior distribution hr2 second assumed true treatment effect HR scale prior distribution id1 amount information hr1 terms number events id2 amount information hr2 terms number events alpha significance level beta 1-beta power calculation sample size phase III xi2 event rate phase II xi3 event rate phase III c2 variable per-patient cost phase II c3 variable per-patient cost phase III c02 fixed cost phase II c03 fixed cost phase III K constraint costs program, default: Inf, e.g. constraint N constraint total expected sample size program, default: Inf, e.g. constraint S constraint expected probability successful program, default: -Inf, e.g. constraint steps1 lower boundary effect size category \"small\" RR scale, default: 1 stepm1 lower boundary effect size category \"medium\" RR scale = upper boundary effect size category \"small\" RR scale, default: 0.95 stepl1 lower boundary effect size category \"large\" RR scale = upper boundary effect size category \"medium\" RR scale, default: 0.85 b1 expected gain effect size category \"small\" b2 expected gain effect size category \"medium\" b3 expected gain effect size category \"large\" fixed choose true treatment effects fixed random, TRUE hr1 used fixed effect","code":""},{"path":"https://sterniii3.github.io/drugdevelopR/reference/utility_bias.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Utility function for bias adjustment programs with time-to-event outcomes. — utility_bias","text":"output functions utility_L(), utility_L2(), utility_R() utility_R2() expected utility program.","code":""},{"path":"https://sterniii3.github.io/drugdevelopR/reference/utility_bias.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Utility function for bias adjustment programs with time-to-event outcomes. — utility_bias","text":"","code":"res <- utility_L(d2 = 50, HRgo = 0.8, Adj = 0.4, w = 0.3,                                   hr1 =  0.69, hr2 = 0.81,                                   id1 = 280, id2 = 420, xi2 = 0.7, xi3 = 0.7,                                  alpha = 0.025, beta = 0.1,                                  c2 = 0.75, c3 = 1, c02 = 100, c03 = 150,                                  K = Inf, N = Inf, S = -Inf,                                  steps1 = 1, stepm1 = 0.95, stepl1 = 0.85,                                  b1 = 1000, b2 = 2000, b3 = 3000,                                   fixed = TRUE)          res <- utility_L2(d2 = 50, HRgo = 0.8, Adj = 0.4, w = 0.3,                                   hr1 =  0.69, hr2 = 0.81,                                   id1 = 280, id2 = 420, xi2 = 0.7, xi3 = 0.7,                                  alpha = 0.025, beta = 0.1,                                  c2 = 0.75, c3 = 1, c02 = 100, c03 = 150,                                  K = Inf, N = Inf, S = -Inf,                                  steps1 = 1, stepm1 = 0.95, stepl1 = 0.85,                                  b1 = 1000, b2 = 2000, b3 = 3000,                                   fixed = TRUE)          res <- utility_R(d2 = 50, HRgo = 0.8, Adj = 0.9, w = 0.3,                                   hr1 =  0.69, hr2 = 0.81,                                   id1 = 280, id2 = 420, xi2 = 0.7, xi3 = 0.7,                                  alpha = 0.025, beta = 0.1,                                  c2 = 0.75, c3 = 1, c02 = 100, c03 = 150,                                  K = Inf, N = Inf, S = -Inf,                                  steps1 = 1, stepm1 = 0.95, stepl1 = 0.85,                                  b1 = 1000, b2 = 2000, b3 = 3000,                                   fixed = TRUE)          res <- utility_R2(d2 = 50, HRgo = 0.8, Adj = 0.9, w = 0.3,                                   hr1 =  0.69, hr2 = 0.81,                                   id1 = 280, id2 = 420, xi2 = 0.7, xi3 = 0.7,                                  alpha = 0.025, beta = 0.1,                                  c2 = 0.75, c3 = 1, c02 = 100, c03 = 150,                                  K = Inf, N = Inf, S = -Inf,                                  steps1 = 1, stepm1 = 0.95, stepl1 = 0.85,                                  b1 = 1000, b2 = 2000, b3 = 3000,                                   fixed = TRUE)"},{"path":"https://sterniii3.github.io/drugdevelopR/reference/utility_bias_binary.html","id":null,"dir":"Reference","previous_headings":"","what":"Utility function for bias adjustment programs with binary distributed outcomes. — utility_bias_binary","title":"Utility function for bias adjustment programs with binary distributed outcomes. — utility_bias_binary","text":"utility function calculates expected utility drug development program given gains minus costs depends parameters expected probability successful program. utility step maximized optimal_bias_binary() function.","code":""},{"path":"https://sterniii3.github.io/drugdevelopR/reference/utility_bias_binary.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Utility function for bias adjustment programs with binary distributed outcomes. — utility_bias_binary","text":"","code":"utility_binary_L(   n2,   RRgo,   Adj,   w,   p0,   p11,   p12,   in1,   in2,   alpha,   beta,   c2,   c3,   c02,   c03,   K,   N,   S,   steps1,   stepm1,   stepl1,   b1,   b2,   b3,   fixed )  utility_binary_L2(   n2,   RRgo,   Adj,   w,   p0,   p11,   p12,   in1,   in2,   alpha,   beta,   c2,   c3,   c02,   c03,   K,   N,   S,   steps1,   stepm1,   stepl1,   b1,   b2,   b3,   fixed )  utility_binary_R(   n2,   RRgo,   Adj,   w,   p0,   p11,   p12,   in1,   in2,   alpha,   beta,   c2,   c3,   c02,   c03,   K,   N,   S,   steps1,   stepm1,   stepl1,   b1,   b2,   b3,   fixed )  utility_binary_R2(   n2,   RRgo,   Adj,   w,   p0,   p11,   p12,   in1,   in2,   alpha,   beta,   c2,   c3,   c02,   c03,   K,   N,   S,   steps1,   stepm1,   stepl1,   b1,   b2,   b3,   fixed )"},{"path":"https://sterniii3.github.io/drugdevelopR/reference/utility_bias_binary.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Utility function for bias adjustment programs with binary distributed outcomes. — utility_bias_binary","text":"n2 total sample size phase II; must even number RRgo threshold value go/-go decision rule Adj adjustment parameter w weight mixture prior distribution p0 assumed true rate control group p11 assumed true rate treatment group p12 assumed true rate treatment group in1 amount information p11 terms sample size in2 amount information p12 terms sample size alpha significance level beta 1-beta power calculation sample size phase III c2 variable per-patient cost phase II c3 variable per-patient cost phase III c02 fixed cost phase II c03 fixed cost phase III K constraint costs program, default: Inf, e.g. constraint N constraint total expected sample size program, default: Inf, e.g. constraint S constraint expected probability successful program, default: -Inf, e.g. constraint steps1 lower boundary effect size category \"small\" RR scale, default: 1 stepm1 lower boundary effect size category \"medium\" RR scale = upper boundary effect size category \"small\" RR scale, default: 0.95 stepl1 lower boundary effect size category \"large\" RR scale = upper boundary effect size category \"medium\" RR scale, default: 0.85 b1 expected gain effect size category \"small\" b2 expected gain effect size category \"medium\" b3 expected gain effect size category \"large\" fixed choose true treatment effects fixed random, TRUE p11 used fixed effect","code":""},{"path":"https://sterniii3.github.io/drugdevelopR/reference/utility_bias_binary.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Utility function for bias adjustment programs with binary distributed outcomes. — utility_bias_binary","text":"output functions utility_binary_L(), utility_binary_L2(), utility_binary_R() utility_binary_R2() expected utility program.","code":""},{"path":"https://sterniii3.github.io/drugdevelopR/reference/utility_bias_binary.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Utility function for bias adjustment programs with binary distributed outcomes. — utility_bias_binary","text":"","code":"res <- utility_binary_L(n2 = 50, RRgo = 0.8, Adj = 0.1, w = 0.3,                                   p0 = 0.6, p11 =  0.3, p12 = 0.5,                                   in1 = 300, in2 = 600,                                   alpha = 0.025, beta = 0.1,                                  c2 = 0.75, c3 = 1, c02 = 100, c03 = 150,                                  K = Inf, N = Inf, S = -Inf,                                  steps1 = 1, stepm1 = 0.95, stepl1 = 0.85,                                  b1 = 1000, b2 = 2000, b3 = 3000,                                   fixed = TRUE)          res <- utility_binary_L2(n2 = 50, RRgo = 0.8, Adj = 0.1, w = 0.3,                                   p0 = 0.6, p11 =  0.3, p12 = 0.5,                                   in1 = 300, in2 = 600,                                   alpha = 0.025, beta = 0.1,                                  c2 = 0.75, c3 = 1, c02 = 100, c03 = 150,                                  K = Inf, N = Inf, S = -Inf,                                  steps1 = 1, stepm1 = 0.95, stepl1 = 0.85,                                  b1 = 1000, b2 = 2000, b3 = 3000,                                   fixed = TRUE)          res <- utility_binary_R(n2 = 50, RRgo = 0.8, Adj = 0.9, w = 0.3,                                   p0 = 0.6, p11 =  0.3, p12 = 0.5,                                   in1 = 300, in2 = 600,                                   alpha = 0.025, beta = 0.1,                                  c2 = 0.75, c3 = 1, c02 = 100, c03 = 150,                                  K = Inf, N = Inf, S = -Inf,                                  steps1 = 1, stepm1 = 0.95, stepl1 = 0.85,                                  b1 = 1000, b2 = 2000, b3 = 3000,                                   fixed = TRUE)          res <- utility_binary_R2(n2 = 50, RRgo = 0.8, Adj = 0.9, w = 0.3,                                   p0 = 0.6, p11 =  0.3, p12 = 0.5,                                   in1 = 300, in2 = 600,                                   alpha = 0.025, beta = 0.1,                                  c2 = 0.75, c3 = 1, c02 = 100, c03 = 150,                                  K = Inf, N = Inf, S = -Inf,                                  steps1 = 1, stepm1 = 0.95, stepl1 = 0.85,                                  b1 = 1000, b2 = 2000, b3 = 3000,                                   fixed = TRUE)"},{"path":"https://sterniii3.github.io/drugdevelopR/reference/utility_bias_normal.html","id":null,"dir":"Reference","previous_headings":"","what":"Utility function for bias adjustment programs with normally distributed outcomes. — utility_bias_normal","title":"Utility function for bias adjustment programs with normally distributed outcomes. — utility_bias_normal","text":"utility function calculates expected utility drug development program given gains minus costs depends parameters expected probability successful program. utility step maximized optimal_bias_normal() function.","code":""},{"path":"https://sterniii3.github.io/drugdevelopR/reference/utility_bias_normal.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Utility function for bias adjustment programs with normally distributed outcomes. — utility_bias_normal","text":"","code":"utility_normal_L(   n2,   kappa,   Adj,   w,   Delta1,   Delta2,   in1,   in2,   a,   b,   alpha,   beta,   c2,   c3,   c02,   c03,   K,   N,   S,   steps1,   stepm1,   stepl1,   b1,   b2,   b3,   fixed )  utility_normal_L2(   n2,   kappa,   Adj,   w,   Delta1,   Delta2,   in1,   in2,   a,   b,   alpha,   beta,   c2,   c3,   c02,   c03,   K,   N,   S,   steps1,   stepm1,   stepl1,   b1,   b2,   b3,   fixed )  utility_normal_R(   n2,   kappa,   Adj,   w,   Delta1,   Delta2,   in1,   in2,   a,   b,   alpha,   beta,   c2,   c3,   c02,   c03,   K,   N,   S,   steps1,   stepm1,   stepl1,   b1,   b2,   b3,   fixed )  utility_normal_R2(   n2,   kappa,   Adj,   w,   Delta1,   Delta2,   in1,   in2,   a,   b,   alpha,   beta,   c2,   c3,   c02,   c03,   K,   N,   S,   steps1,   stepm1,   stepl1,   b1,   b2,   b3,   fixed )"},{"path":"https://sterniii3.github.io/drugdevelopR/reference/utility_bias_normal.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Utility function for bias adjustment programs with normally distributed outcomes. — utility_bias_normal","text":"n2 total sample size phase II; must even number kappa threshold value go/-go decision rule Adj adjustment parameter w weight mixture prior distribution Delta1 assumed true treatment effect standardized difference means Delta2 assumed true treatment effect standardized difference means in1 amount information Delta1 terms sample size in2 amount information Delta2 terms sample size lower boundary truncation b upper boundary truncation alpha significance level beta 1-beta power calculation sample size phase III c2 variable per-patient cost phase II c3 variable per-patient cost phase III c02 fixed cost phase II c03 fixed cost phase III K constraint costs program, default: Inf, e.g. constraint N constraint total expected sample size program, default: Inf, e.g. constraint S constraint expected probability successful program, default: -Inf, e.g. constraint steps1 lower boundary effect size category \"small\", default: 0 stepm1 lower boundary effect size category \"medium\" = upper boundary effect size category \"small\" default: 0.5 stepl1 lower boundary effect size category \"large\" = upper boundary effect size category \"medium\", default: 0.8 b1 expected gain effect size category \"small\" b2 expected gain effect size category \"medium\" b3 expected gain effect size category \"large\" fixed choose true treatment effects fixed random, TRUE Delta1 used fixed effect","code":""},{"path":"https://sterniii3.github.io/drugdevelopR/reference/utility_bias_normal.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Utility function for bias adjustment programs with normally distributed outcomes. — utility_bias_normal","text":"output functions utility_normal_L(), utility_normal_L2(), utility_normal_R() utility_normal_R2() expected utility program.","code":""},{"path":"https://sterniii3.github.io/drugdevelopR/reference/utility_bias_normal.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Utility function for bias adjustment programs with normally distributed outcomes. — utility_bias_normal","text":"","code":"res <- utility_normal_L(kappa = 0.1, n2 = 50, Adj = 0,                                   alpha = 0.025, beta = 0.1, w = 0.3,                                  Delta1 = 0.375, Delta2 = 0.625,                                   in1 = 300, in2 = 600,                                   a = 0.25, b = 0.75,                                   c2 = 0.75, c3 = 1, c02 = 100, c03 = 150,                                  K = Inf, N = Inf, S = -Inf,                                   steps1 = 0, stepm1 = 0.5, stepl1 = 0.8,                                  b1 = 3000, b2 = 8000, b3 = 10000,                                   fixed = TRUE)           res <- utility_normal_L2(kappa = 0.1, n2 = 50, Adj = 0,                                   alpha = 0.025, beta = 0.1, w = 0.3,                                  Delta1 = 0.375, Delta2 = 0.625,                                   in1 = 300, in2 = 600,                                   a = 0.25, b = 0.75,                                   c2 = 0.75, c3 = 1, c02 = 100, c03 = 150,                                  K = Inf, N = Inf, S = -Inf,                                   steps1 = 0, stepm1 = 0.5, stepl1 = 0.8,                                  b1 = 3000, b2 = 8000, b3 = 10000,                                   fixed = TRUE)           res <- utility_normal_R(kappa = 0.1, n2 = 50, Adj = 1,                                   alpha = 0.025, beta = 0.1, w = 0.3,                                  Delta1 = 0.375, Delta2 = 0.625,                                   in1 = 300, in2 = 600,                                   a = 0.25, b = 0.75,                                   c2 = 0.75, c3 = 1, c02 = 100, c03 = 150,                                  K = Inf, N = Inf, S = -Inf,                                   steps1 = 0, stepm1 = 0.5, stepl1 = 0.8,                                  b1 = 3000, b2 = 8000, b3 = 10000,                                   fixed = TRUE)           res <- utility_normal_R2(kappa = 0.1, n2 = 50, Adj = 1,                                   alpha = 0.025, beta = 0.1, w = 0.3,                                  Delta1 = 0.375, Delta2 = 0.625,                                   in1 = 300, in2 = 600,                                   a = 0.25, b = 0.75,                                   c2 = 0.75, c3 = 1, c02 = 100, c03 = 150,                                  K = Inf, N = Inf, S = -Inf,                                   steps1 = 0, stepm1 = 0.5, stepl1 = 0.8,                                  b1 = 3000, b2 = 8000, b3 = 10000,                                   fixed = TRUE)"},{"path":"https://sterniii3.github.io/drugdevelopR/reference/utility_multiarm.html","id":null,"dir":"Reference","previous_headings":"","what":"Utility function for multiarm programs with time-to-event outcomes — utility_multiarm","title":"Utility function for multiarm programs with time-to-event outcomes — utility_multiarm","text":"utility function calculates expected utility drug development program given gains minus costs depends parameters sample size expected probability successful program. utility step maximized optimal_multiarm() function.","code":""},{"path":"https://sterniii3.github.io/drugdevelopR/reference/utility_multiarm.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Utility function for multiarm programs with time-to-event outcomes — utility_multiarm","text":"","code":"utility_multiarm(   n2,   HRgo,   alpha,   beta,   hr1,   hr2,   strategy,   ec,   c2,   c02,   c3,   c03,   K,   N,   S,   steps1,   stepm1,   stepl1,   b1,   b2,   b3 )"},{"path":"https://sterniii3.github.io/drugdevelopR/reference/utility_multiarm.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Utility function for multiarm programs with time-to-event outcomes — utility_multiarm","text":"n2 total sample size phase II; must divisible three HRgo threshold value go/-go decision rule alpha significance level beta 1-beta power calculation sample size phase III hr1 assumed true treatment effect HR scale treatment 1 hr2 assumed true treatment effect HR scale treatment 2 strategy choose Strategy: 1 (\"best promising\"), 2 (\"promising\") ec control arm event rate phase II III c2 variable per-patient cost phase II c02 fixed cost phase II c3 variable per-patient cost phase III c03 fixed cost phase III K constraint costs program, default: Inf, e.g. constraint N constraint total expected sample size program, default: Inf, e.g. constraint S constraint expected probability successful program, default: -Inf, e.g. constraint steps1 lower boundary effect size category \"small\" HR scale, default: 1 stepm1 lower boundary effect size category \"medium\" HR scale = upper boundary effect size category \"small\" RR scale, default: 0.95 stepl1 lower boundary effect size category \"large\" HR scale = upper boundary effect size category \"medium\" RR scale, default: 0.85 b1 expected gain effect size category \"small\" b2 expected gain effect size category \"medium\" b3 expected gain effect size category \"large\"","code":""},{"path":"https://sterniii3.github.io/drugdevelopR/reference/utility_multiarm.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Utility function for multiarm programs with time-to-event outcomes — utility_multiarm","text":"output function utility_multiarm() expected utility program","code":""},{"path":"https://sterniii3.github.io/drugdevelopR/reference/utility_multiarm.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Utility function for multiarm programs with time-to-event outcomes — utility_multiarm","text":"","code":"res <- utility_multiarm(n2 = 50, HRgo = 0.8, alpha = 0.05, beta = 0.1,                             hr1 = 0.7, hr2 = 0.8, strategy = 3, ec = 0.6,                             c2 = 0.75, c3 = 1, c02 = 100, c03 = 150,                             K = Inf, N = Inf, S = -Inf,                               steps1 = 1, stepm1 = 0.95,  stepl1 = 0.85,                             b1 = 1000, b2 = 2000, b3 = 3000)"},{"path":"https://sterniii3.github.io/drugdevelopR/reference/utility_multiarm_binary.html","id":null,"dir":"Reference","previous_headings":"","what":"Utility function for multiarm programs with binary distributed outcomes — utility_multiarm_binary","title":"Utility function for multiarm programs with binary distributed outcomes — utility_multiarm_binary","text":"utility function calculates expected utility drug development program given gains minus costs depends parameters sample size expected probability successful program. utility step maximized optimal_multiarm_binary() function.","code":""},{"path":"https://sterniii3.github.io/drugdevelopR/reference/utility_multiarm_binary.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Utility function for multiarm programs with binary distributed outcomes — utility_multiarm_binary","text":"","code":"utility_multiarm_binary(   n2,   RRgo,   alpha,   beta,   p0 = p0,   p11 = p11,   p12 = p12,   strategy,   c2,   c02,   c3,   c03,   K,   N,   S,   steps1,   stepm1,   stepl1,   b1,   b2,   b3 )"},{"path":"https://sterniii3.github.io/drugdevelopR/reference/utility_multiarm_binary.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Utility function for multiarm programs with binary distributed outcomes — utility_multiarm_binary","text":"n2 total sample size phase II; must even number RRgo threshold value go/-go decision rule alpha significance level beta 1-beta power calculation sample size phase III p0 assumed true rate control group p11 assumed true rate treatment group p12 assumed true rate treatment group strategy choose Strategy: 1 (\"best promising\"), 2 (\"promising\") c2 variable per-patient cost phase II c02 fixed cost phase II c3 variable per-patient cost phase III c03 fixed cost phase III K constraint costs program, default: Inf, e.g. constraint N constraint total expected sample size program, default: Inf, e.g. constraint S constraint expected probability successful program, default: -Inf, e.g. constraint steps1 lower boundary effect size category \"small\" RR scale, default: 1 stepm1 lower boundary effect size category \"medium\" RR scale = upper boundary effect size category \"small\" RR scale, default: 0.95 stepl1 lower boundary effect size category \"large\" RR scale = upper boundary effect size category \"medium\" RR scale, default: 0.85 b1 expected gain effect size category \"small\" b2 expected gain effect size category \"medium\" b3 expected gain effect size category \"large\"","code":""},{"path":"https://sterniii3.github.io/drugdevelopR/reference/utility_multiarm_binary.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Utility function for multiarm programs with binary distributed outcomes — utility_multiarm_binary","text":"output function utility_multiarm_binary() expected utility program","code":""},{"path":"https://sterniii3.github.io/drugdevelopR/reference/utility_multiarm_binary.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Utility function for multiarm programs with binary distributed outcomes — utility_multiarm_binary","text":"","code":"res <- utility_multiarm_binary(n2 = 50, RRgo = 0.8, alpha = 0.05, beta = 0.1,                             p0 = 0.6, p11 =  0.3, p12 = 0.5, strategy = 1,                             c2 = 0.75, c3 = 1, c02 = 100, c03 = 150,                             K = Inf, N = Inf, S = -Inf,                               steps1 = 1, stepm1 = 0.95,   stepl1 = 0.85,                             b1 = 1000, b2 = 2000, b3 = 3000)"},{"path":"https://sterniii3.github.io/drugdevelopR/reference/utility_multiarm_normal.html","id":null,"dir":"Reference","previous_headings":"","what":"Utility function for multiarm programs with normally distributed outcomes — utility_multiarm_normal","title":"Utility function for multiarm programs with normally distributed outcomes — utility_multiarm_normal","text":"utility function calculates expected utility drug development program given gains minus costs depends parameters sample size expected probability successful program. utility step maximized optimal_multiarm_normal() function.","code":""},{"path":"https://sterniii3.github.io/drugdevelopR/reference/utility_multiarm_normal.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Utility function for multiarm programs with normally distributed outcomes — utility_multiarm_normal","text":"","code":"utility_multiarm_normal(   n2,   kappa,   alpha,   beta,   Delta1,   Delta2,   strategy,   c2,   c02,   c3,   c03,   K,   N,   S,   steps1,   stepm1,   stepl1,   b1,   b2,   b3 )"},{"path":"https://sterniii3.github.io/drugdevelopR/reference/utility_multiarm_normal.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Utility function for multiarm programs with normally distributed outcomes — utility_multiarm_normal","text":"n2 total sample size phase II; must even number kappa threshold value go/-go decision rule alpha significance level beta 1-beta power calculation sample size phase III Delta1 assumed true treatment effect standardized difference means Delta2 assumed true treatment effect standardized difference means strategy choose Strategy: 1 (\"best promising\"), 2 (\"promising\") c2 variable per-patient cost phase II c02 fixed cost phase II c3 variable per-patient cost phase III c03 fixed cost phase III K constraint costs program, default: Inf, e.g. constraint N constraint total expected sample size program, default: Inf, e.g. constraint S constraint expected probability successful program, default: -Inf, e.g. constraint steps1 lower boundary effect size category \"small\", default: 0 stepm1 lower boundary effect size category \"medium\" = upper boundary effect size category \"small\" default: 0.5 stepl1 lower boundary effect size category \"large\" = upper boundary effect size category \"medium\", default: 0.8 b1 expected gain effect size category \"small\" b2 expected gain effect size category \"medium\" b3 expected gain effect size category \"large\"","code":""},{"path":"https://sterniii3.github.io/drugdevelopR/reference/utility_multiarm_normal.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Utility function for multiarm programs with normally distributed outcomes — utility_multiarm_normal","text":"output function utility_multiarm_normal() expected utility program.","code":""},{"path":"https://sterniii3.github.io/drugdevelopR/reference/utility_multiarm_normal.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Utility function for multiarm programs with normally distributed outcomes — utility_multiarm_normal","text":"","code":"res <- utility_multiarm_normal(n2 = 50, kappa = 0.8, alpha = 0.05, beta = 0.1,                             Delta1 = 0.375, Delta2 = 0.625, strategy = 1,                             c2 = 0.75, c3 = 1, c02 = 100, c03 = 150,                             K = Inf, N = Inf, S = -Inf,                               steps1 = 0, stepm1 = 0.5,   stepl1 = 0.8,                             b1 = 1000, b2 = 2000, b3 = 3000)"},{"path":"https://sterniii3.github.io/drugdevelopR/reference/utility_multiple_normal.html","id":null,"dir":"Reference","previous_headings":"","what":"Utility function for multiple endpoints with normally distributed outcomes. — utility_multiple_normal","title":"Utility function for multiple endpoints with normally distributed outcomes. — utility_multiple_normal","text":"utility function calculates expected utility drug development program given gains minus costs depends parameters expected probability successful program. utility step maximized optimal_multiple_normal() function.","code":""},{"path":"https://sterniii3.github.io/drugdevelopR/reference/utility_multiple_normal.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Utility function for multiple endpoints with normally distributed outcomes. — utility_multiple_normal","text":"","code":"utility_multiple_normal(   kappa,   n2,   alpha,   beta,   Delta1,   Delta2,   in1,   in2,   sigma1,   sigma2,   c2,   c02,   c3,   c03,   K,   N,   S,   steps1,   stepm1,   stepl1,   b1,   b2,   b3,   fixed,   rho,   relaxed )"},{"path":"https://sterniii3.github.io/drugdevelopR/reference/utility_multiple_normal.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Utility function for multiple endpoints with normally distributed outcomes. — utility_multiple_normal","text":"kappa threshold value go/-go decision rule; vector endpoints n2 total sample size phase II; must even number alpha significance level beta 1-beta power calculation sample size phase III Delta1 assumed true treatment effect standardized difference means Delta2 assumed true treatment effect standardized difference means in1 amount information Delta1 terms sample size in2 amount information Delta2 terms sample size sigma1 standard deviation first endpoint sigma2 standard deviation second endpoint c2 variable per-patient cost phase II c02 fixed cost phase II c3 variable per-patient cost phase III c03 fixed cost phase III K constraint costs program, default: Inf, e.g. constraint N constraint total expected sample size program, default: Inf, e.g. constraint S constraint expected probability successful program, default: -Inf, e.g. constraint steps1 lower boundary effect size category \"small\" HR scale, default: 1 stepm1 lower boundary effect size category \"medium\" HR scale = upper boundary effect size category \"small\" HR scale, default: 0.95 stepl1 lower boundary effect size category \"large\" HR scale = upper boundary effect size category \"medium\" HR scale, default: 0.85 b1 expected gain effect size category \"small\" b2 expected gain effect size category \"medium\" b3 expected gain effect size category \"large\" fixed choose true treatment effects fixed random, TRUE Delta1 used fixed effect rho correlation two endpoints relaxed relaxed strict decision rule","code":""},{"path":"https://sterniii3.github.io/drugdevelopR/reference/utility_multiple_normal.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Utility function for multiple endpoints with normally distributed outcomes. — utility_multiple_normal","text":"output function utility_multiple_normal() expected utility program.","code":""},{"path":"https://sterniii3.github.io/drugdevelopR/reference/utility_multiple_normal.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Utility function for multiple endpoints with normally distributed outcomes. — utility_multiple_normal","text":"","code":"res <- utility_multiple_normal(kappa = 0.1, n2 = 50,                                 alpha = 0.025, beta = 0.1,                                Delta1 = 0.375, Delta2 = 0.625,                                 in1 = 300, in2 = 600, sigma1 = 8, sigma2 = 4,                                c2 = 0.75, c3 = 1, c02 = 100, c03 = 150,                                K = Inf, N = Inf, S = -Inf,                                steps1 = 0, stepm1 = 0.5, stepl1 = 0.8,                                b1 = 1000, b2 = 2000, b3 = 3000,                                 fixed = TRUE, rho = 0.3, relaxed = \"TRUE\")"},{"path":"https://sterniii3.github.io/drugdevelopR/reference/utility_multiple_tte.html","id":null,"dir":"Reference","previous_headings":"","what":"Utility function for multiple endpoints in a time-to-event-setting — utility_multiple_tte","title":"Utility function for multiple endpoints in a time-to-event-setting — utility_multiple_tte","text":"utility function calculates expected utility drug development program given gains minus costs depends parameters expected probability successful program. utility step maximized optimal_multiple_tte() function. Note, calculating utility program, two different benefit triples necessary: one triple case important endpoint overall survival (OS) shows significant positive treatment effect one triple endpoint progression-free survival (PFS) shows significant positive treatment effect","code":""},{"path":"https://sterniii3.github.io/drugdevelopR/reference/utility_multiple_tte.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Utility function for multiple endpoints in a time-to-event-setting — utility_multiple_tte","text":"","code":"utility_multiple_tte(   n2,   HRgo,   alpha,   beta,   hr1,   hr2,   id1,   id2,   c2,   c02,   c3,   c03,   K,   N,   S,   steps1,   stepm1,   stepl1,   b11,   b21,   b31,   b12,   b22,   b32,   fixed,   rho )"},{"path":"https://sterniii3.github.io/drugdevelopR/reference/utility_multiple_tte.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Utility function for multiple endpoints in a time-to-event-setting — utility_multiple_tte","text":"n2 total sample size phase II; must even number HRgo threshold value go/-go decision rule; alpha significance level beta 1-beta power calculation sample size phase III hr1 assumed true treatment effect HR scale treatment 1 hr2 assumed true treatment effect HR scale treatment 2 id1 amount information hr1 terms sample size id2 amount information hr2 terms sample size c2 variable per-patient cost phase II c02 fixed cost phase II c3 variable per-patient cost phase III c03 fixed cost phase III K constraint costs program, default: Inf, e.g. constraint N constraint total expected sample size program, default: Inf, e.g. constraint S constraint expected probability successful program, default: -Inf, e.g. constraint steps1 lower boundary effect size category \"small\" HR scale, default: 1 stepm1 lower boundary effect size category \"medium\" HR scale = upper boundary effect size category \"small\" HR scale, default: 0.95 stepl1 lower boundary effect size category \"large\" HR scale = upper boundary effect size category \"medium\" HR scale, default: 0.85 b11 expected gain effect size category \"small\" endpoint OS significant b21 expected gain effect size category \"medium\"endpoint OS significant b31 expected gain effect size category \"large\" endpoint OS significant b12 expected gain effect size category \"small\" endpoint OS significant b22 expected gain effect size category \"medium\"endpoint OS significant b32 expected gain effect size category \"large\" endpoint OS significant fixed choose true treatment effects fixed random, TRUE hr1 used fixed effect rho correlation two endpoints","code":""},{"path":"https://sterniii3.github.io/drugdevelopR/reference/utility_multiple_tte.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Utility function for multiple endpoints in a time-to-event-setting — utility_multiple_tte","text":"output function utility_multiple_tte() expected utility program.","code":""},{"path":"https://sterniii3.github.io/drugdevelopR/reference/utility_multiple_tte.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Utility function for multiple endpoints in a time-to-event-setting — utility_multiple_tte","text":"","code":"res <- utility_multiple_tte(n2 = 50, HRgo = 0.8, alpha = 0.025, beta = 0.1,                                hr1 = 0.75, hr2 = 0.80,                                id1 = 300, id2 = 600,                                c2 = 0.75, c3 = 1, c02 = 100, c03 = 150,                                               K = Inf, N = Inf, S = -Inf,                                 steps1 = 1, stepm1 = 0.95, stepl1 = 0.85,                                b11 = 1000, b21 = 2000, b31 = 3000,                                b12 = 1000, b22 = 1500, b32 = 2000,                                 fixed = TRUE, rho = 0.3)"},{"path":"https://sterniii3.github.io/drugdevelopR/reference/utility_multitrial.html","id":null,"dir":"Reference","previous_headings":"","what":"Utility function for multitrial programs in a time-to-event setting — utility_multitrial","title":"Utility function for multitrial programs in a time-to-event setting — utility_multitrial","text":"utility function calculates expected utility drug development program given gains minus costs depends parameters expected probability successful program. utility step maximized optimal_multitrial() function.","code":""},{"path":"https://sterniii3.github.io/drugdevelopR/reference/utility_multitrial.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Utility function for multitrial programs in a time-to-event setting — utility_multitrial","text":"","code":"utility2(   d2,   HRgo,   w,   hr1,   hr2,   id1,   id2,   alpha,   beta,   xi2,   xi3,   c2,   c3,   c02,   c03,   K,   N,   S,   b1,   b2,   b3,   case,   fixed )  utility3(   d2,   HRgo,   w,   hr1,   hr2,   id1,   id2,   alpha,   beta,   xi2,   xi3,   c2,   c3,   c02,   c03,   K,   N,   S,   b1,   b2,   b3,   case,   fixed )  utility4(   d2,   HRgo,   w,   hr1,   hr2,   id1,   id2,   alpha,   beta,   xi2,   xi3,   c2,   c3,   c02,   c03,   K,   N,   S,   b1,   b2,   b3,   case,   fixed )"},{"path":"https://sterniii3.github.io/drugdevelopR/reference/utility_multitrial.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Utility function for multitrial programs in a time-to-event setting — utility_multitrial","text":"d2 total number events phase II HRgo threshold value go/-go decision rule w weight mixture prior distribution hr1 first assumed true treatment effect HR scale prior distribution hr2 second assumed true treatment effect HR scale prior distribution id1 amount information hr1 terms number events id2 amount information hr2 terms number events alpha significance level beta 1-beta power calculation sample size phase III xi2 event rate phase II xi3 event rate phase III c2 variable per-patient cost phase II c3 variable per-patient cost phase III c02 fixed cost phase II c03 fixed cost phase III K constraint costs program, default: Inf, e.g. constraint N constraint total expected sample size program, default: Inf, e.g. constraint S constraint expected probability successful program, default: -Inf, e.g. constraint b1 expected gain effect size category \"small\" b2 expected gain effect size category \"medium\" b3 expected gain effect size category \"large\" case choose case: \"least 1, 2 3 significant trials needed approval\" fixed choose true treatment effects fixed random","code":""},{"path":"https://sterniii3.github.io/drugdevelopR/reference/utility_multitrial.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Utility function for multitrial programs in a time-to-event setting — utility_multitrial","text":"output functions utility2(), utility3() utility4() expected utility program 2, 3 4 phase III trials performed.","code":""},{"path":"https://sterniii3.github.io/drugdevelopR/reference/utility_multitrial.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Utility function for multitrial programs in a time-to-event setting — utility_multitrial","text":"","code":"res <- utility2(d2 = 50, HRgo = 0.8,  w = 0.3,                                   hr1 =  0.69, hr2 = 0.81,                                   id1 = 210, id2 = 420,                                   alpha = 0.025, beta = 0.1, xi2 = 0.7, xi3 = 0.7,                                  c2 = 0.75, c3 = 1, c02 = 100, c03 = 150,                                  K = Inf, N = Inf, S = -Inf,                                  b1 = 1000, b2 = 2000, b3 = 3000,                                   case = 2, fixed = TRUE)           res <- utility3(d2 = 50, HRgo = 0.8,  w = 0.3,                                   hr1 =  0.69, hr2 = 0.81,                                   id1 = 210, id2 = 420,                                   alpha = 0.025, beta = 0.1, xi2 = 0.7, xi3 = 0.7,                                  c2 = 0.75, c3 = 1, c02 = 100, c03 = 150,                                  K = Inf, N = Inf, S = -Inf,                                  b1 = 1000, b2 = 2000, b3 = 3000,                                   case = 2, fixed = TRUE)          res <- utility4(d2 = 50, HRgo = 0.8,  w = 0.3,                                   hr1 =  0.69, hr2 = 0.81,                                   id1 = 210, id2 = 420,                                   alpha = 0.025, beta = 0.1, xi2 = 0.7, xi3 = 0.7,                                  c2 = 0.75, c3 = 1, c02 = 100, c03 = 150,                                  K = Inf, N = Inf, S = -Inf,                                  b1 = 1000, b2 = 2000, b3 = 3000,                                   case = 3, fixed = TRUE)"},{"path":"https://sterniii3.github.io/drugdevelopR/reference/utility_multitrial_binary.html","id":null,"dir":"Reference","previous_headings":"","what":"Utility function for multitrial programs with binary distributed outcomes — utility_multitrial_binary","title":"Utility function for multitrial programs with binary distributed outcomes — utility_multitrial_binary","text":"utility function calculates expected utility drug development program given gains minus costs depends parameters expected probability successful program. utility step maximized optimal_multitrial_binary() function.","code":""},{"path":"https://sterniii3.github.io/drugdevelopR/reference/utility_multitrial_binary.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Utility function for multitrial programs with binary distributed outcomes — utility_multitrial_binary","text":"","code":"utility2_binary(   n2,   RRgo,   w,   p0,   p11,   p12,   in1,   in2,   alpha,   beta,   c2,   c3,   c02,   c03,   K,   N,   S,   b1,   b2,   b3,   case,   fixed )  utility3_binary(   n2,   RRgo,   w,   p0,   p11,   p12,   in1,   in2,   alpha,   beta,   c2,   c3,   c02,   c03,   K,   N,   S,   b1,   b2,   b3,   case,   fixed )  utility4_binary(   n2,   RRgo,   w,   p0,   p11,   p12,   in1,   in2,   alpha,   beta,   c2,   c3,   c02,   c03,   K,   N,   S,   b1,   b2,   b3,   case,   fixed )"},{"path":"https://sterniii3.github.io/drugdevelopR/reference/utility_multitrial_binary.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Utility function for multitrial programs with binary distributed outcomes — utility_multitrial_binary","text":"n2 total sample size phase II; must even number RRgo threshold value go/-go decision rule w weight mixture prior distribution p0 assumed true rate control group p11 assumed true rate treatment group p12 assumed true rate treatment group in1 amount information p11 terms sample size in2 amount information p12 terms sample size alpha significance level beta 1-beta power calculation sample size phase III c2 variable per-patient cost phase II c3 variable per-patient cost phase III c02 fixed cost phase II c03 fixed cost phase III K constraint costs program, default: Inf, e.g. constraint N constraint total expected sample size program, default: Inf, e.g. constraint S constraint expected probability successful program, default: -Inf, e.g. constraint b1 expected gain effect size category \"small\" b2 expected gain effect size category \"medium\" b3 expected gain effect size category \"large\" case choose case: \"least 1, 2 3 significant trials needed approval\" fixed choose true treatment effects fixed random","code":""},{"path":"https://sterniii3.github.io/drugdevelopR/reference/utility_multitrial_binary.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Utility function for multitrial programs with binary distributed outcomes — utility_multitrial_binary","text":"output functions utility2_binary(), utility3_binary() utility4_binary() expected utility program 2, 3 4 phase III trials performed.","code":""},{"path":"https://sterniii3.github.io/drugdevelopR/reference/utility_multitrial_binary.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Utility function for multitrial programs with binary distributed outcomes — utility_multitrial_binary","text":"","code":"res <- utility2_binary(n2 = 50, RRgo = 0.8,  w = 0.3,                                   p0 = 0.6, p11 =  0.3, p12 = 0.5,                                   in1 = 300, in2 = 600, alpha = 0.025, beta = 0.1,                                  c2 = 0.75, c3 = 1, c02 = 100, c03 = 150,                                  K = Inf, N = Inf, S = -Inf,                                  b1 = 1000, b2 = 2000, b3 = 3000,                                   case = 2, fixed = TRUE)           res <- utility3_binary(n2 = 50, RRgo = 0.8,  w = 0.3,                                   p0 = 0.6, p11 =  0.3, p12 = 0.5,                                   in1 = 300, in2 = 600, alpha = 0.025, beta = 0.1,                                  c2 = 0.75, c3 = 1, c02 = 100, c03 = 150,                                  K = Inf, N = Inf, S = -Inf,                                  b1 = 1000, b2 = 2000, b3 = 3000,                                   case = 2, fixed = TRUE)          res <- utility4_binary(n2 = 50, RRgo = 0.8,  w = 0.3,                                   p0 = 0.6, p11 =  0.3, p12 = 0.5,                                   in1 = 300, in2 = 600, alpha = 0.025, beta = 0.1,                                  c2 = 0.75, c3 = 1, c02 = 100, c03 = 150,                                  K = Inf, N = Inf, S = -Inf,                                  b1 = 1000, b2 = 2000, b3 = 3000,                                   case = 3, fixed = TRUE)"},{"path":"https://sterniii3.github.io/drugdevelopR/reference/utility_multitrial_normal.html","id":null,"dir":"Reference","previous_headings":"","what":"Utility function for multitrial programs with normally distributed outcomes — utility_multitrial_normal","title":"Utility function for multitrial programs with normally distributed outcomes — utility_multitrial_normal","text":"utility function calculates expected utility drug development program given gains minus costs depends parameters expected probability successful program. utility step maximized optimal_multitrial_normal() function.","code":""},{"path":"https://sterniii3.github.io/drugdevelopR/reference/utility_multitrial_normal.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Utility function for multitrial programs with normally distributed outcomes — utility_multitrial_normal","text":"","code":"utility2_normal(   n2,   kappa,   w,   Delta1,   Delta2,   in1,   in2,   a,   b,   alpha,   beta,   c2,   c3,   c02,   c03,   K,   N,   S,   b1,   b2,   b3,   case,   fixed )  utility3_normal(   n2,   kappa,   w,   Delta1,   Delta2,   in1,   in2,   a,   b,   alpha,   beta,   c2,   c3,   c02,   c03,   K,   N,   S,   b1,   b2,   b3,   case,   fixed )  utility4_normal(   n2,   kappa,   w,   Delta1,   Delta2,   in1,   in2,   a,   b,   alpha,   beta,   c2,   c3,   c02,   c03,   K,   N,   S,   b1,   b2,   b3,   case,   fixed )"},{"path":"https://sterniii3.github.io/drugdevelopR/reference/utility_multitrial_normal.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Utility function for multitrial programs with normally distributed outcomes — utility_multitrial_normal","text":"n2 total sample size phase II; must even number kappa threshold value go/-go decision rule w weight mixture prior distribution Delta1 assumed true treatment effect standardized difference means Delta2 assumed true treatment effect standardized difference means in1 amount information Delta1 terms sample size in2 amount information Delta2 terms sample size lower boundary truncation b upper boundary truncation alpha significance level beta 1-beta power calculation sample size phase III c2 variable per-patient cost phase II c3 variable per-patient cost phase III c02 fixed cost phase II c03 fixed cost phase III K constraint costs program, default: Inf, e.g. constraint N constraint total expected sample size program, default: Inf, e.g. constraint S constraint expected probability successful program, default: -Inf, e.g. constraint b1 expected gain effect size category \"small\" b2 expected gain effect size category \"medium\" b3 expected gain effect size category \"large\" case choose case: \"least 1, 2 3 significant trials needed approval\" fixed choose true treatment effects fixed random","code":""},{"path":"https://sterniii3.github.io/drugdevelopR/reference/utility_multitrial_normal.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Utility function for multitrial programs with normally distributed outcomes — utility_multitrial_normal","text":"output functions utility2_normal(), utility3_normal() utility4_normal() expected utility program 2, 3 4 phase III trials performed.","code":""},{"path":"https://sterniii3.github.io/drugdevelopR/reference/utility_multitrial_normal.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Utility function for multitrial programs with normally distributed outcomes — utility_multitrial_normal","text":"","code":"res <- utility2_normal(kappa = 0.1, n2 = 50,  alpha = 0.025, beta = 0.1, w = 0.3,                                  Delta1 = 0.375, Delta2 = 0.625, in1 = 300, in2 = 600,                                   a = 0.25, b = 0.75,                                   c2 = 0.675, c3 = 0.72, c02 = 15, c03 = 20,                                  K = Inf, N = Inf, S = -Inf,                                   b1 = 3000, b2 = 8000, b3 = 10000,                                   case = 2, fixed = TRUE)           res <- utility3_normal(kappa = 0.1, n2 = 50,  alpha = 0.025, beta = 0.1, w = 0.3,                                  Delta1 = 0.375, Delta2 = 0.625, in1 = 300, in2 = 600,                                   a = 0.25, b = 0.75,                                   c2 = 0.675, c3 = 0.72, c02 = 15, c03 = 20,                                  K = Inf, N = Inf, S = -Inf,                                  b1 = 3000, b2 = 8000, b3 = 10000,                                   case = 2, fixed = TRUE)                                   res <- utility4_normal(kappa = 0.1, n2 = 50,  alpha = 0.025, beta = 0.1, w = 0.3,                                  Delta1 = 0.375, Delta2 = 0.625, in1 = 300, in2 = 600,                                   a = 0.25, b = 0.75,                                   c2 = 0.675, c3 = 0.72, c02 = 15, c03 = 20,                                  K = Inf, N = Inf, S = -Inf,                                   b1 = 3000, b2 = 8000, b3 = 10000,                                   case = 3, fixed = TRUE)"},{"path":"https://sterniii3.github.io/drugdevelopR/news/index.html","id":"drugdevelopr-010","dir":"Changelog","previous_headings":"","what":"drugdevelopR 0.1.0","title":"drugdevelopR 0.1.0","text":"Added NEWS.md file track changes package.","code":""}]
