[{"path":"https://sterniii3.github.io/drugdevelopR/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Stella Preussler. Author, maintainer.","code":""},{"path":"https://sterniii3.github.io/drugdevelopR/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Preussler S (2022). drugdevelopR: Utility based optimal phase II/III drug development planning. https://github.com/Sterniii3/drugdevelopR, https://sterniii3.github.io/drugdevelopR/.","code":"@Manual{,   title = {drugdevelopR: Utility based optimal phase II/III drug development planning},   author = {Stella Preussler},   year = {2022},   note = {https://github.com/Sterniii3/drugdevelopR, https://sterniii3.github.io/drugdevelopR/}, }"},{"path":"https://sterniii3.github.io/drugdevelopR/index.html","id":"drugdevelopr-utility-based-optimal-phase-iiiii-drug-development-planning","dir":"","previous_headings":"","what":"drugdevelopR: Utility based optimal phase II/III drug development planning.","title":"Utility based optimal phase II/III drug development planning ","text":"Install development version package directly GitHub : access drugdevelopR App via https://web.imbi.uni-heidelberg.de/drugdevelopR/.","code":"if(!require(devtools)) { install.packages(\"devtools\"); require(devtools)}   devtools::install_github(\"Sterniii3/drugdevelopR\")"},{"path":"https://sterniii3.github.io/drugdevelopR/reference/EPsProg23_binary.html","id":null,"dir":"Reference","previous_headings":"","what":"Expected probability of a successful program: EsP — EPsProg23_binary","title":"Expected probability of a successful program: EsP — EPsProg23_binary","text":"Expected probability successful program: EsP","code":""},{"path":"https://sterniii3.github.io/drugdevelopR/reference/EPsProg23_binary.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Expected probability of a successful program: EsP — EPsProg23_binary","text":"","code":"EPsProg23_binary(   RRgo,   n2,   alpha,   beta,   w,   p0,   p11,   p12,   id1,   id2,   case,   size,   ymin )"},{"path":"https://sterniii3.github.io/drugdevelopR/reference/EPsProg23_binary.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Expected probability of a successful program: EsP — EPsProg23_binary","text":"RRgo threshold value go/-go decision rule n2 total sample size phase II; must even number alpha significance level beta 1-beta power calculation sample size phase III w weight mixture prior distribution p0 assumed true rate control group p11 assumed true rate treatment group p12 assumed true rate treatment group case choose case: \"least 1, 2 3 significant trials needed approval\" size size category \"small\", \"medium\" \"large\" in1 amount information p11 terms sample size in2 amount information p12 terms sample size","code":""},{"path":"https://sterniii3.github.io/drugdevelopR/reference/EPsProg23_binary.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Expected probability of a successful program: EsP — EPsProg23_binary","text":"output function EPsProg23_binary expected probability successful program","code":""},{"path":[]},{"path":"https://sterniii3.github.io/drugdevelopR/reference/EPsProg23_normal.html","id":null,"dir":"Reference","previous_headings":"","what":"Expected probability of a successful program: EsP — EPsProg23_normal","title":"Expected probability of a successful program: EsP — EPsProg23_normal","text":"Expected probability successful program: EsP","code":""},{"path":"https://sterniii3.github.io/drugdevelopR/reference/EPsProg23_normal.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Expected probability of a successful program: EsP — EPsProg23_normal","text":"","code":"EPsProg23_normal(   kappa,   n2,   alpha,   beta,   w,   Delta1,   Delta2,   in1,   in2,   a,   b,   case,   size,   ymin )"},{"path":"https://sterniii3.github.io/drugdevelopR/reference/EPsProg23_normal.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Expected probability of a successful program: EsP — EPsProg23_normal","text":"kappa threshold value go/-go decision rule n2 total sample size phase II; must even number alpha significance level beta 1-beta power calculation sample size phase III w weight mixture prior distribution Delta1 assumed true treatment effect standardized difference means Delta2 assumed true treatment effect standardized difference means in1 amount information Delta1 terms sample size in2 amount information Delta2 terms sample size lower boundary truncation b upper boundary truncation case choose case: \"least 1, 2 3 significant trials needed approval\" size size category \"small\", \"medium\" \"large\" fixed choose true treatment effects fixed random","code":""},{"path":"https://sterniii3.github.io/drugdevelopR/reference/EPsProg23_normal.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Expected probability of a successful program: EsP — EPsProg23_normal","text":"output function EPsProg23_normal expected probability successful program","code":""},{"path":[]},{"path":"https://sterniii3.github.io/drugdevelopR/reference/EPsProg2_binary.html","id":null,"dir":"Reference","previous_headings":"","what":"Expected probability of a successful program: EsP — EPsProg2_binary","title":"Expected probability of a successful program: EsP — EPsProg2_binary","text":"Expected probability successful program: EsP","code":""},{"path":"https://sterniii3.github.io/drugdevelopR/reference/EPsProg2_binary.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Expected probability of a successful program: EsP — EPsProg2_binary","text":"","code":"EPsProg2_binary(   RRgo,   n2,   alpha,   beta,   p0,   w,   p11,   p12,   in1,   in2,   case,   size,   fixed )"},{"path":"https://sterniii3.github.io/drugdevelopR/reference/EPsProg2_binary.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Expected probability of a successful program: EsP — EPsProg2_binary","text":"RRgo threshold value go/-go decision rule n2 total sample size phase II; must even number alpha significance level beta 1-beta power calculation sample size phase III p0 assumed true rate control group w weight mixture prior distribution p11 assumed true rate treatment group p12 assumed true rate treatment group in1 amount information p11 terms sample size in2 amount information p12 terms sample size case choose case: \"least 1, 2 3 significant trials needed approval\" size size category \"small\", \"medium\" \"large\" fixed choose true treatment effects fixed random","code":""},{"path":"https://sterniii3.github.io/drugdevelopR/reference/EPsProg2_binary.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Expected probability of a successful program: EsP — EPsProg2_binary","text":"output function EPsProg2_binary expected probability successful program","code":""},{"path":[]},{"path":"https://sterniii3.github.io/drugdevelopR/reference/EPsProg2_normal.html","id":null,"dir":"Reference","previous_headings":"","what":"Expected probability of a successful program: EsP — EPsProg2_normal","title":"Expected probability of a successful program: EsP — EPsProg2_normal","text":"Expected probability successful program: EsP","code":""},{"path":"https://sterniii3.github.io/drugdevelopR/reference/EPsProg2_normal.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Expected probability of a successful program: EsP — EPsProg2_normal","text":"","code":"EPsProg2_normal(   kappa,   n2,   alpha,   beta,   w,   Delta1,   Delta2,   in1,   in2,   a,   b,   case,   size,   fixed )"},{"path":"https://sterniii3.github.io/drugdevelopR/reference/EPsProg2_normal.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Expected probability of a successful program: EsP — EPsProg2_normal","text":"kappa threshold value go/-go decision rule n2 total sample size phase II; must even number alpha significance level beta 1-beta power calculation sample size phase III w weight mixture prior distribution Delta1 assumed true treatment effect standardized difference means Delta2 assumed true treatment effect standardized difference means in1 amount information Delta1 terms sample size in2 amount information Delta2 terms sample size lower boundary truncation b upper boundary truncation case choose case: \"least 1, 2 3 significant trials needed approval\" size size category \"small\", \"medium\" \"large\" fixed choose true treatment effects fixed random","code":""},{"path":"https://sterniii3.github.io/drugdevelopR/reference/EPsProg2_normal.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Expected probability of a successful program: EsP — EPsProg2_normal","text":"output function EPsProg2_normal expected probability successful program","code":""},{"path":"https://sterniii3.github.io/drugdevelopR/reference/EPsProg2_normal.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Expected probability of a successful program: EsP — EPsProg2_normal","text":"","code":"res <- EPsProg2_normal(kappa = 0.1, n2 = 50, alpha = 0.025, beta = 0.1, w = 0.3,                                  Delta1 = 0.375, Delta2 = 0.625, in1 = 300, in2 = 600,                                   a = 0.25, b = 0.75,                                   case = 2, size = \"small\", fixed = FALSE) #> Error in EPsProg2_normal(kappa = 0.1, n2 = 50, alpha = 0.025, beta = 0.1,     w = 0.3, Delta1 = 0.375, Delta2 = 0.625, in1 = 300, in2 = 600,     a = 0.25, b = 0.75, case = 2, size = \"small\", fixed = FALSE): could not find function \"EPsProg2_normal\""},{"path":"https://sterniii3.github.io/drugdevelopR/reference/EPsProg3_binary.html","id":null,"dir":"Reference","previous_headings":"","what":"Expected probability of a successful program: EsP — EPsProg3_binary","title":"Expected probability of a successful program: EsP — EPsProg3_binary","text":"Expected probability successful program: EsP","code":""},{"path":"https://sterniii3.github.io/drugdevelopR/reference/EPsProg3_binary.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Expected probability of a successful program: EsP — EPsProg3_binary","text":"","code":"EPsProg3_binary(   RRgo,   n2,   alpha,   beta,   p0,   w,   p11,   p12,   in1,   in2,   case,   size,   fixed )"},{"path":"https://sterniii3.github.io/drugdevelopR/reference/EPsProg3_binary.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Expected probability of a successful program: EsP — EPsProg3_binary","text":"RRgo threshold value go/-go decision rule n2 total sample size phase II; must even number alpha significance level beta 1-beta power calculation sample size phase III p0 assumed true rate control group w weight mixture prior distribution p11 assumed true rate treatment group p12 assumed true rate treatment group in1 amount information p11 terms sample size in2 amount information p12 terms sample size case choose case: \"least 1, 2 3 significant trials needed approval\" size size category \"small\", \"medium\" \"large\" fixed choose true treatment effects fixed random","code":""},{"path":"https://sterniii3.github.io/drugdevelopR/reference/EPsProg3_binary.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Expected probability of a successful program: EsP — EPsProg3_binary","text":"output function EPsProg3_binary expected probability successful program","code":""},{"path":[]},{"path":"https://sterniii3.github.io/drugdevelopR/reference/EPsProg3_normal.html","id":null,"dir":"Reference","previous_headings":"","what":"Expected probability of a successful program: EsP — EPsProg3_normal","title":"Expected probability of a successful program: EsP — EPsProg3_normal","text":"Expected probability successful program: EsP","code":""},{"path":"https://sterniii3.github.io/drugdevelopR/reference/EPsProg3_normal.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Expected probability of a successful program: EsP — EPsProg3_normal","text":"","code":"EPsProg3_normal(   kappa,   n2,   alpha,   beta,   w,   Delta1,   Delta2,   in1,   in2,   a,   b,   case,   size,   fixed )"},{"path":"https://sterniii3.github.io/drugdevelopR/reference/EPsProg3_normal.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Expected probability of a successful program: EsP — EPsProg3_normal","text":"kappa threshold value go/-go decision rule n2 total sample size phase II; must even number alpha significance level beta 1-beta power calculation sample size phase III w weight mixture prior distribution Delta1 assumed true treatment effect standardized difference means Delta2 assumed true treatment effect standardized difference means in1 amount information Delta1 terms sample size in2 amount information Delta2 terms sample size lower boundary truncation b upper boundary truncation case choose case: \"least 1, 2 3 significant trials needed approval\" size size category \"small\", \"medium\" \"large\" fixed choose true treatment effects fixed random","code":""},{"path":"https://sterniii3.github.io/drugdevelopR/reference/EPsProg3_normal.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Expected probability of a successful program: EsP — EPsProg3_normal","text":"output function EPsProg3_normal expected probability successful program","code":""},{"path":"https://sterniii3.github.io/drugdevelopR/reference/EPsProg3_normal.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Expected probability of a successful program: EsP — EPsProg3_normal","text":"","code":"res <- EPsProg3_normal(kappa = 0.1, n2 = 50, alpha = 0.025, beta = 0.1, w = 0.3,                                  Delta1 = 0.375, Delta2 = 0.625, in1 = 300, in2 = 600,                                   a = 0.25, b = 0.75,                                   case = 2, size = \"small\", fixed = FALSE) #> Error in EPsProg3_normal(kappa = 0.1, n2 = 50, alpha = 0.025, beta = 0.1,     w = 0.3, Delta1 = 0.375, Delta2 = 0.625, in1 = 300, in2 = 600,     a = 0.25, b = 0.75, case = 2, size = \"small\", fixed = FALSE): could not find function \"EPsProg3_normal\""},{"path":"https://sterniii3.github.io/drugdevelopR/reference/EPsProg4_binary.html","id":null,"dir":"Reference","previous_headings":"","what":"Expected probability of a successful program: EsP — EPsProg4_binary","title":"Expected probability of a successful program: EsP — EPsProg4_binary","text":"Expected probability successful program: EsP","code":""},{"path":"https://sterniii3.github.io/drugdevelopR/reference/EPsProg4_binary.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Expected probability of a successful program: EsP — EPsProg4_binary","text":"","code":"EPsProg4_binary(   RRgo,   n2,   alpha,   beta,   p0,   w,   p11,   p12,   in1,   in2,   case,   size,   fixed )"},{"path":"https://sterniii3.github.io/drugdevelopR/reference/EPsProg4_binary.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Expected probability of a successful program: EsP — EPsProg4_binary","text":"RRgo threshold value go/-go decision rule n2 total sample size phase II; must even number alpha significance level beta 1-beta power calculation sample size phase III p0 assumed true rate control group w weight mixture prior distribution p11 assumed true rate treatment group p12 assumed true rate treatment group in1 amount information p11 terms sample size in2 amount information p12 terms sample size case choose case: \"least 1, 2 3 significant trials needed approval\" size size category \"small\", \"medium\" \"large\" fixed choose true treatment effects fixed random","code":""},{"path":"https://sterniii3.github.io/drugdevelopR/reference/EPsProg4_binary.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Expected probability of a successful program: EsP — EPsProg4_binary","text":"output function EPsProg4_binary expected probability successful program","code":""},{"path":[]},{"path":"https://sterniii3.github.io/drugdevelopR/reference/EPsProg4_normal.html","id":null,"dir":"Reference","previous_headings":"","what":"Expected probability of a successful program: EsP — EPsProg4_normal","title":"Expected probability of a successful program: EsP — EPsProg4_normal","text":"Expected probability successful program: EsP","code":""},{"path":"https://sterniii3.github.io/drugdevelopR/reference/EPsProg4_normal.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Expected probability of a successful program: EsP — EPsProg4_normal","text":"","code":"EPsProg4_normal(   kappa,   n2,   alpha,   beta,   w,   Delta1,   Delta2,   in1,   in2,   a,   b,   case,   size,   fixed )"},{"path":"https://sterniii3.github.io/drugdevelopR/reference/EPsProg4_normal.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Expected probability of a successful program: EsP — EPsProg4_normal","text":"kappa threshold value go/-go decision rule n2 total sample size phase II; must even number alpha significance level beta 1-beta power calculation sample size phase III w weight mixture prior distribution Delta1 assumed true treatment effect standardized difference means Delta2 assumed true treatment effect standardized difference means in1 amount information Delta1 terms sample size in2 amount information Delta2 terms sample size lower boundary truncation b upper boundary truncation case choose case: \"least 1, 2 3 significant trials needed approval\" size size category \"small\", \"medium\" \"large\" fixed choose true treatment effects fixed random","code":""},{"path":"https://sterniii3.github.io/drugdevelopR/reference/EPsProg4_normal.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Expected probability of a successful program: EsP — EPsProg4_normal","text":"output function EPsProg2_normal expected probability successful program","code":""},{"path":"https://sterniii3.github.io/drugdevelopR/reference/EPsProg4_normal.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Expected probability of a successful program: EsP — EPsProg4_normal","text":"","code":"res <- EPsProg2_normal(kappa = 0.1, n2 = 50, alpha = 0.025, beta = 0.1, w = 0.3,                                  Delta1 = 0.375, Delta2 = 0.625, in1 = 300, in2 = 600,                                   a = 0.25, b = 0.75,                                   case = 3, size = \"small\", fixed = FALSE) #> Error in EPsProg2_normal(kappa = 0.1, n2 = 50, alpha = 0.025, beta = 0.1,     w = 0.3, Delta1 = 0.375, Delta2 = 0.625, in1 = 300, in2 = 600,     a = 0.25, b = 0.75, case = 3, size = \"small\", fixed = FALSE): could not find function \"EPsProg2_normal\""},{"path":"https://sterniii3.github.io/drugdevelopR/reference/EPsProg_binary_L.html","id":null,"dir":"Reference","previous_headings":"","what":"Expected probability of a successful program: EsP — EPsProg_binary_L","title":"Expected probability of a successful program: EsP — EPsProg_binary_L","text":"Expected probability successful program: EsP","code":""},{"path":"https://sterniii3.github.io/drugdevelopR/reference/EPsProg_binary_L.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Expected probability of a successful program: EsP — EPsProg_binary_L","text":"","code":"EPsProg_binary_L(   RRgo,   n2,   Adj,   alpha,   beta,   step1,   step2,   p0,   w,   p11,   p12,   in1,   in2,   fixed )"},{"path":"https://sterniii3.github.io/drugdevelopR/reference/EPsProg_binary_L.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Expected probability of a successful program: EsP — EPsProg_binary_L","text":"RRgo threshold value go/-go decision rule n2 total sample size phase II; must even number Adj adjustment parameter alpha significance level beta 1-beta power calculation sample size phase III step1 lower boundary effect size step2 upper boundary effect size p0 assumed true rate control group w weight mixture prior distribution p11 assumed true rate treatment group p12 assumed true rate treatment group in1 amount information p11 terms sample size in2 amount information p12 terms sample size fixed choose true treatment effects fixed random, TRUE Delta1 used fixed effect","code":""},{"path":"https://sterniii3.github.io/drugdevelopR/reference/EPsProg_binary_L.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Expected probability of a successful program: EsP — EPsProg_binary_L","text":"output function EPsProg_binary_L expected probability successful program","code":""},{"path":[]},{"path":"https://sterniii3.github.io/drugdevelopR/reference/EPsProg_binary_L2.html","id":null,"dir":"Reference","previous_headings":"","what":"Expected probability of a successful program: EsP — EPsProg_binary_L2","title":"Expected probability of a successful program: EsP — EPsProg_binary_L2","text":"Expected probability successful program: EsP","code":""},{"path":"https://sterniii3.github.io/drugdevelopR/reference/EPsProg_binary_L2.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Expected probability of a successful program: EsP — EPsProg_binary_L2","text":"","code":"EPsProg_binary_L2(   RRgo,   n2,   Adj,   alpha,   beta,   step1,   step2,   p0,   w,   p11,   p12,   in1,   in2,   fixed )"},{"path":"https://sterniii3.github.io/drugdevelopR/reference/EPsProg_binary_L2.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Expected probability of a successful program: EsP — EPsProg_binary_L2","text":"RRgo threshold value go/-go decision rule n2 total sample size phase II; must even number Adj adjustment parameter alpha significance level beta 1-beta power calculation sample size phase III step1 lower boundary effect size step2 upper boundary effect size p0 assumed true rate control group w weight mixture prior distribution p11 assumed true rate treatment group p12 assumed true rate treatment group in1 amount information p11 terms sample size in2 amount information p12 terms sample size fixed choose true treatment effects fixed random, TRUE Delta1 used fixed effect","code":""},{"path":"https://sterniii3.github.io/drugdevelopR/reference/EPsProg_binary_L2.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Expected probability of a successful program: EsP — EPsProg_binary_L2","text":"output function EPsProg_binary_L2 expected probability successful program","code":""},{"path":[]},{"path":"https://sterniii3.github.io/drugdevelopR/reference/EPsProg_binary_R.html","id":null,"dir":"Reference","previous_headings":"","what":"Expected probability of a successful program: EsP — EPsProg_binary_R","title":"Expected probability of a successful program: EsP — EPsProg_binary_R","text":"Expected probability successful program: EsP","code":""},{"path":"https://sterniii3.github.io/drugdevelopR/reference/EPsProg_binary_R.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Expected probability of a successful program: EsP — EPsProg_binary_R","text":"","code":"EPsProg_binary_R(   RRgo,   n2,   Adj,   alpha,   beta,   step1,   step2,   p0,   w,   p11,   p12,   in1,   in2,   fixed )"},{"path":"https://sterniii3.github.io/drugdevelopR/reference/EPsProg_binary_R.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Expected probability of a successful program: EsP — EPsProg_binary_R","text":"RRgo threshold value go/-go decision rule n2 total sample size phase II; must even number Adj adjustment parameter alpha significance level beta 1-beta power calculation sample size phase III step1 lower boundary effect size step2 upper boundary effect size p0 assumed true rate control group w weight mixture prior distribution p11 assumed true rate treatment group p12 assumed true rate treatment group in1 amount information p11 terms sample size in2 amount information p12 terms sample size fixed choose true treatment effects fixed random, TRUE Delta1 used fixed effect","code":""},{"path":"https://sterniii3.github.io/drugdevelopR/reference/EPsProg_binary_R.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Expected probability of a successful program: EsP — EPsProg_binary_R","text":"output function EPsProg_binary_R expected probability successful program","code":""},{"path":[]},{"path":"https://sterniii3.github.io/drugdevelopR/reference/EPsProg_binary_R2.html","id":null,"dir":"Reference","previous_headings":"","what":"Expected probability of a successful program: EsP — EPsProg_binary_R2","title":"Expected probability of a successful program: EsP — EPsProg_binary_R2","text":"Expected probability successful program: EsP","code":""},{"path":"https://sterniii3.github.io/drugdevelopR/reference/EPsProg_binary_R2.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Expected probability of a successful program: EsP — EPsProg_binary_R2","text":"","code":"EPsProg_binary_R2(   RRgo,   n2,   Adj,   alpha,   beta,   step1,   step2,   p0,   w,   p11,   p12,   in1,   in2,   fixed )"},{"path":"https://sterniii3.github.io/drugdevelopR/reference/EPsProg_binary_R2.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Expected probability of a successful program: EsP — EPsProg_binary_R2","text":"RRgo threshold value go/-go decision rule n2 total sample size phase II; must even number Adj adjustment parameter alpha significance level beta 1-beta power calculation sample size phase III step1 lower boundary effect size step2 upper boundary effect size p0 assumed true rate control group w weight mixture prior distribution p11 assumed true rate treatment group p12 assumed true rate treatment group in1 amount information p11 terms sample size in2 amount information p12 terms sample size fixed choose true treatment effects fixed random, TRUE Delta1 used fixed effect","code":""},{"path":"https://sterniii3.github.io/drugdevelopR/reference/EPsProg_binary_R2.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Expected probability of a successful program: EsP — EPsProg_binary_R2","text":"output function EPsProg_binary_R2 expected probability successful program","code":""},{"path":[]},{"path":"https://sterniii3.github.io/drugdevelopR/reference/EPsProg_normal_L.html","id":null,"dir":"Reference","previous_headings":"","what":"Expected probability of a successful program: EsP — EPsProg_normal_L","title":"Expected probability of a successful program: EsP — EPsProg_normal_L","text":"Expected probability successful program: EsP","code":""},{"path":"https://sterniii3.github.io/drugdevelopR/reference/EPsProg_normal_L.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Expected probability of a successful program: EsP — EPsProg_normal_L","text":"","code":"EPsProg_normal_L(   kappa,   n2,   Adj,   alpha,   beta,   step1,   step2,   w,   Delta1,   Delta2,   in1,   in2,   a,   b,   fixed )"},{"path":"https://sterniii3.github.io/drugdevelopR/reference/EPsProg_normal_L.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Expected probability of a successful program: EsP — EPsProg_normal_L","text":"kappa threshold value go/-go decision rule n2 total sample size phase II; must even number Adj adjustment parameter alpha significance level beta 1-beta power calculation sample size phase III step1 lower boundary effect size step2 upper boundary effect size w weight mixture prior distribution Delta1 assumed true treatment effect standardized difference means Delta2 assumed true treatment effect standardized difference means in1 amount information Delta1 terms sample size in2 amount information Delta2 terms sample size lower boundary truncation b upper boundary truncation fixed choose true treatment effects fixed random, TRUE Delta1 used fixed effect","code":""},{"path":"https://sterniii3.github.io/drugdevelopR/reference/EPsProg_normal_L.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Expected probability of a successful program: EsP — EPsProg_normal_L","text":"output function EPsProg_normal_L expected probability successful program","code":""},{"path":"https://sterniii3.github.io/drugdevelopR/reference/EPsProg_normal_L.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Expected probability of a successful program: EsP — EPsProg_normal_L","text":"","code":"res <- EPsProg_normal_L(kappa = 0.1, n2 = 50, Adj = 0, alpha = 0.025, beta = 0.1, w = 0.3,                                  step1 = 0, step2 = 0.5,                                  Delta1 = 0.375, Delta2 = 0.625, in1 = 300, in2 = 600,                                   a = 0.25, b = 0.75, fixed = FALSE) #> Error in EPsProg_normal_L(kappa = 0.1, n2 = 50, Adj = 0, alpha = 0.025,     beta = 0.1, w = 0.3, step1 = 0, step2 = 0.5, Delta1 = 0.375,     Delta2 = 0.625, in1 = 300, in2 = 600, a = 0.25, b = 0.75,     fixed = FALSE): could not find function \"EPsProg_normal_L\""},{"path":"https://sterniii3.github.io/drugdevelopR/reference/EPsProg_normal_L2.html","id":null,"dir":"Reference","previous_headings":"","what":"Expected probability of a successful program: EsP — EPsProg_normal_L2","title":"Expected probability of a successful program: EsP — EPsProg_normal_L2","text":"Expected probability successful program: EsP","code":""},{"path":"https://sterniii3.github.io/drugdevelopR/reference/EPsProg_normal_L2.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Expected probability of a successful program: EsP — EPsProg_normal_L2","text":"","code":"EPsProg_normal_L2(   kappa,   n2,   alpha,   beta,   step1,   step2,   w,   Delta1,   Delta2,   in1,   in2,   a,   b,   fixed )"},{"path":"https://sterniii3.github.io/drugdevelopR/reference/EPsProg_normal_L2.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Expected probability of a successful program: EsP — EPsProg_normal_L2","text":"kappa threshold value go/-go decision rule n2 total sample size phase II; must even number alpha significance level beta 1-beta power calculation sample size phase III step1 lower boundary effect size step2 upper boundary effect size w weight mixture prior distribution Delta1 assumed true treatment effect standardized difference means Delta2 assumed true treatment effect standardized difference means in1 amount information Delta1 terms sample size in2 amount information Delta2 terms sample size lower boundary truncation b upper boundary truncation fixed choose true treatment effects fixed random, TRUE Delta1 used fixed effect Adj adjustment parameter","code":""},{"path":"https://sterniii3.github.io/drugdevelopR/reference/EPsProg_normal_L2.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Expected probability of a successful program: EsP — EPsProg_normal_L2","text":"output function EPsProg_normal_L2 expected probability successful program","code":""},{"path":"https://sterniii3.github.io/drugdevelopR/reference/EPsProg_normal_L2.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Expected probability of a successful program: EsP — EPsProg_normal_L2","text":"","code":"res <- EPsProg_normal_L2(kappa = 0.1, n2 = 50, Adj = 0, alpha = 0.025, beta = 0.1, w = 0.3,                                    step1 = 0, step2 = 0.5,                                    Delta1 = 0.375, Delta2 = 0.625, in1 = 300, in2 = 600,                                     a = 0.25, b = 0.75, fixed = FALSE) #> Error in EPsProg_normal_L2(kappa = 0.1, n2 = 50, Adj = 0, alpha = 0.025,     beta = 0.1, w = 0.3, step1 = 0, step2 = 0.5, Delta1 = 0.375,     Delta2 = 0.625, in1 = 300, in2 = 600, a = 0.25, b = 0.75,     fixed = FALSE): could not find function \"EPsProg_normal_L2\""},{"path":"https://sterniii3.github.io/drugdevelopR/reference/EPsProg_normal_R.html","id":null,"dir":"Reference","previous_headings":"","what":"Expected probability of a successful program: EsP — EPsProg_normal_R","title":"Expected probability of a successful program: EsP — EPsProg_normal_R","text":"Expected probability successful program: EsP","code":""},{"path":"https://sterniii3.github.io/drugdevelopR/reference/EPsProg_normal_R.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Expected probability of a successful program: EsP — EPsProg_normal_R","text":"","code":"EPsProg_normal_R(   kappa,   n2,   Adj,   alpha,   beta,   step1,   step2,   w,   Delta1,   Delta2,   in1,   in2,   a,   b,   fixed )"},{"path":"https://sterniii3.github.io/drugdevelopR/reference/EPsProg_normal_R.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Expected probability of a successful program: EsP — EPsProg_normal_R","text":"kappa threshold value go/-go decision rule n2 total sample size phase II; must even number Adj adjustment parameter alpha significance level beta 1-beta power calculation sample size phase III step1 lower boundary effect size step2 upper boundary effect size w weight mixture prior distribution Delta1 assumed true treatment effect standardized difference means Delta2 assumed true treatment effect standardized difference means in1 amount information Delta1 terms sample size in2 amount information Delta2 terms sample size lower boundary truncation b upper boundary truncation fixed choose true treatment effects fixed random, TRUE Delta1 used fixed effect","code":""},{"path":"https://sterniii3.github.io/drugdevelopR/reference/EPsProg_normal_R.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Expected probability of a successful program: EsP — EPsProg_normal_R","text":"output function EPsProg_normal_R expected probability successful program","code":""},{"path":"https://sterniii3.github.io/drugdevelopR/reference/EPsProg_normal_R.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Expected probability of a successful program: EsP — EPsProg_normal_R","text":"","code":"res <- EPsProg_normal_R(kappa = 0.1, n2 = 50, Adj = 0, alpha = 0.025, beta = 0.1, w = 0.3,                                  step1 = 0, step2 = 0.5,                                  Delta1 = 0.375, Delta2 = 0.625, in1 = 300, in2 = 600,                                   a = 0.25, b = 0.75, fixed = FALSE) #> Error in EPsProg_normal_R(kappa = 0.1, n2 = 50, Adj = 0, alpha = 0.025,     beta = 0.1, w = 0.3, step1 = 0, step2 = 0.5, Delta1 = 0.375,     Delta2 = 0.625, in1 = 300, in2 = 600, a = 0.25, b = 0.75,     fixed = FALSE): could not find function \"EPsProg_normal_R\""},{"path":"https://sterniii3.github.io/drugdevelopR/reference/EPsProg_normal_R2.html","id":null,"dir":"Reference","previous_headings":"","what":"Expected probability of a successful program: EsP — EPsProg_normal_R2","title":"Expected probability of a successful program: EsP — EPsProg_normal_R2","text":"Expected probability successful program: EsP","code":""},{"path":"https://sterniii3.github.io/drugdevelopR/reference/EPsProg_normal_R2.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Expected probability of a successful program: EsP — EPsProg_normal_R2","text":"","code":"EPsProg_normal_R2(   kappa,   n2,   Adj,   alpha,   beta,   step1,   step2,   w,   Delta1,   Delta2,   in1,   in2,   a,   b,   fixed )"},{"path":"https://sterniii3.github.io/drugdevelopR/reference/EPsProg_normal_R2.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Expected probability of a successful program: EsP — EPsProg_normal_R2","text":"kappa threshold value go/-go decision rule n2 total sample size phase II; must even number Adj adjustment parameter alpha significance level beta 1-beta power calculation sample size phase III step1 lower boundary effect size step2 upper boundary effect size w weight mixture prior distribution Delta1 assumed true treatment effect standardized difference means Delta2 assumed true treatment effect standardized difference means in1 amount information Delta1 terms sample size in2 amount information Delta2 terms sample size lower boundary truncation b upper boundary truncation fixed choose true treatment effects fixed random, TRUE Delta1 used fixed effect","code":""},{"path":"https://sterniii3.github.io/drugdevelopR/reference/EPsProg_normal_R2.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Expected probability of a successful program: EsP — EPsProg_normal_R2","text":"output function EPsProg_normal_R2 expected probability successful program","code":""},{"path":"https://sterniii3.github.io/drugdevelopR/reference/EPsProg_normal_R2.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Expected probability of a successful program: EsP — EPsProg_normal_R2","text":"","code":"res <- EPsProg_normal_R2(kappa = 0.1, n2 = 50, Adj = 0, alpha = 0.025, beta = 0.1, w = 0.3,                                  step1 = 0, step2 = 0.5,                                  Delta1 = 0.375, Delta2 = 0.625, in1 = 300, in2 = 600,                                   a = 0.25, b = 0.75, fixed = FALSE) #> Error in EPsProg_normal_R2(kappa = 0.1, n2 = 50, Adj = 0, alpha = 0.025,     beta = 0.1, w = 0.3, step1 = 0, step2 = 0.5, Delta1 = 0.375,     Delta2 = 0.625, in1 = 300, in2 = 600, a = 0.25, b = 0.75,     fixed = FALSE): could not find function \"EPsProg_normal_R2\""},{"path":"https://sterniii3.github.io/drugdevelopR/reference/En3_binary_L.html","id":null,"dir":"Reference","previous_headings":"","what":"Expected sample size for phase III when going to phase III: En3 — En3_binary_L","title":"Expected sample size for phase III when going to phase III: En3 — En3_binary_L","text":"Expected sample size phase III going phase III: En3","code":""},{"path":"https://sterniii3.github.io/drugdevelopR/reference/En3_binary_L.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Expected sample size for phase III when going to phase III: En3 — En3_binary_L","text":"","code":"En3_binary_L(RRgo, n2, Adj, alpha, beta, p0, w, p11, p12, in1, in2, fixed)"},{"path":"https://sterniii3.github.io/drugdevelopR/reference/En3_binary_L.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Expected sample size for phase III when going to phase III: En3 — En3_binary_L","text":"RRgo threshold value go/-go decision rule n2 total sample size phase II; must even number Adj adjustment parameter alpha significance level beta 1-beta power calculation sample size phase III p0 assumed true rate control group w weight mixture prior distribution p11 assumed true rate treatment group p12 assumed true rate treatment group in1 amount information p11 terms sample size in2 amount information p12 terms sample size fixed choose true treatment effects fixed random, TRUE Delta1 used fixed effect","code":""},{"path":"https://sterniii3.github.io/drugdevelopR/reference/En3_binary_L.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Expected sample size for phase III when going to phase III: En3 — En3_binary_L","text":"output function En3_binary_L expected number participants phase III","code":""},{"path":[]},{"path":"https://sterniii3.github.io/drugdevelopR/reference/En3_binary_R2.html","id":null,"dir":"Reference","previous_headings":"","what":"Expected sample size for phase III when going to phase III: En3 — En3_binary_R2","title":"Expected sample size for phase III when going to phase III: En3 — En3_binary_R2","text":"Expected sample size phase III going phase III: En3","code":""},{"path":"https://sterniii3.github.io/drugdevelopR/reference/En3_binary_R2.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Expected sample size for phase III when going to phase III: En3 — En3_binary_R2","text":"","code":"En3_binary_R2(RRgo, n2, Adj, alpha, beta, p0, w, p11, p12, in1, in2, fixed)"},{"path":"https://sterniii3.github.io/drugdevelopR/reference/En3_binary_R2.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Expected sample size for phase III when going to phase III: En3 — En3_binary_R2","text":"RRgo threshold value go/-go decision rule n2 total sample size phase II; must even number Adj adjustment parameter alpha significance level beta 1-beta power calculation sample size phase III p0 assumed true rate control group w weight mixture prior distribution p11 assumed true rate treatment group p12 assumed true rate treatment group in1 amount information p11 terms sample size in2 amount information p12 terms sample size fixed choose true treatment effects fixed random, TRUE Delta1 used fixed effect","code":""},{"path":"https://sterniii3.github.io/drugdevelopR/reference/En3_binary_R2.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Expected sample size for phase III when going to phase III: En3 — En3_binary_R2","text":"output function En3_binary_R2 expected number participants phase III","code":""},{"path":[]},{"path":"https://sterniii3.github.io/drugdevelopR/reference/En3_normal_L.html","id":null,"dir":"Reference","previous_headings":"","what":"Expected  size for phase III when going to phase III: En3_normal_L — En3_normal_L","title":"Expected  size for phase III when going to phase III: En3_normal_L — En3_normal_L","text":"Expected  size phase III going phase III: En3_normal_L","code":""},{"path":"https://sterniii3.github.io/drugdevelopR/reference/En3_normal_L.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Expected  size for phase III when going to phase III: En3_normal_L — En3_normal_L","text":"","code":"En3_normal_L(   kappa,   n2,   Adj,   alpha,   beta,   w,   Delta1,   Delta2,   in1,   in2,   a,   b,   fixed )"},{"path":"https://sterniii3.github.io/drugdevelopR/reference/En3_normal_L.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Expected  size for phase III when going to phase III: En3_normal_L — En3_normal_L","text":"kappa threshold value go/-go decision rule n2 total sample size phase II; must even number Adj adjustment parameter alpha significance level beta 1-beta power calculation sample size phase III w weight mixture prior distribution Delta1 assumed true treatment effect standardized difference means Delta2 assumed true treatment effect standardized difference means in1 amount information Delta1 terms sample size in2 amount information Delta2 terms sample size lower boundary truncation b upper boundary truncation fixed choose true treatment effects fixed random, TRUE Delta1 used fixed effect","code":""},{"path":"https://sterniii3.github.io/drugdevelopR/reference/En3_normal_L.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Expected  size for phase III when going to phase III: En3_normal_L — En3_normal_L","text":"output function En3_normal_L expected number participants phase III","code":""},{"path":"https://sterniii3.github.io/drugdevelopR/reference/En3_normal_L.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Expected  size for phase III when going to phase III: En3_normal_L — En3_normal_L","text":"","code":"res <- En3_normal_L(kappa = 0.1, n2 = 50, Adj = 0, alpha = 0.025, beta = 0.1, w = 0.3,                               Delta1 = 0.375, Delta2 = 0.625, in1 = 300, in2 = 600,                                a = 0.25, b = 0.75, fixed = FALSE) #> Error in En3_normal_L(kappa = 0.1, n2 = 50, Adj = 0, alpha = 0.025, beta = 0.1,     w = 0.3, Delta1 = 0.375, Delta2 = 0.625, in1 = 300, in2 = 600,     a = 0.25, b = 0.75, fixed = FALSE): could not find function \"En3_normal_L\""},{"path":"https://sterniii3.github.io/drugdevelopR/reference/En3_normal_L2.html","id":null,"dir":"Reference","previous_headings":"","what":"Expected  size for phase III when going to phase III: En3_normal_L2 — En3_normal_L2","title":"Expected  size for phase III when going to phase III: En3_normal_L2 — En3_normal_L2","text":"Expected  size phase III going phase III: En3_normal_L2","code":""},{"path":"https://sterniii3.github.io/drugdevelopR/reference/En3_normal_L2.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Expected  size for phase III when going to phase III: En3_normal_L2 — En3_normal_L2","text":"","code":"En3_normal_L2(   kappa,   n2,   Adj,   alpha,   beta,   w,   Delta1,   Delta2,   in1,   in2,   a,   b,   fixed )"},{"path":"https://sterniii3.github.io/drugdevelopR/reference/En3_normal_L2.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Expected  size for phase III when going to phase III: En3_normal_L2 — En3_normal_L2","text":"kappa threshold value go/-go decision rule n2 total sample size phase II; must even number Adj adjustment parameter alpha significance level beta 1-beta power calculation sample size phase III w weight mixture prior distribution Delta1 assumed true treatment effect standardized difference means Delta2 assumed true treatment effect standardized difference means in1 amount information Delta1 terms sample size in2 amount information Delta2 terms sample size lower boundary truncation b upper boundary truncation fixed choose true treatment effects fixed random, TRUE Delta1 used fixed effect","code":""},{"path":"https://sterniii3.github.io/drugdevelopR/reference/En3_normal_L2.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Expected  size for phase III when going to phase III: En3_normal_L2 — En3_normal_L2","text":"output function En3_normal_L2 expected number participants phase III","code":""},{"path":"https://sterniii3.github.io/drugdevelopR/reference/En3_normal_L2.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Expected  size for phase III when going to phase III: En3_normal_L2 — En3_normal_L2","text":"","code":"res <- En3_normal_L2(kappa = 0.1, n2 = 50, Adj = 0, alpha = 0.025, beta = 0.1, w = 0.3,                               Delta1 = 0.375, Delta2 = 0.625, in1 = 300, in2 = 600,                                a = 0.25, b = 0.75, fixed = FALSE) #> Error in En3_normal_L2(kappa = 0.1, n2 = 50, Adj = 0, alpha = 0.025, beta = 0.1,     w = 0.3, Delta1 = 0.375, Delta2 = 0.625, in1 = 300, in2 = 600,     a = 0.25, b = 0.75, fixed = FALSE): could not find function \"En3_normal_L2\""},{"path":"https://sterniii3.github.io/drugdevelopR/reference/En3_normal_R.html","id":null,"dir":"Reference","previous_headings":"","what":"Expected  size for phase III when going to phase III: En3_normal_R — En3_normal_R","title":"Expected  size for phase III when going to phase III: En3_normal_R — En3_normal_R","text":"Expected  size phase III going phase III: En3_normal_R","code":""},{"path":"https://sterniii3.github.io/drugdevelopR/reference/En3_normal_R.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Expected  size for phase III when going to phase III: En3_normal_R — En3_normal_R","text":"","code":"En3_normal_R(   kappa,   n2,   Adj,   alpha,   beta,   w,   Delta1,   Delta2,   in1,   in2,   a,   b,   fixed )"},{"path":"https://sterniii3.github.io/drugdevelopR/reference/En3_normal_R.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Expected  size for phase III when going to phase III: En3_normal_R — En3_normal_R","text":"kappa threshold value go/-go decision rule n2 total sample size phase II; must even number Adj adjustment parameter alpha significance level beta 1-beta power calculation sample size phase III w weight mixture prior distribution Delta1 assumed true treatment effect standardized difference means Delta2 assumed true treatment effect standardized difference means in1 amount information Delta1 terms sample size in2 amount information Delta2 terms sample size lower boundary truncation b upper boundary truncation fixed choose true treatment effects fixed random, TRUE Delta1 used fixed effect","code":""},{"path":"https://sterniii3.github.io/drugdevelopR/reference/En3_normal_R.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Expected  size for phase III when going to phase III: En3_normal_R — En3_normal_R","text":"output function En3_normal_R expected number participants phase III","code":""},{"path":"https://sterniii3.github.io/drugdevelopR/reference/En3_normal_R.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Expected  size for phase III when going to phase III: En3_normal_R — En3_normal_R","text":"","code":"res <- En3_normal_R(kappa = 0.1, n2 = 50, Adj = 0, alpha = 0.025, beta = 0.1, w = 0.3,                               Delta1 = 0.375, Delta2 = 0.625, in1 = 300, in2 = 600,                                a = 0.25, b = 0.75, fixed = FALSE) #> Error in En3_normal_R(kappa = 0.1, n2 = 50, Adj = 0, alpha = 0.025, beta = 0.1,     w = 0.3, Delta1 = 0.375, Delta2 = 0.625, in1 = 300, in2 = 600,     a = 0.25, b = 0.75, fixed = FALSE): could not find function \"En3_normal_R\""},{"path":"https://sterniii3.github.io/drugdevelopR/reference/En3_normal_R2.html","id":null,"dir":"Reference","previous_headings":"","what":"Expected  size for phase III when going to phase III: En3_normal_R2 — En3_normal_R2","title":"Expected  size for phase III when going to phase III: En3_normal_R2 — En3_normal_R2","text":"Expected  size phase III going phase III: En3_normal_R2","code":""},{"path":"https://sterniii3.github.io/drugdevelopR/reference/En3_normal_R2.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Expected  size for phase III when going to phase III: En3_normal_R2 — En3_normal_R2","text":"","code":"En3_normal_R2(   kappa,   n2,   Adj,   alpha,   beta,   w,   Delta1,   Delta2,   in1,   in2,   a,   b,   fixed )"},{"path":"https://sterniii3.github.io/drugdevelopR/reference/En3_normal_R2.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Expected  size for phase III when going to phase III: En3_normal_R2 — En3_normal_R2","text":"kappa threshold value go/-go decision rule n2 total sample size phase II; must even number Adj adjustment parameter alpha significance level beta 1-beta power calculation sample size phase III w weight mixture prior distribution Delta1 assumed true treatment effect standardized difference means Delta2 assumed true treatment effect standardized difference means in1 amount information Delta1 terms sample size in2 amount information Delta2 terms sample size lower boundary truncation b upper boundary truncation fixed choose true treatment effects fixed random, TRUE Delta1 used fixed effect","code":""},{"path":"https://sterniii3.github.io/drugdevelopR/reference/En3_normal_R2.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Expected  size for phase III when going to phase III: En3_normal_R2 — En3_normal_R2","text":"output function En3_normal_R2 expected number participants phase III","code":""},{"path":"https://sterniii3.github.io/drugdevelopR/reference/En3_normal_R2.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Expected  size for phase III when going to phase III: En3_normal_R2 — En3_normal_R2","text":"","code":"res <- En3_normal_R2(kappa = 0.1, n2 = 50, Adj = 0, alpha = 0.025, beta = 0.1, w = 0.3,                               Delta1 = 0.375, Delta2 = 0.625, in1 = 300, in2 = 600,                                a = 0.25, b = 0.75, fixed = FALSE) #> Error in En3_normal_R2(kappa = 0.1, n2 = 50, Adj = 0, alpha = 0.025, beta = 0.1,     w = 0.3, Delta1 = 0.375, Delta2 = 0.625, in1 = 300, in2 = 600,     a = 0.25, b = 0.75, fixed = FALSE): could not find function \"En3_normal_R2\""},{"path":"https://sterniii3.github.io/drugdevelopR/reference/Epgo_normal_L2.html","id":null,"dir":"Reference","previous_headings":"","what":"Expected probability to go to phase III: Epgo — Epgo_normal_L2","title":"Expected probability to go to phase III: Epgo — Epgo_normal_L2","text":"Expected probability go phase III: Epgo","code":""},{"path":"https://sterniii3.github.io/drugdevelopR/reference/Epgo_normal_L2.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Expected probability to go to phase III: Epgo — Epgo_normal_L2","text":"","code":"Epgo_normal_L2(kappa, n2, Adj, w, Delta1, Delta2, in1, in2, a, b, fixed)"},{"path":"https://sterniii3.github.io/drugdevelopR/reference/Epgo_normal_L2.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Expected probability to go to phase III: Epgo — Epgo_normal_L2","text":"kappa threshold value go/-go decision rule n2 total sample size phase II; must even number Adj adjustment parameter w weight mixture prior distribution Delta1 assumed true treatment effect standardized difference means Delta2 assumed true treatment effect standardized difference means in1 amount information Delta1 terms sample size in2 amount information Delta2 terms sample size lower boundary truncation b upper boundary truncation fixed choose true treatment effects fixed random, TRUE Delta1 used fixed effect alpha significance level beta 1-beta power calculation sample size phase III","code":""},{"path":"https://sterniii3.github.io/drugdevelopR/reference/Epgo_normal_L2.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Expected probability to go to phase III: Epgo — Epgo_normal_L2","text":"output function Epgo_normal_L2 expected number participants phase III conservative decision rule sample size calculation:  use lower bound one-sided confidence intervall","code":""},{"path":"https://sterniii3.github.io/drugdevelopR/reference/Epgo_normal_L2.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Expected probability to go to phase III: Epgo — Epgo_normal_L2","text":"","code":"res <- Epgo_normal_L2(kappa = 0.1, n2 = 50, Adj = 0, alpha = 0.025, beta = 0.1, w = 0.3,                                Delta1 = 0.375, Delta2 = 0.625, in1 = 300, in2 = 600,                                 a = 0.25, b = 0.75, fixed = FALSE) #> Error in Epgo_normal_L2(kappa = 0.1, n2 = 50, Adj = 0, alpha = 0.025,     beta = 0.1, w = 0.3, Delta1 = 0.375, Delta2 = 0.625, in1 = 300,     in2 = 600, a = 0.25, b = 0.75, fixed = FALSE): could not find function \"Epgo_normal_L2\""},{"path":"https://sterniii3.github.io/drugdevelopR/reference/Epgo_normal_R2.html","id":null,"dir":"Reference","previous_headings":"","what":"Expected probability to go to phase III: Epgo — Epgo_normal_R2","title":"Expected probability to go to phase III: Epgo — Epgo_normal_R2","text":"Expected probability go phase III: Epgo","code":""},{"path":"https://sterniii3.github.io/drugdevelopR/reference/Epgo_normal_R2.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Expected probability to go to phase III: Epgo — Epgo_normal_R2","text":"","code":"Epgo_normal_R2(kappa, n2, Adj, w, Delta1, Delta2, in1, in2, a, b, fixed)"},{"path":"https://sterniii3.github.io/drugdevelopR/reference/Epgo_normal_R2.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Expected probability to go to phase III: Epgo — Epgo_normal_R2","text":"kappa threshold value go/-go decision rule n2 total sample size phase II; must even number Adj adjustment parameter w weight mixture prior distribution Delta1 assumed true treatment effect standardized difference means Delta2 assumed true treatment effect standardized difference means in1 amount information Delta1 terms sample size in2 amount information Delta2 terms sample size lower boundary truncation b upper boundary truncation fixed choose true treatment effects fixed random, TRUE Delta1 used fixed effect alpha significance level beta 1-beta power calculation sample size phase III","code":""},{"path":"https://sterniii3.github.io/drugdevelopR/reference/Epgo_normal_R2.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Expected probability to go to phase III: Epgo — Epgo_normal_R2","text":"output function Epgo_normal_R2 expected number participants phase III conservative decision rule sample size calculation: use estimate retetion factor","code":""},{"path":"https://sterniii3.github.io/drugdevelopR/reference/Epgo_normal_R2.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Expected probability to go to phase III: Epgo — Epgo_normal_R2","text":"","code":"res <- Epgo_normal_R2(kappa = 0.1, n2 = 50, Adj = 0, alpha = 0.025, beta = 0.1, w = 0.3,                                Delta1 = 0.375, Delta2 = 0.625, in1 = 300, in2 = 600,                                 a = 0.25, b = 0.75, fixed = FALSE) #> Error in Epgo_normal_R2(kappa = 0.1, n2 = 50, Adj = 0, alpha = 0.025,     beta = 0.1, w = 0.3, Delta1 = 0.375, Delta2 = 0.625, in1 = 300,     in2 = 600, a = 0.25, b = 0.75, fixed = FALSE): could not find function \"Epgo_normal_R2\""},{"path":"https://sterniii3.github.io/drugdevelopR/reference/Ess_binary.html","id":null,"dir":"Reference","previous_headings":"","what":"expected sample size for phase III when going to phase III — Ess_binary","title":"expected sample size for phase III when going to phase III — Ess_binary","text":"expected sample size phase III going phase III","code":""},{"path":"https://sterniii3.github.io/drugdevelopR/reference/Ess_binary.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"expected sample size for phase III when going to phase III — Ess_binary","text":"","code":"Ess_binary(RRgo, n2, alpha, beta, p0, p11, p12, strategy, case)"},{"path":"https://sterniii3.github.io/drugdevelopR/reference/Ess_binary.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"expected sample size for phase III when going to phase III — Ess_binary","text":"RRgo threshold value go/-go decision rule n2 total sample size phase II; must even number alpha significance level beta 1-beta power calculation sample size phase III p0 assumed true rate control group p11 assumed true rate treatment group p12 assumed true rate treatment group strategy choose Strategy: 1 (\"best promising\"), 2 (\"promising\") 3 () case different cases: 1 (\"nogo\"), 21 (treatment 1 promising, treatment 2 ), 22 (treatment 2 promising, treatment 1 ), 31 (treatments promising, treatment 1 better), 32 (treatments promising, treatment 2 better)","code":""},{"path":"https://sterniii3.github.io/drugdevelopR/reference/Ess_binary.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"expected sample size for phase III when going to phase III — Ess_binary","text":"function pgo_binary returns expected sample size phase III going phase III","code":""},{"path":"https://sterniii3.github.io/drugdevelopR/reference/Ess_binary.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"expected sample size for phase III when going to phase III — Ess_binary","text":"","code":"res <- Ess_binary(RRgo = 0.8 ,n2 = 50 ,alpha = 0.05, beta = 0.1,                             p0 = 0.6, p11 =  0.3, p12 = 0.5,strategy = 3, case = 31) #> Error in Ess_binary(RRgo = 0.8, n2 = 50, alpha = 0.05, beta = 0.1, p0 = 0.6,     p11 = 0.3, p12 = 0.5, strategy = 3, case = 31): could not find function \"Ess_binary\""},{"path":"https://sterniii3.github.io/drugdevelopR/reference/Ess_normal.html","id":null,"dir":"Reference","previous_headings":"","what":"expected sample size for phase III when going to phase III — Ess_normal","title":"expected sample size for phase III when going to phase III — Ess_normal","text":"expected sample size phase III going phase III","code":""},{"path":"https://sterniii3.github.io/drugdevelopR/reference/Ess_normal.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"expected sample size for phase III when going to phase III — Ess_normal","text":"","code":"Ess_normal(   kappa,   n2,   alpha,   beta,   Delta1,   Delta2,   in1,   in2,   sigma1,   sigma2,   fixed,   rho )"},{"path":"https://sterniii3.github.io/drugdevelopR/reference/Ess_normal.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"expected sample size for phase III when going to phase III — Ess_normal","text":"kappa threshold value go/-go decision rule n2 total sample size phase II; must even number alpha significance level beta 1-beta power calculation sample size phase III Delta1 assumed true treatment effect standardized difference means Delta2 assumed true treatment effect standardized difference means strategy choose Strategy: 1 (\"best promising\"), 2 (\"promising\") 3 () case different cases: 1 (\"nogo\"), 21 (treatment 1 promising, treatment 2 ), 22 (treatment 2 promising, treatment 1 ), 31 (treatments promising, treatment 1 better), 32 (treatments promising, treatment 2 better)","code":""},{"path":"https://sterniii3.github.io/drugdevelopR/reference/Ess_normal.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"expected sample size for phase III when going to phase III — Ess_normal","text":"function pgo_normal returns expected sample size phase III going phase III","code":""},{"path":"https://sterniii3.github.io/drugdevelopR/reference/Ess_normal.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"expected sample size for phase III when going to phase III — Ess_normal","text":"","code":"res <- Ess_normal(kappa = 0.1 ,n2 = 50 ,alpha = 0.05, beta = 0.1,                             Delta1 = 0.375, Delta2 = 0.625, strategy = 3, case = 31) #> Error in Ess_normal(kappa = 0.1, n2 = 50, alpha = 0.05, beta = 0.1, Delta1 = 0.375,     Delta2 = 0.625, strategy = 3, case = 31): could not find function \"Ess_normal\""},{"path":"https://sterniii3.github.io/drugdevelopR/reference/PsProg_binary.html","id":null,"dir":"Reference","previous_headings":"","what":"probability of a successful program — PsProg_binary","title":"probability of a successful program — PsProg_binary","text":"probability successful program","code":""},{"path":"https://sterniii3.github.io/drugdevelopR/reference/PsProg_binary.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"probability of a successful program — PsProg_binary","text":"","code":"PsProg_binary(   RRgo,   n2,   alpha,   beta,   p0,   p11,   p12,   step1,   step2,   strategy,   case )"},{"path":"https://sterniii3.github.io/drugdevelopR/reference/PsProg_binary.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"probability of a successful program — PsProg_binary","text":"RRgo threshold value go/-go decision rule n2 total sample size phase II; must even number alpha significance level beta 1-beta power calculation sample size phase III p0 assumed true rate control group p11 assumed true rate treatment group p12 assumed true rate treatment group step1 lower boundary effect size step2 upper boundary effect size strategy choose Strategy: 1 (\"best promising\"), 2 (\"promising\") 3 () case different cases: 1 (\"nogo\"), 21 (treatment 1 promising, treatment 2 ), 22 (treatment 2 promising, treatment 1 ), 31 (treatments promising, treatment 1 better), 32 (treatments promising, treatment 2 better)","code":""},{"path":"https://sterniii3.github.io/drugdevelopR/reference/PsProg_binary.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"probability of a successful program — PsProg_binary","text":"function PsProg_binary returns probability successful program","code":""},{"path":"https://sterniii3.github.io/drugdevelopR/reference/PsProg_binary.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"probability of a successful program — PsProg_binary","text":"","code":"res <- PsProg_binary(RRgo = 0.8 ,n2 = 50 ,alpha = 0.05, beta = 0.1,                             p0 = 0.6, p11 =  0.3, p12 = 0.5, step1 = 1, step2 = 0.95,                             strategy = 3, case = 31) #> Error in PsProg_binary(RRgo = 0.8, n2 = 50, alpha = 0.05, beta = 0.1,     p0 = 0.6, p11 = 0.3, p12 = 0.5, step1 = 1, step2 = 0.95,     strategy = 3, case = 31): could not find function \"PsProg_binary\""},{"path":"https://sterniii3.github.io/drugdevelopR/reference/PsProg_normal.html","id":null,"dir":"Reference","previous_headings":"","what":"probability of a successful program — PsProg_normal","title":"probability of a successful program — PsProg_normal","text":"probability successful program","code":""},{"path":"https://sterniii3.github.io/drugdevelopR/reference/PsProg_normal.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"probability of a successful program — PsProg_normal","text":"","code":"PsProg_normal(   kappa,   n2,   alpha,   beta,   Delta1,   Delta2,   step1,   step2,   strategy,   case )"},{"path":"https://sterniii3.github.io/drugdevelopR/reference/PsProg_normal.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"probability of a successful program — PsProg_normal","text":"kappa threshold value go/-go decision rule n2 total sample size phase II; must even number alpha significance level beta 1-beta power calculation sample size phase III Delta1 assumed true treatment effect standardized difference means Delta2 assumed true treatment effect standardized difference means step1 lower boundary effect size step2 upper boundary effect size strategy choose Strategy: 1 (\"best promising\"), 2 (\"promising\") 3 () case different cases: 1 (\"nogo\"), 21 (treatment 1 promising, treatment 2 ), 22 (treatment 2 promising, treatment 1 ), 31 (treatments promising, treatment 1 better), 32 (treatments promising, treatment 2 better)","code":""},{"path":"https://sterniii3.github.io/drugdevelopR/reference/PsProg_normal.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"probability of a successful program — PsProg_normal","text":"function PsProg_normal returns probability successful program","code":""},{"path":"https://sterniii3.github.io/drugdevelopR/reference/PsProg_normal.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"probability of a successful program — PsProg_normal","text":"","code":"res <- PsProg_normal(kappa = 0.1 ,n2 = 50 ,alpha = 0.05, beta = 0.1,                             Delta1 = 0.375, Delta2 = 0.625,  step1 = 0, step2 = 0.5,                             strategy = 3, case = 31) #> Error in PsProg_normal(kappa = 0.1, n2 = 50, alpha = 0.05, beta = 0.1,     Delta1 = 0.375, Delta2 = 0.625, step1 = 0, step2 = 0.5, strategy = 3,     case = 31): could not find function \"PsProg_normal\""},{"path":"https://sterniii3.github.io/drugdevelopR/reference/drugdevelopR.html","id":null,"dir":"Reference","previous_headings":"","what":"Utility based optimal phase II/III drug development planning — drugdevelopR","title":"Utility based optimal phase II/III drug development planning — drugdevelopR","text":"drugdevelopR package enables utility based planning phase II/III drug development programs optimal sample size allocation go/-go decision rules. assumed true treatment effects can assumed fixed (planning also possible via user friendly R Shiny App: drugdevelopR) modelled prior distribution. R Shiny application prior visualizes prior distributions used package. Fast computing enabled parallel programming.","code":""},{"path":"https://sterniii3.github.io/drugdevelopR/reference/drugdevelopR.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Utility based optimal phase II/III drug development planning — drugdevelopR","text":"","code":"drugdevelopR()"},{"path":"https://sterniii3.github.io/drugdevelopR/reference/drugdevelopR.html","id":"drugdevelopr-package-and-r-shiny-app","dir":"Reference","previous_headings":"","what":"drugdevelopR package and R Shiny App","title":"Utility based optimal phase II/III drug development planning — drugdevelopR","text":"drugdevelopR package provides functions plan optimal phase II/III drug development programs time--event endpoint (optimal_tte), binary endpoint (optimal_binary) normally distributed endpoint (optimal_normal), treatment effect assumed fixed modelled prior. settings, optimal phase II/III drug development planning fixed assumed treatment effects can also done help R Shiny application basic. Extensions basic setting optimal planning programs including methods discounting phase II results (function: optimal_bias, App: bias), optimal planning programs several phase III trials (function: optimal_multitrial, App: multitrial) optimal planning programs multiple arms (function: optimal_multiarm, App: multiarm). R Shiny App drugdevelopR serves homepage, navigating different parts drugdevelopR via links.","code":""},{"path":"https://sterniii3.github.io/drugdevelopR/reference/drugdevelopR.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Utility based optimal phase II/III drug development planning — drugdevelopR","text":"Kirchner, M., Kieser, M., Goette, H., & Schueler, . (2016). Utility-based optimization phase II/III programs. Statistics Medicine, 35(2), 305-316. Preussler, S., Kieser, M., Kirchner, M. (2019). Optimal sample size allocation go/-go decision rules phase II/III programs several phase III trials performed. Biometrical Journal, 61(2), 357-378. Preussler, S., Kirchner, M., Goette, H., Kieser, M. (2019). Optimal designs phase II/III drug development programs including methods discounting phase II results. Submitted peer-review journal. Preussler, S., Kirchner, M., Goette, H., Kieser, M. (2019). Optimal designs multi-arm Phase II/III drug development programs. Submitted peer-review journal.","code":""},{"path":"https://sterniii3.github.io/drugdevelopR/reference/optimal_bias.html","id":null,"dir":"Reference","previous_headings":"","what":"Optimal phase II/III drug development planning when discounting phase II results — optimal_bias","title":"Optimal phase II/III drug development planning when discounting phase II results — optimal_bias","text":"function optimal_bias drugdevelopR package enables planning phase II/III drug development programs optimal sample size allocation go/-go decision rules including methods discounting phase II results (Preussler et. al, 2020). assumed true treatment effects can assumed fixed (planning also possible via user friendly R Shiny App: bias) modelled prior distribution. R Shiny application prior visualizes prior distributions used package. Fast computing enabled parallel programming.","code":""},{"path":"https://sterniii3.github.io/drugdevelopR/reference/optimal_bias.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Optimal phase II/III drug development planning when discounting phase II results — optimal_bias","text":"","code":"optimal_bias(   w,   hr1,   hr2,   id1,   id2,   d2min,   d2max,   stepd2,   hrgomin,   hrgomax,   stephrgo,   adj = \"both\",   lambdamin = NULL,   lambdamax = NULL,   steplambda = NULL,   alphaCImin = NULL,   alphaCImax = NULL,   stepalphaCI = NULL,   alpha,   beta,   xi2,   xi3,   c2,   c3,   c02,   c03,   K = Inf,   N = Inf,   S = -Inf,   steps1 = 1,   stepm1 = 0.95,   stepl1 = 0.85,   b1,   b2,   b3,   fixed = FALSE,   num_cl = 1 )"},{"path":"https://sterniii3.github.io/drugdevelopR/reference/optimal_bias.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Optimal phase II/III drug development planning when discounting phase II results — optimal_bias","text":"w weight mixture prior distribution hr1 first assumed true treatment effect HR scale prior distribution hr2 second assumed true treatment effect HR scale prior distribution id1 amount information hr1 terms number events id2 amount information hr2 terms number events d2min minimal number events phase II d2max maximal number events phase II stepd2 stepsize optimization d2 hrgomin minimal threshold value go/-go decision rule hrgomax maximal threshold value go/-go decision rule stephrgo stepsize optimization HRgo adj choose type adjustment: \"multiplicative\", \"additive\", \"\" (\"\") lambdamin minimal adjustment parameter lambda lambdamax maximal adjustment parameter lambda steplambda stepsize adjustment parameter lambda alphaCImin minimal alphaCI alphaCImax maximal alphaCI stepalphaCI stepsize alphaCI alpha one-sided significance level beta 1-beta power calculation number events phase III Schoenfeld (1981) formula xi2 event rate phase II xi3 event rate phase III c2 variable per-patient cost phase II c3 variable per-patient cost phase III c02 fixed cost phase II c03 fixed cost phase III K constraint costs program, default: Inf, e.g. constraint N constraint total expected sample size program, default: Inf, e.g., constraint S constraint expected probability successful program, default: -Inf, e.g., constraint steps1 lower boundary effect size category \"small\" HR scale, default: 1 stepm1 lower boundary effect size category \"medium\" HR scale = upper boundary effect size category \"small\" HR scale, default: 0.95 stepl1 lower boundary effect size category \"large\" HR scale = upper boundary effect size category \"medium\" HR scale, default: 0.85 b1 expected gain effect size category \"small\" b2 expected gain effect size category \"medium\" b3 expected gain effect size category \"large\" fixed choose true treatment effects fixed random, TRUE hr1 used fixed effect num_cl number clusters used parallel computing, default: 1 gamma model different populations phase II III choose gamma!=0, default: 0 skipII choose skipping phase II option, default: FASLE","code":""},{"path":"https://sterniii3.github.io/drugdevelopR/reference/optimal_bias.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Optimal phase II/III drug development planning when discounting phase II results — optimal_bias","text":"output function optimal_bias data.frame containing optimization results: Method Type adjustment: multipl. (multiplicative) add. (additive) u maximal expected utility Adj optimal adjustment parameter (lambda alphaCI according Method) HRgo optimal threshold value decision rule go phase III d2 optimal total number events phase II d3 total expected number events phase III; rounded next natural number d total expected number events program; d = d2 + d3 n2 total sample size phase II; rounded next even natural number n3 total sample size phase III; rounded next even natural number n total sample size program; n = n2 + n3 K maximal costs program pgo probability go phase III sProg probability successful program sProg1 probability successful program \"small\" treatment effect Phase III sProg2 probability successful program \"medium\" treatment effect Phase III sProg3 probability successful program \"large\" treatment effect Phase III K2 expected costs phase II K3 expected costs phase III input parameters. Taking cat(comment()) data.frame object lists used optimization sequences, start finish date optimization procedure.","code":""},{"path":"https://sterniii3.github.io/drugdevelopR/reference/optimal_bias.html","id":"drugdevelopr-functions","dir":"Reference","previous_headings":"","what":"drugdevelopR functions","title":"Optimal phase II/III drug development planning when discounting phase II results — optimal_bias","text":"drugdevelopR package provides functions optimal_tte, optimal_binary optimal_normal plan optimal phase II/III drug development programs time--event (treatment effect measured hazard ratio (HR)), binary (treatment effect measured risk ratio (RR)) normally distributed (treatment effect measured standardized difference means (Delta)) endpoint, treatment effect modelled prior. Optimal phase II/III drug development planning fixed treatment effects can done help R Shiny application basic. Extensions optimal planning programs including methods discounting phase II results (function: optimal_bias, App: bias), optimal planning programs several phase III trials (function: optimal_multitrial, App: multitrial) optimal planning programs multiple arms (function: optimal_multiarm, App: multiarm).","code":""},{"path":"https://sterniii3.github.io/drugdevelopR/reference/optimal_bias.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Optimal phase II/III drug development planning when discounting phase II results — optimal_bias","text":"IQWiG (2016). Allgemeine Methoden. Version 5.0, 10.07.2016, Technical Report. Available https://www.iqwig.de/de/methoden/methodenpapier.3020.html, assessed last 15.05.19. Preussler, S., Kirchner, M., Goette, H., Kieser, M. (2020). Optimal designs phase II/III drug development programs including methods discounting phase II results. Submitted peer-review journal. Schoenfeld, D. (1981). asymptotic properties nonparametric tests comparing survival distributions. Biometrika, 68(1), 316-319.","code":""},{"path":"https://sterniii3.github.io/drugdevelopR/reference/optimal_bias.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Optimal phase II/III drug development planning when discounting phase II results — optimal_bias","text":"","code":"res <- optimal_bias(w = 0.3,                                 # define parameters for prior   hr1 = 0.69, hr2 = 0.88, id1 = 210, id2 = 420,              # (https://web.imbi.uni-heidelberg.de/prior/)   d2min = 20, d2max = 100, stepd2 = 5,                       # define optimization set for d2   hrgomin = 0.7, hrgomax = 0.9, stephrgo = 0.05,             # define optimization set for HRgo   adj = \"both\",                                              # choose type of adjustment   lambdamin = 0.2, lambdamax = 1, steplambda = 0.05,         # define optimization set for lambda   alphaCImin = 0.025, alphaCImax = 0.5, stepalphaCI = 0.025, # define optimization set for alphaCI   alpha = 0.025, beta = 0.1, xi2 = 0.7, xi3 = 0.7,            # drug development planning parameters   c2 = 0.75, c3 = 1, c02 = 100, c03 = 150,                   # define fixed and variable costs for phase II and III   K = Inf, N = Inf, S = -Inf,                                # set maximal costs/ expected sample size for the program or minimal expected probability of a successful program   steps1 = 1,                                                # define lower boundary for \"small\"   stepm1 = 0.95,                                             # \"medium\"   stepl1 = 0.85,                                             # and \"large\" treatment effect size categories as proposed by IQWiG (2016)   b1 = 1000, b2 = 2000, b3 = 3000,                           # define expected benefit for a \"small\", \"medium\" and \"large\" treatment effect   fixed = FALSE,                                             # choose if true treatment effects are fixed or random   num_cl = 1)                                                # set number of cores used for parallelized computing (check maximum number possible with detectCores()) #> Error in qnorm(1 - alpha): object 'alpha' not found res #> Error in eval(expr, envir, enclos): object 'res' not found cat(comment(res))                                            # displays the optimization sequence, start and finish date of the optimization procedure. #> Error in comment(res): object 'res' not found"},{"path":"https://sterniii3.github.io/drugdevelopR/reference/optimal_bias_binary.html","id":null,"dir":"Reference","previous_headings":"","what":"Optimal phase II/III drug development planning when discounting phase II results with binary endpoint — optimal_bias_binary","title":"Optimal phase II/III drug development planning when discounting phase II results with binary endpoint — optimal_bias_binary","text":"drugdevelopR package enables planning phase II/III drug development programs optimal sample size allocation go/-go decision rules including methods discounting phase II results (Preussler et. al, 2020).. binary endpoints treatment effect measured risk ratio (RR).assumed true treatment effects can assumed fixed modelled prior distribution. R Shiny application prior visualizes prior distributions used package. Fast coputing enabled parallel programming.","code":""},{"path":"https://sterniii3.github.io/drugdevelopR/reference/optimal_bias_binary.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Optimal phase II/III drug development planning when discounting phase II results with binary endpoint — optimal_bias_binary","text":"","code":"optimal_bias_binary(   w,   p0,   p11,   p12,   in1,   in2,   n2min,   n2max,   stepn2,   rrgomin,   rrgomax,   steprrgo,   adj = \"both\",   lambdamin = NULL,   lambdamax = NULL,   steplambda = NULL,   alphaCImin = NULL,   alphaCImax = NULL,   stepalphaCI = NULL,   alpha,   beta,   c2,   c3,   c02,   c03,   K = Inf,   N = Inf,   S = -Inf,   steps1 = 1,   stepm1 = 0.95,   stepl1 = 0.85,   b1,   b2,   b3,   fixed = FALSE,   num_cl = 1 )"},{"path":"https://sterniii3.github.io/drugdevelopR/reference/optimal_bias_binary.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Optimal phase II/III drug development planning when discounting phase II results with binary endpoint — optimal_bias_binary","text":"w weight mixture prior distribution p0 assumed true rate control group p11 assumed true rate treatment group p12 assumed true rate treatment group in1 amount information p11 terms sample size in2 amount information p12 terms sample size n2min minimal total sample size phase II; must even number n2max maximal total sample size phase II, must even number stepn2 stepsize optimization n2; must even number rrgomin minimal threshold value go/-go decision rule rrgomax maximal threshold value go/-go decision rule steprrgo stepsize optimization RRgo lambdamin minimal adjustment parameter lambda lambdamax maximal adjustment parameter lambda steplambda stepsize adjustment parameter lambda alphaCImin minimal alphaCI alphaCImax maximal alphaCI stepalphaCI stepsize alphaCI alpha significance level beta 1-beta power calculation sample size phase III c2 variable per-patient cost phase II c3 variable per-patient cost phase III c02 fixed cost phase II c03 fixed cost phase III K constraint costs program, default: Inf, e.g. constraint N constraint total expected sample size program, default: Inf, e.g. constraint S constraint expected probability successful program, default: -Inf, e.g. constraint steps1 lower boundary effect size category \"small\" RR scale, default: 1 stepm1 lower boundary effect size category \"medium\" RR scale = upper boundary effect size category \"small\" RR scale, default: 0.95 stepl1 lower boundary effect size category \"large\" RR scale = upper boundary effect size category \"medium\" RR scale, default: 0.85 b1 expected gain effect size category \"small\" b2 expected gain effect size category \"medium\" b3 expected gain effect size category \"large\" fixed choose true treatment effects fixed random, TRUE p11 used fixed effect p1 num_cl number clusters used parallel computing, default: 1 gamma model different populations phase II III choose gamma!=0, default: 0","code":""},{"path":"https://sterniii3.github.io/drugdevelopR/reference/optimal_bias_binary.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Optimal phase II/III drug development planning when discounting phase II results with binary endpoint — optimal_bias_binary","text":"output function optimal_binary data.frame containing optimization results: Method Type adjustment: multipl. (multiplicative) add. (additive) u maximal expected utility Adj optimal adjustment parameter (lambda alphaCI according Method) RRgo optimal threshold value decision rule go phase III n2 total sample size phase II n3 total sample size phase III; rounded next even natural number n total sample size program; n = n2 + n3 K maximal costs program pgo probability go phase III sProg probability successful program sProg1 probability successful program \"small\" treatment effect Phase III sProg2 probability successful program \"medium\" treatment effect Phase III sProg3 probability successful program \"large\" treatment effect Phase III K2 expected costs phase II K3 expected costs phase III input parameters. Taking cat(comment()) data.frame object lists used optimization sequences, start finish date optimization procedure.","code":""},{"path":"https://sterniii3.github.io/drugdevelopR/reference/optimal_bias_binary.html","id":"drugdevelopr-functions","dir":"Reference","previous_headings":"","what":"drugdevelopR functions","title":"Optimal phase II/III drug development planning when discounting phase II results with binary endpoint — optimal_bias_binary","text":"drugdevelopR package provides functions optimal_tte, optimal_binary optimal_normal plan optimal phase II/III drug development programs time--event (treatment effect measured hazard ratio (HR)), binary (treatment effect measured risk ratio (RR)) normally distributed (treatment effect measured standardized difference means (Delta)) endpoint, treatment effect modelled prior. Optimal phase II/III drug development planning fixed treatment effects can done help R Shiny application basic. Extensions optimal planning programs including methods discounting phase II results (function: optimal_bias, App: bias), optimal planning programs several phase III trials (function: optimal_multitrial, App: multitrial) optimal planning programs multiple arms (function: optimal_multiarm, App: multiarm).","code":""},{"path":"https://sterniii3.github.io/drugdevelopR/reference/optimal_bias_binary.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Optimal phase II/III drug development planning when discounting phase II results with binary endpoint — optimal_bias_binary","text":"IQWiG (2016). Allgemeine Methoden. Version 5.0, 10.07.2016, Technical Report. Available https://www.iqwig.de/de/methoden/methodenpapier.3020.html, assessed last 15.05.19.","code":""},{"path":"https://sterniii3.github.io/drugdevelopR/reference/optimal_bias_binary.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Optimal phase II/III drug development planning when discounting phase II results with binary endpoint — optimal_bias_binary","text":"","code":"res <- optimal_bias_binary(w = 0.3,                           # define parameters for prior   p0 = 0.6, p11 =  0.3, p12 = 0.5, in1 = 30, in2 = 60,   # (https://web.imbi.uni-heidelberg.de/prior/)   n2min = 20, n2max = 100, stepn2 = 4,                   # define optimization set for n2   rrgomin = 0.7, rrgomax = 0.9, steprrgo = 0.05,         # define optimization set for RRgo   adj = \"both\",                                          # choose type of adjustment   alpha = 0.05, beta = 0.1,                              # drug development planning parameters   lambdamin = 0.2, lambdamax = 1, steplambda = 0.05,     # define optimization set for lambda   alphaCImin = 0.025, alphaCImax = 0.5, stepalphaCI = 0.025, # define optimization set for alphaCI   c2 = 0.75, c3 = 1, c02 = 100, c03 = 150,               # define fixed and variable costs for phase II and III,   K = Inf, N = Inf, S = -Inf,                            # set maximal costs/ expected sample size for the program or minimal expected probability of a successful program   steps1 = 1,                                            # define lower boundary for \"small\"   stepm1 = 0.95,                                         # \"medium\"   stepl1 = 0.85,                                         # and \"large\" treatment effect size categories as proposed by IQWiG (2016)   b1 = 1000, b2 = 2000, b3 = 3000,                       # define expected benefit for a \"small\", \"medium\" and \"large\" treatment effect   fixed = FALSE,                                         # choose if true treatment effects are fixed or random   num_cl = 1)                                            # set number of cores used for parallelized computing (check maximum number possible with detectCores()) #> Error in qnorm(1 - alpha): object 'alpha' not found res #> Error in eval(expr, envir, enclos): object 'res' not found cat(comment(res))                                        # displays the optimization sequence, start and finish date of the optimization procedure. #> Error in comment(res): object 'res' not found"},{"path":"https://sterniii3.github.io/drugdevelopR/reference/optimal_bias_normal.html","id":null,"dir":"Reference","previous_headings":"","what":"Optimal phase II/III drug development planning with normally distributed endpoint — optimal_bias_normal","title":"Optimal phase II/III drug development planning with normally distributed endpoint — optimal_bias_normal","text":"drugdevelopR package enables planning phase II/III drug development programs optimal sample size allocation go/-go decision rules including methods discounting phase II results (Preussler et. al, 2020). normally distributed endpoints treatment effect measured standardized difference means (Delta). assumed true treatment effects can assumed fixed modelled prior distribution. R Shiny application prior visualizes prior distributions used package. Fast coputing enabled parallel programming.","code":""},{"path":"https://sterniii3.github.io/drugdevelopR/reference/optimal_bias_normal.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Optimal phase II/III drug development planning with normally distributed endpoint — optimal_bias_normal","text":"","code":"optimal_bias_normal(   w,   Delta1,   Delta2,   in1,   in2,   a,   b,   n2min,   n2max,   stepn2,   kappamin,   kappamax,   stepkappa,   adj = \"both\",   lambdamin = NULL,   lambdamax = NULL,   steplambda = NULL,   alphaCImin = NULL,   alphaCImax = NULL,   stepalphaCI = NULL,   alpha,   beta,   c2,   c3,   c02,   c03,   K = Inf,   N = Inf,   S = -Inf,   steps1 = 0,   stepm1 = 0.5,   stepl1 = 0.8,   b1,   b2,   b3,   fixed = FALSE,   num_cl = 1 )"},{"path":"https://sterniii3.github.io/drugdevelopR/reference/optimal_bias_normal.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Optimal phase II/III drug development planning with normally distributed endpoint — optimal_bias_normal","text":"w weight mixture prior distribution Delta1 assumed true treatment effect standardized difference means Delta2 assumed true treatment effect standardized difference means in1 amount information Delta1 terms sample size in2 amount information Delta2 terms sample size lower boundary truncation b upper boundary truncation n2min minimal total sample size phase II; must even number n2max maximal total sample size phase II, must even number stepn2 stepsize optimization n2; must even number kappamin minimal threshold value go/-go decision rule kappamax maximal threshold value go/-go decision rule stepkappa stepsize optimization kappa adj choose type adjustment: \"multiplicative\", \"additive\", \"\" (\"\") lambdamin minimal adjustment parameter lambda lambdamax maximal adjustment parameter lambda steplambda stepsize adjustment parameter lambda alphaCImin minimal alphaCI alphaCImax maximal alphaCI stepalphaCI stepsize alphaCI alpha significance level beta 1-beta power calculation sample size phase III c2 variable per-patient cost phase II c3 variable per-patient cost phase III c02 fixed cost phase II c03 fixed cost phase III K constraint costs program, default: Inf, e.g. constraint N constraint total expected sample size program, default: Inf, e.g. constraint S constraint expected probability successful program, default: -Inf, e.g. constraint steps1 lower boundary effect size category \"small\", default: 0 stepm1 lower boundary effect size category \"medium\" = upper boundary effect size category \"small\" default: 0.5 stepl1 lower boundary effect size category \"large\" = upper boundary effect size category \"medium\", default: 0.8 b1 expected gain effect size category \"small\" b2 expected gain effect size category \"medium\" b3 expected gain effect size category \"large\" fixed choose true treatment effects fixed random, TRUE hr1 used fixed effect num_cl number clusters used parallel computing, default: 1","code":""},{"path":"https://sterniii3.github.io/drugdevelopR/reference/optimal_bias_normal.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Optimal phase II/III drug development planning with normally distributed endpoint — optimal_bias_normal","text":"output function optimal_bias_normal data.frame containing optimization results: Method Type adjustment: multipl. (multiplicative) add. (additive) u maximal expected utility Adj optimal adjustment parameter (lambda alphaCI according Method) kappa optimal threshold value decision rule go phase III n2 total sample size phase II n3 total sample size phase III; rounded next even natural number n total sample size program; n = n2 + n3 K maximal costs program pgo probability go phase III sProg probability successful program sProg1 probability successful program \"small\" treatment effect Phase III sProg2 probability successful program \"medium\" treatment effect Phase III sProg3 probability successful program \"large\" treatment effect Phase III K2 expected costs phase II K3 expected costs phase III input parameters. Taking cat(comment()) data.frame object lists used optimization sequences, start finish date optimization procedure.","code":""},{"path":"https://sterniii3.github.io/drugdevelopR/reference/optimal_bias_normal.html","id":"drugdevelopr-functions","dir":"Reference","previous_headings":"","what":"drugdevelopR functions","title":"Optimal phase II/III drug development planning with normally distributed endpoint — optimal_bias_normal","text":"drugdevelopR package provides functions optimal_tte, optimal_binary optimal_normal plan optimal phase II/III drug development programs time--event (treatment effect measured hazard ratio (HR)), binary (treatment effect measured risk ratio (RR)) normally distributed (treatment effect measured standardized difference means (Delta)) endpoint, treatment effect assumed fixed modelled prior. Optimal phase II/III drug development planning fixed treatment effects can also done help R Shiny application basic. Extensions optimal planning programs including methods discounting phase II results (function: optimal_bias, App: bias), optimal planning programs several phase III trials (function: optimal_multitrial, App: multitrial) optimal planning programs multiple arms (function: optimal_multiarm, App: multiarm).","code":""},{"path":"https://sterniii3.github.io/drugdevelopR/reference/optimal_bias_normal.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Optimal phase II/III drug development planning with normally distributed endpoint — optimal_bias_normal","text":"Cohen, J. (1988). Statistical power analysis behavioral sciences.","code":""},{"path":"https://sterniii3.github.io/drugdevelopR/reference/optimal_bias_normal.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Optimal phase II/III drug development planning with normally distributed endpoint — optimal_bias_normal","text":"","code":"res <- optimal_bias_normal(w=0.3,                                 # define parameters for prior   Delta1 = 0.375, Delta2 = 0.625, in1=300, in2=600,          # (https://web.imbi.uni-heidelberg.de/prior/)   a = 0.25, b = 0.75,   n2min = 20, n2max = 100, stepn2 = 4,                       # define optimization set for n2   kappamin = 0.02, kappamax = 0.2, stepkappa = 0.02,         # define optimization set for kappa   adj = \"both\",                                              # choose type of adjustment   lambdamin = 0.2, lambdamax = 1, steplambda = 0.05,         # define optimization set for lambda   alphaCImin = 0.025, alphaCImax = 0.5, stepalphaCI = 0.025, # define optimization set for alphaCI   alpha = 0.05, beta = 0.1,                                  # drug development planning parameters   c2 = 0.675, c3 = 0.72, c02 = 15, c03 = 20,                 # define fixed and variable costs for phase II and III   K = Inf, N = Inf, S = -Inf,                                # set maximal costs/ expected sample size for the program or minimal expected probability of a successful program   steps1 = 0,                                                # define lower boundary for \"small\"   stepm1 = 0.5,                                              # \"medium\"   stepl1 = 0.8,                                              # and \"large\" treatment effect size categories as proposed by e.g. Cohen (1988)   b1 = 3000, b2 = 8000, b3 = 10000,                          # define expected benefit for a \"small\", \"medium\" and \"large\" treatment effect   fixed = FALSE,                                             # choose if true treatment effects are fixed or random   num_cl = 1)                                                # set number of cores used for parallelized computing (check maximum number possible with detectCores()) #> Error in qnorm(1 - alpha): object 'alpha' not found res #> Error in eval(expr, envir, enclos): object 'res' not found cat(comment(res))                                        # displays the optimization sequence, start and finish date of the optimization procedure. #> Error in comment(res): object 'res' not found"},{"path":"https://sterniii3.github.io/drugdevelopR/reference/optimal_binary.html","id":null,"dir":"Reference","previous_headings":"","what":"Optimal phase II/III drug development planning with binary endpoint — optimal_binary","title":"Optimal phase II/III drug development planning with binary endpoint — optimal_binary","text":"drugdevelopR package enables planning phase II/III drug development programs optimal sample size allocation go/-go decision rules. binary endpoints treatment effect measured risk ratio (RR).assumed true treatment effects can assumed fixed modelled prior distribution. R Shiny application prior visualizes prior distributions used package. Fast coputing enabled parallel programming.","code":""},{"path":"https://sterniii3.github.io/drugdevelopR/reference/optimal_binary.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Optimal phase II/III drug development planning with binary endpoint — optimal_binary","text":"","code":"optimal_binary(   w,   p0,   p11,   p12,   in1,   in2,   n2min,   n2max,   stepn2,   rrgomin,   rrgomax,   steprrgo,   alpha,   beta,   c2,   c3,   c02,   c03,   K = Inf,   N = Inf,   S = -Inf,   steps1 = 1,   stepm1 = 0.95,   stepl1 = 0.85,   b1,   b2,   b3,   gamma = 0,   fixed = FALSE,   skipII = FALSE,   num_cl = 1 )"},{"path":"https://sterniii3.github.io/drugdevelopR/reference/optimal_binary.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Optimal phase II/III drug development planning with binary endpoint — optimal_binary","text":"w weight mixture prior distribution p0 assumed true rate control group p11 assumed true rate treatment group p12 assumed true rate treatment group in1 amount information p11 terms sample size in2 amount information p12 terms sample size n2min minimal total sample size phase II; must even number n2max maximal total sample size phase II, must even number stepn2 stepsize optimization n2; must even number rrgomin minimal threshold value go/-go decision rule rrgomax maximal threshold value go/-go decision rule steprrgo stepsize optimization RRgo alpha significance level beta 1-beta power calculation sample size phase III c2 variable per-patient cost phase II c3 variable per-patient cost phase III c02 fixed cost phase II c03 fixed cost phase III K constraint costs program, default: Inf, e.g. constraint N constraint total expected sample size program, default: Inf, e.g. constraint S constraint expected probability successful program, default: -Inf, e.g. constraint steps1 lower boundary effect size category \"small\" RR scale, default: 1 stepm1 lower boundary effect size category \"medium\" RR scale = upper boundary effect size category \"small\" RR scale, default: 0.95 stepl1 lower boundary effect size category \"large\" RR scale = upper boundary effect size category \"medium\" RR scale, default: 0.85 b1 expected gain effect size category \"small\" b2 expected gain effect size category \"medium\" b3 expected gain effect size category \"large\" gamma model different populations phase II III choose gamma!=0, default: 0 fixed choose true treatment effects fixed random, TRUE p11 used fixed effect p1 num_cl number clusters used parallel computing, default: 1","code":""},{"path":"https://sterniii3.github.io/drugdevelopR/reference/optimal_binary.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Optimal phase II/III drug development planning with binary endpoint — optimal_binary","text":"output function optimal_binary data.frame containing optimization results: u maximal expected utility RRgo optimal threshold value decision rule go phase III n2 total sample size phase II n3 total sample size phase III; rounded next even natural number n total sample size program; n = n2 + n3 K maximal costs program pgo probability go phase III sProg probability successful program sProg1 probability successful program \"small\" treatment effect Phase III sProg2 probability successful program \"medium\" treatment effect Phase III sProg3 probability successful program \"large\" treatment effect Phase III K2 expected costs phase II K3 expected costs phase III input parameters. Taking cat(comment()) data.frame object lists used optimization sequences, start finish date optimization procedure.","code":""},{"path":"https://sterniii3.github.io/drugdevelopR/reference/optimal_binary.html","id":"drugdevelopr-functions","dir":"Reference","previous_headings":"","what":"drugdevelopR functions","title":"Optimal phase II/III drug development planning with binary endpoint — optimal_binary","text":"drugdevelopR package provides functions optimal_tte, optimal_binary optimal_normal plan optimal phase II/III drug development programs time--event (treatment effect measured hazard ratio (HR)), binary (treatment effect measured risk ratio (RR)) normally distributed (treatment effect measured standardized difference means (Delta)) endpoint, treatment effect modelled prior. Optimal phase II/III drug development planning fixed treatment effects can done help R Shiny application basic. Extensions optimal planning programs including methods discounting phase II results (function: optimal_bias, App: bias), optimal planning programs several phase III trials (function: optimal_multitrial, App: multitrial) optimal planning programs multiple arms (function: optimal_multiarm, App: multiarm).","code":""},{"path":"https://sterniii3.github.io/drugdevelopR/reference/optimal_binary.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Optimal phase II/III drug development planning with binary endpoint — optimal_binary","text":"IQWiG (2016). Allgemeine Methoden. Version 5.0, 10.07.2016, Technical Report. Available https://www.iqwig.de/de/methoden/methodenpapier.3020.html, assessed last 15.05.19.","code":""},{"path":"https://sterniii3.github.io/drugdevelopR/reference/optimal_binary.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Optimal phase II/III drug development planning with binary endpoint — optimal_binary","text":"","code":"res <- optimal_binary(w = 0.3,                           # define parameters for prior   p0 = 0.6, p11 =  0.3, p12 = 0.5, in1 = 30, in2 = 60,   # (https://web.imbi.uni-heidelberg.de/prior/)   n2min = 20, n2max = 100, stepn2 = 4,                   # define optimization set for n2   rrgomin = 0.7, rrgomax = 0.9, steprrgo = 0.05,         # define optimization set for RRgo   alpha = 0.05, beta = 0.1,                              # drug development planning parameters   c2 = 0.75, c3 = 1, c02 = 100, c03 = 150,               # define fixed and variable costs for phase II and III,   K = Inf, N = Inf, S = -Inf,                            # set maximal costs/ expected sample size for the program or minimal expected probability of a successful program   steps1 = 1,                                            # define lower boundary for \"small\"   stepm1 = 0.95,                                         # \"medium\"   stepl1 = 0.85,                                         # and \"large\" treatment effect size categories as proposed by IQWiG (2016)   b1 = 1000, b2 = 2000, b3 = 3000,                       # define expected benefit for a \"small\", \"medium\" and \"large\" treatment effect   gamma = 0,                                             # assume different/same population structures in phase II and III   fixed = FALSE,                                         # choose if true treatment effects are fixed or random   skipII = FALSE,                                        # choose if skipping phase II would be an option   num_cl = 1)                                            # set number of cores used for parallelized computing (check maximum number possible with detectCores()) #> Optimization progress: #>  #>    |                                                                               |                                                                      |   0% #> Error in c(\"pmvnorm\", \"dmvnorm\", \"prior_binary\", \"Epgo_binary\", \"En3_binary\",     \"EPsProg_binary\", \"t1\", \"t2\", \"t3\", \"alpha\", \"beta\", \"steps1\",     \"stepm1\", \"stepl1\", \"K\", \"N\", \"S\", \"gamma\", \"fixed\", \"c2\",     \"c3\", \"c02\", \"c03\", \"b1\", \"b2\", \"b3\", \"w\", \"RRgo\", \"p0\",     \"p11\", \"p12\", \"in1\", \"in2\"): unused arguments (\"prior_binary\", \"Epgo_binary\", \"En3_binary\", \"EPsProg_binary\", \"t1\", \"t2\", \"t3\", \"alpha\", \"beta\", \"steps1\", \"stepm1\", \"stepl1\", \"K\", \"N\", \"S\", \"gamma\", \"fixed\", \"c2\", \"c3\", \"c02\", \"c03\", \"b1\", \"b2\", \"b3\", \"w\", \"RRgo\", \"p0\", \"p11\", \"p12\", \"in1\", \"in2\") res #> Error in eval(expr, envir, enclos): object 'res' not found cat(comment(res))                                        # displays the optimization sequence, start and finish date of the optimization procedure. #> Error in comment(res): object 'res' not found"},{"path":"https://sterniii3.github.io/drugdevelopR/reference/optimal_multiarm.html","id":null,"dir":"Reference","previous_headings":"","what":"Optimal phase II/III drug development planning for multi-arm programs — optimal_multiarm","title":"Optimal phase II/III drug development planning for multi-arm programs — optimal_multiarm","text":"function optimal_multiarm drugdevelopR package enables planning multi-arm phase II/III drug development programs optimal sample size allocation go/-go decision rules (Preussler et. al, 2019). assumed true treatment effects assumed fixed (planning also possible via user friendly R Shiny App: multiarm). Fast coputing enabled parallel programming.","code":""},{"path":"https://sterniii3.github.io/drugdevelopR/reference/optimal_multiarm.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Optimal phase II/III drug development planning for multi-arm programs — optimal_multiarm","text":"","code":"optimal_multiarm(   hr1,   hr2,   ec,   n2min,   n2max,   stepn2,   hrgomin,   hrgomax,   stephrgo,   alpha,   beta,   c2,   c3,   c02,   c03,   K = Inf,   N = Inf,   S = -Inf,   steps1 = 1,   stepm1 = 0.95,   stepl1 = 0.85,   b1,   b2,   b3,   strategy,   num_cl = 1 )"},{"path":"https://sterniii3.github.io/drugdevelopR/reference/optimal_multiarm.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Optimal phase II/III drug development planning for multi-arm programs — optimal_multiarm","text":"hr1 assumed true treatment effect HR scale treatment 1 hr2 assumed true treatment effect HR scale treatment 2 ec control arm event rate phase II III n2min minimal total sample size phase II, must divisible 3 n2max maximal total sample size phase II, must divisible 3 stepn2 stepsize optimization n2, must divisible 3 hrgomin minimal threshold value go/-go decision rule hrgomax maximal threshold value go/-go decision rule stephrgo stepsize optimization HRgo alpha one-sided significance level/ family wise error rate beta 1-beta (-pair) power calculation number events phase III c2 variable per-patient cost phase II c3 variable per-patient cost phase III c02 fixed cost phase II c03 fixed cost phase III K constraint costs program, default: Inf, e.g. constraint N constraint total expected sample size program, default: Inf, e.g. constraint S constraint expected probability successful program, default: -Inf, e.g. constraint steps1 lower boundary effect size category \"small\" HR scale, default: 1 stepm1 lower boundary effect size category \"medium\" HR scale = upper boundary effect size category \"small\" HR scale, default: 0.95 stepl1 lower boundary effect size category \"large\" HR scale = upper boundary effect size category \"medium\" HR scale, default: 0.85 b1 expected gain effect size category \"small\" b2 expected gain effect size category \"medium\" b3 expected gain effect size category \"large\" strategy choose Strategy: 1 (\"best promising\"), 2 (\"promising\") 3 () num_cl number clusters used parallel computing, default: 1","code":""},{"path":"https://sterniii3.github.io/drugdevelopR/reference/optimal_multiarm.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Optimal phase II/III drug development planning for multi-arm programs — optimal_multiarm","text":"output function optimal_multiarm data.frame containing optimization results: Strategy Strategy, 1: \"best promising\" 2: \"promising\" u maximal expected utility HRgo optimal threshold value decision rule go phase III n2 optimal total sample size phase II n3 total expected sample size phase III; rounded next natural number n total sample size program; n = n2 + n3 K maximal costs program pgo probability go phase III sProg probability successful program sProg1 probability successful program \"small\" treatment effect Phase III sProg2 probability successful program \"medium\" treatment effect Phase III sProg3 probability successful program \"large\" treatment effect Phase III K2 expected costs phase II K3 expected costs phase III input parameters. res Taking cat(comment()) data.frame object lists used optimization sequences, start finish date optimization procedure.","code":""},{"path":"https://sterniii3.github.io/drugdevelopR/reference/optimal_multiarm.html","id":"drugdevelopr-functions","dir":"Reference","previous_headings":"","what":"drugdevelopR functions","title":"Optimal phase II/III drug development planning for multi-arm programs — optimal_multiarm","text":"drugdevelopR package provides functions optimal_tte, optimal_binary optimal_normal plan optimal phase II/III drug development programs time--event (treatment effect measured hazard ratio (HR)), binary (treatment effect measured risk ratio (RR)) normally distributed (treatment effect measured standardized difference means (Delta)) endpoint, treatment effect modelled prior. Optimal phase II/III drug development planning fixed treatment effects can done help R Shiny application basic. Extensions optimal planning programs including methods discounting phase II results (function: optimal_bias, App: bias), optimal planning programs several phase III trials (function: optimal_multitrial, App: multitrial) optimal planning programs multiple arms (function: optimal_multiarm, App: multiarm).","code":""},{"path":"https://sterniii3.github.io/drugdevelopR/reference/optimal_multiarm.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Optimal phase II/III drug development planning for multi-arm programs — optimal_multiarm","text":"Preussler, S., Kirchner, M., Goette, H., Kieser, M. (2019). Optimal Designs Multi-Arm Phase II/III Drug Development Programs. Submitted peer-review journal. IQWiG (2016). Allgemeine Methoden. Version 5.0, 10.07.2016, Technical Report. Available https://www.iqwig.de/de/methoden/methodenpapier.3020.html, assessed last 15.05.19.","code":""},{"path":"https://sterniii3.github.io/drugdevelopR/reference/optimal_multiarm.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Optimal phase II/III drug development planning for multi-arm programs — optimal_multiarm","text":"","code":"res <- optimal_multiarm(hr1 = 0.75, hr2 = 0.80, ec = 0.6,# define assumed true HRs and control arm event rate   n2min = 30, n2max = 90, stepn2 = 6,                    # define optimization set for n2   hrgomin = 0.7, hrgomax = 0.9, stephrgo = 0.05,         # define optimization set for HRgo   alpha = 0.05, beta = 0.1,                              # drug development planning parameters   c2 = 0.75, c3 = 1, c02 = 100, c03 = 150,               # define fixed and variable costs for phase II and III   K = Inf, N = Inf, S = -Inf,                            # set maximal costs/ expected sample size for the program or minimal expected probability of a successful program   steps1 = 1,                                            # define lower boundary for \"small\"   stepm1 = 0.95,                                         # \"medium\"   stepl1 = 0.85,                                         # and \"large\" treatment effect size categories as proposed by IQWiG (2016)   b1 = 1000, b2 = 2000, b3 = 3000,                       # define expected benefit for a \"small\", \"medium\" and \"large\" treatment effect   strategy = 1,                                          # choose strategy: 1, 2 or 3   num_cl = 1)                                            # set number of cores used for parallelized computing (check maximum number possible with detectCores()) #> Optimization progress: #>  #>    |                                                                               |                                                                      |   0% #> Error in c(\"pmvnorm\", \"dmvnorm\", \"qmvnorm\", \"adaptIntegrate\", \"pgo\", \"ss\",     \"Ess\", \"PsProg\", \"alpha\", \"beta\", \"steps1\", \"steps2\", \"stepm1\",     \"stepm2\", \"stepl1\", \"stepl2\", \"K\", \"N\", \"S\", \"strategy\",     \"c2\", \"c3\", \"c02\", \"c03\", \"b1\", \"b2\", \"b3\", \"HRgo\", \"hr1\",     \"hr2\", \"ec\"): unused arguments (\"qmvnorm\", \"adaptIntegrate\", \"pgo\", \"ss\", \"Ess\", \"PsProg\", \"alpha\", \"beta\", \"steps1\", \"steps2\", \"stepm1\", \"stepm2\", \"stepl1\", \"stepl2\", \"K\", \"N\", \"S\", \"strategy\", \"c2\", \"c3\", \"c02\", \"c03\", \"b1\", \"b2\", \"b3\", \"HRgo\", \"hr1\", \"hr2\", \"ec\") res #> Error in eval(expr, envir, enclos): object 'res' not found cat(comment(res))                                        # displays the optimization sequence, start and finish date of the optimization procedure. #> Error in comment(res): object 'res' not found"},{"path":"https://sterniii3.github.io/drugdevelopR/reference/optimal_multiarm_binary.html","id":null,"dir":"Reference","previous_headings":"","what":"Optimal phase II/III drug development planning with binary endpoint — optimal_multiarm_binary","title":"Optimal phase II/III drug development planning with binary endpoint — optimal_multiarm_binary","text":"drugdevelopR package enables planning phase II/III drug development programs optimal sample size allocation go/-go decision rules. binary endpoints treatment effect measured risk ratio (RR).assumed true treatment effects can assumed fixed modelled prior distribution. R Shiny application prior visualizes prior distributions used package. Fast coputing enabled parallel programming.","code":""},{"path":"https://sterniii3.github.io/drugdevelopR/reference/optimal_multiarm_binary.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Optimal phase II/III drug development planning with binary endpoint — optimal_multiarm_binary","text":"","code":"optimal_multiarm_binary(   p0,   p11,   p12,   n2min,   n2max,   stepn2,   rrgomin,   rrgomax,   steprrgo,   alpha,   beta,   c2,   c3,   c02,   c03,   K = Inf,   N = Inf,   S = -Inf,   steps1 = 1,   stepm1 = 0.95,   stepl1 = 0.85,   b1,   b2,   b3,   strategy,   num_cl = 1 )"},{"path":"https://sterniii3.github.io/drugdevelopR/reference/optimal_multiarm_binary.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Optimal phase II/III drug development planning with binary endpoint — optimal_multiarm_binary","text":"p0 assumed true rate control group p11 assumed true rate treatment group p12 assumed true rate treatment group n2min minimal total sample size phase II; must even number n2max maximal total sample size phase II, must even number stepn2 stepsize optimization n2; must even number rrgomin minimal threshold value go/-go decision rule rrgomax maximal threshold value go/-go decision rule steprrgo stepsize optimization RRgo alpha significance level beta 1-beta power calculation sample size phase III c2 variable per-patient cost phase II c3 variable per-patient cost phase III c02 fixed cost phase II c03 fixed cost phase III K constraint costs program, default: Inf, e.g. constraint N constraint total expected sample size program, default: Inf, e.g. constraint S constraint expected probability successful program, default: -Inf, e.g. constraint steps1 lower boundary effect size category \"small\" RR scale, default: 1 stepm1 lower boundary effect size category \"medium\" RR scale = upper boundary effect size category \"small\" RR scale, default: 0.95 stepl1 lower boundary effect size category \"large\" RR scale = upper boundary effect size category \"medium\" RR scale, default: 0.85 b1 expected gain effect size category \"small\" b2 expected gain effect size category \"medium\" b3 expected gain effect size category \"large\" strategy choose Strategy: 1 (\"best promising\"), 2 (\"promising\") 3 () num_cl number clusters used parallel computing, default: 1","code":""},{"path":"https://sterniii3.github.io/drugdevelopR/reference/optimal_multiarm_binary.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Optimal phase II/III drug development planning with binary endpoint — optimal_multiarm_binary","text":"output function optimal_binary data.frame containing optimization results: u maximal expected utility RRgo optimal threshold value decision rule go phase III n2 total sample size phase II n3 total sample size phase III; rounded next even natural number n total sample size program; n = n2 + n3 K maximal costs program pgo probability go phase III sProg probability successful program sProg1 probability successful program \"small\" treatment effect Phase III sProg2 probability successful program \"medium\" treatment effect Phase III sProg3 probability successful program \"large\" treatment effect Phase III K2 expected costs phase II K3 expected costs phase III input parameters. Taking cat(comment()) data.frame object lists used optimization sequences, start finish date optimization procedure.","code":""},{"path":"https://sterniii3.github.io/drugdevelopR/reference/optimal_multiarm_binary.html","id":"drugdevelopr-functions","dir":"Reference","previous_headings":"","what":"drugdevelopR functions","title":"Optimal phase II/III drug development planning with binary endpoint — optimal_multiarm_binary","text":"drugdevelopR package provides functions optimal_tte, optimal_binary optimal_normal plan optimal phase II/III drug development programs time--event (treatment effect measured hazard ratio (HR)), binary (treatment effect measured risk ratio (RR)) normally distributed (treatment effect measured standardized difference means (Delta)) endpoint, treatment effect modelled prior. Optimal phase II/III drug development planning fixed treatment effects can done help R Shiny application basic. Extensions optimal planning programs including methods discounting phase II results (function: optimal_bias, App: bias), optimal planning programs several phase III trials (function: optimal_multitrial, App: multitrial) optimal planning programs multiple arms (function: optimal_multiarm, App: multiarm).","code":""},{"path":"https://sterniii3.github.io/drugdevelopR/reference/optimal_multiarm_binary.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Optimal phase II/III drug development planning with binary endpoint — optimal_multiarm_binary","text":"IQWiG (2016). Allgemeine Methoden. Version 5.0, 10.07.2016, Technical Report. Available https://www.iqwig.de/de/methoden/methodenpapier.3020.html, assessed last 15.05.19.","code":""},{"path":"https://sterniii3.github.io/drugdevelopR/reference/optimal_multiarm_binary.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Optimal phase II/III drug development planning with binary endpoint — optimal_multiarm_binary","text":"","code":"res <- optimal_multiarm_binary( p0 = 0.6, p11 =  0.3, p12 = 0.5,    n2min = 20, n2max = 100, stepn2 = 4,                   # define optimization set for n2   rrgomin = 0.7, rrgomax = 0.9, steprrgo = 0.05,         # define optimization set for RRgo   alpha = 0.05, beta = 0.1,                              # drug development planning parameters   c2 = 0.75, c3 = 1, c02 = 100, c03 = 150,               # define fixed and variable costs for phase II and III,   K = Inf, N = Inf, S = -Inf,                            # set maximal costs/ expected sample size for the program or minimal expected probability of a successful program   steps1 = 1,                                            # define lower boundary for \"small\"   stepm1 = 0.95,                                         # \"medium\"   stepl1 = 0.85,                                         # and \"large\" treatment effect size categories as proposed by IQWiG (2016)   b1 = 1000, b2 = 2000, b3 = 3000,                       # define expected benefit for a \"small\", \"medium\" and \"large\" treatment effect   strategy = 1, num_cl = 1)                              # set number of cores used for parallelized computing (check maximum number possible with detectCores()) #> Optimization progress: #>  #>    |                                                                               |                                                                      |   0% #> Error in c(\"pmvnorm\", \"dmvnorm\", \"qmvnorm\", \"adaptIntegrate\", \"pgo_binary\",     \"ss_binary\", \"Ess_binary\", \"PsProg_binary\", \"alpha\", \"beta\",     \"steps1\", \"steps2\", \"stepm1\", \"stepm2\", \"stepl1\", \"stepl2\",     \"K\", \"N\", \"S\", \"strategy\", \"c2\", \"c3\", \"c02\", \"c03\", \"b1\",     \"b2\", \"b3\", \"RRgo\", \"p0\", \"p11\", \"p12\"): unused arguments (\"qmvnorm\", \"adaptIntegrate\", \"pgo_binary\", \"ss_binary\", \"Ess_binary\", \"PsProg_binary\", \"alpha\", \"beta\", \"steps1\", \"steps2\", \"stepm1\", \"stepm2\", \"stepl1\", \"stepl2\", \"K\", \"N\", \"S\", \"strategy\", \"c2\", \"c3\", \"c02\", \"c03\", \"b1\", \"b2\", \"b3\", \"RRgo\", \"p0\", \"p11\", \"p12\") res #> Error in eval(expr, envir, enclos): object 'res' not found cat(comment(res))                                        # displays the optimization sequence, start and finish date of the optimization procedure. #> Error in comment(res): object 'res' not found"},{"path":"https://sterniii3.github.io/drugdevelopR/reference/optimal_multiarm_normal.html","id":null,"dir":"Reference","previous_headings":"","what":"Optimal phase II/III drug development planning with normally distributed endpoint — optimal_multiarm_normal","title":"Optimal phase II/III drug development planning with normally distributed endpoint — optimal_multiarm_normal","text":"drugdevelopR package enables planning phase II/III drug development programs optimal sample size allocation go/-go decision rules. normally distributed endpoints treatment effect measured standardized difference means (Delta). assumed true treatment effects can assumed fixed modelled prior distribution. R Shiny application prior visualizes prior distributions used package. Fast coputing enabled parallel programming.","code":""},{"path":"https://sterniii3.github.io/drugdevelopR/reference/optimal_multiarm_normal.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Optimal phase II/III drug development planning with normally distributed endpoint — optimal_multiarm_normal","text":"","code":"optimal_multiarm_normal(   Delta1,   Delta2,   n2min,   n2max,   stepn2,   kappamin,   kappamax,   stepkappa,   alpha,   beta,   c2,   c3,   c02,   c03,   K = Inf,   N = Inf,   S = -Inf,   steps1 = 0,   stepm1 = 0.5,   stepl1 = 0.8,   b1,   b2,   b3,   strategy,   num_cl = 1 )"},{"path":"https://sterniii3.github.io/drugdevelopR/reference/optimal_multiarm_normal.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Optimal phase II/III drug development planning with normally distributed endpoint — optimal_multiarm_normal","text":"Delta1 assumed true treatment effect standardized difference means Delta2 assumed true treatment effect standardized difference means n2min minimal total sample size phase II; must even number n2max maximal total sample size phase II, must even number stepn2 stepsize optimization n2; must even number kappamin minimal threshold value go/-go decision rule kappamax maximal threshold value go/-go decision rule stepkappa stepsize optimization kappa alpha significance level beta 1-beta power calculation sample size phase III c2 variable per-patient cost phase II c3 variable per-patient cost phase III c02 fixed cost phase II c03 fixed cost phase III K constraint costs program, default: Inf, e.g. constraint N constraint total expected sample size program, default: Inf, e.g. constraint S constraint expected probability successful program, default: -Inf, e.g. constraint steps1 lower boundary effect size category \"small\", default: 0 stepm1 lower boundary effect size category \"medium\" = upper boundary effect size category \"small\" default: 0.5 stepl1 lower boundary effect size category \"large\" = upper boundary effect size category \"medium\", default: 0.8 b1 expected gain effect size category \"small\" b2 expected gain effect size category \"medium\" b3 expected gain effect size category \"large\" num_cl number clusters used parallel computing, default: 1","code":""},{"path":"https://sterniii3.github.io/drugdevelopR/reference/optimal_multiarm_normal.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Optimal phase II/III drug development planning with normally distributed endpoint — optimal_multiarm_normal","text":"output function optimal_normal data.frame containing optimization results: u maximal expected utility kappa optimal threshold value decision rule go phase III n2 total sample size phase II n3 total sample size phase III; rounded next even natural number n total sample size program; n = n2 + n3 K maximal costs program pgo probability go phase III sProg probability successful program sProg1 probability successful program \"small\" treatment effect Phase III sProg2 probability successful program \"medium\" treatment effect Phase III sProg3 probability successful program \"large\" treatment effect Phase III K2 expected costs phase II K3 expected costs phase III input parameters. Taking cat(comment()) data.frame object lists used optimization sequences, start finish date optimization procedure.","code":""},{"path":"https://sterniii3.github.io/drugdevelopR/reference/optimal_multiarm_normal.html","id":"drugdevelopr-functions","dir":"Reference","previous_headings":"","what":"drugdevelopR functions","title":"Optimal phase II/III drug development planning with normally distributed endpoint — optimal_multiarm_normal","text":"drugdevelopR package provides functions optimal_tte, optimal_binary optimal_normal plan optimal phase II/III drug development programs time--event (treatment effect measured hazard ratio (HR)), binary (treatment effect measured risk ratio (RR)) normally distributed (treatment effect measured standardized difference means (Delta)) endpoint, treatment effect assumed fixed modelled prior. Optimal phase II/III drug development planning fixed treatment effects can also done help R Shiny application basic. Extensions optimal planning programs including methods discounting phase II results (function: optimal_bias, App: bias), optimal planning programs several phase III trials (function: optimal_multitrial, App: multitrial) optimal planning programs multiple arms (function: optimal_multiarm, App: multiarm).","code":""},{"path":"https://sterniii3.github.io/drugdevelopR/reference/optimal_multiarm_normal.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Optimal phase II/III drug development planning with normally distributed endpoint — optimal_multiarm_normal","text":"Cohen, J. (1988). Statistical power analysis behavioral sciences.","code":""},{"path":"https://sterniii3.github.io/drugdevelopR/reference/optimal_multiarm_normal.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Optimal phase II/III drug development planning with normally distributed endpoint — optimal_multiarm_normal","text":"","code":"res <- optimal_normal(Delta1 = 0.375, Delta2 = 0.625,        n2min = 20, n2max = 100, stepn2 = 4,                   # define optimization set for n2   kappamin = 0.02, kappamax = 0.2, stepkappa = 0.02,     # define optimization set for kappa   alpha = 0.05, beta = 0.1,                              # drug development planning parameters   c2 = 0.675, c3 = 0.72, c02 = 15, c03 = 20,             # define fixed and variable costs for phase II and III   K = Inf, N = Inf, S = -Inf,                            # set maximal costs/ expected sample size for the program or minimal expected probability of a successful program   steps1 = 0,                                            # define lower boundary for \"small\"   stepm1 = 0.5,                                          # \"medium\"   stepl1 = 0.8,                                          # and \"large\" treatment effect size categories as proposed by e.g. Cohen (1988)   b1 = 3000, b2 = 8000, b3 = 10000,                      # define expected benefit for a \"small\", \"medium\" and \"large\" treatment effect   num_cl = 1)                                            # set number of cores used for parallelized computing (check maximum number possible with detectCores()) #> Optimization progress: #>  #>    |                                                                               |                                                                      |   0% #> Error in c(\"pmvnorm\", \"dmvnorm\", \"dtnorm\", \"prior_normal\", \"Epgo_normal\",     \"En3_normal\", \"EPsProg_normal\", \"alpha\", \"beta\", \"steps1\",     \"stepm1\", \"stepl1\", \"K\", \"N\", \"S\", \"gamma\", \"fixed\", \"c2\",     \"c3\", \"c02\", \"c03\", \"b1\", \"b2\", \"b3\", \"w\", \"kappa\", \"Delta1\",     \"Delta2\", \"in1\", \"in2\", \"a\", \"b\"): unused arguments (\"dtnorm\", \"prior_normal\", \"Epgo_normal\", \"En3_normal\", \"EPsProg_normal\", \"alpha\", \"beta\", \"steps1\", \"stepm1\", \"stepl1\", \"K\", \"N\", \"S\", \"gamma\", \"fixed\", \"c2\", \"c3\", \"c02\", \"c03\", \"b1\", \"b2\", \"b3\", \"w\", \"kappa\", \"Delta1\", \"Delta2\", \"in1\", \"in2\", \"a\", \"b\") res #> Error in eval(expr, envir, enclos): object 'res' not found cat(comment(res))                                        # displays the optimization sequence, start and finish date of the optimization procedure. #> Error in comment(res): object 'res' not found"},{"path":"https://sterniii3.github.io/drugdevelopR/reference/optimal_multiple_normal.html","id":null,"dir":"Reference","previous_headings":"","what":"Optimal phase II/III drug development planning for programs with multiple endpoints — optimal_multiple_normal","title":"Optimal phase II/III drug development planning for programs with multiple endpoints — optimal_multiple_normal","text":"function optimal_multiple_normal drugdevelopR package enables planning phase II/III drug development programs optimal sample size allocation go/-go decision rules (Preussler et. al, 2019).  (planning also possible via user friendly R Shiny App: multiarm). Fast coputing enabled parallel programming.","code":""},{"path":"https://sterniii3.github.io/drugdevelopR/reference/optimal_multiple_normal.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Optimal phase II/III drug development planning for programs with multiple endpoints — optimal_multiple_normal","text":"","code":"optimal_multiple_normal(   Delta1,   Delta2,   in1,   in2,   sigma1,   sigma2,   n2min,   n2max,   stepn2,   kappamin,   kappamax,   stepkappa,   alpha,   beta,   c2,   c3,   c02,   c03,   K = Inf,   N = Inf,   S = -Inf,   steps1 = 0,   stepm1 = 0.5,   stepl1 = 0.8,   b1,   b2,   b3,   rho,   fixed,   relaxed = FALSE,   num_cl = 1 )"},{"path":"https://sterniii3.github.io/drugdevelopR/reference/optimal_multiple_normal.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Optimal phase II/III drug development planning for programs with multiple endpoints — optimal_multiple_normal","text":"Delta1 assumed true treatment effect HR scale treatment 1 Delta2 assumed true treatment effect HR scale treatment 2 in1 amount information Delta1 terms number events in2 amount information Delta2 terms number events sigma1 variance endpoint 1 sigma2 variance endpoint 1 n2min minimal total sample size phase II, must divisible 3 n2max maximal total sample size phase II, must divisible 3 stepn2 stepsize optimization n2, must divisible 3 kappamin minimal threshold value go/-go decision rule kappamax maximal threshold value go/-go decision rule stepkappa stepsize optimization HRgo alpha one-sided significance level/ family wise error rate beta 1-beta (-pair) power calculation number events phase III c2 variable per-patient cost phase II c3 variable per-patient cost phase III c02 fixed cost phase II c03 fixed cost phase III K constraint costs program, default: Inf, e.g. constraint N constraint total expected sample size program, default: Inf, e.g. constraint S constraint expected probability successful program, default: -Inf, e.g. constraint steps1 lower boundary effect size category \"small\" HR scale, default: 1 stepm1 lower boundary effect size category \"medium\" HR scale = upper boundary effect size category \"small\" HR scale, default: 0.95 stepl1 lower boundary effect size category \"large\" HR scale = upper boundary effect size category \"medium\" HR scale, default: 0.85 b1 expected gain effect size category \"small\" b2 expected gain effect size category \"medium\" b3 expected gain effect size category \"large\" rho correlation two endpoints fixed assumed fixed treatment effect relaxed relaxed strict rule num_cl number clusters used parallel computing, default: 1","code":""},{"path":"https://sterniii3.github.io/drugdevelopR/reference/optimal_multiple_normal.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Optimal phase II/III drug development planning for programs with multiple endpoints — optimal_multiple_normal","text":"output function optimal_multiple_tte data.frame containing optimization results: Strategy Strategy, 1: \"best promising\" 2: \"promising\" u maximal expected utility HRgo optimal threshold value decision rule go phase III n2 optimal total sample size phase II n3 total expected sample size phase III; rounded next natural number n total sample size program; n = n2 + n3 K maximal costs program pgo probability go phase III sProg probability successful program sProg1 probability successful program \"small\" treatment effect Phase III sProg2 probability successful program \"medium\" treatment effect Phase III sProg3 probability successful program \"large\" treatment effect Phase III K2 expected costs phase II K3 expected costs phase III OP probability one endpoint significant input parameters. res Taking cat(comment()) data.frame object lists used optimization sequences, start finish date optimization procedure.","code":""},{"path":"https://sterniii3.github.io/drugdevelopR/reference/optimal_multiple_normal.html","id":"drugdevelopr-functions","dir":"Reference","previous_headings":"","what":"drugdevelopR functions","title":"Optimal phase II/III drug development planning for programs with multiple endpoints — optimal_multiple_normal","text":"drugdevelopR package provides functions optimal_tte, optimal_binary optimal_normal plan optimal phase II/III drug development programs time--event (treatment effect measured hazard ratio (HR)), binary (treatment effect measured risk ratio (RR)) normally distributed (treatment effect measured standardized difference means (Delta)) endpoint, treatment effect modelled prior. Optimal phase II/III drug development planning fixed treatment effects can done help R Shiny application basic. Extensions optimal planning programs including methods discounting phase II results (function: optimal_bias, App: bias), optimal planning programs several phase III trials (function: optimal_multitrial, App: multitrial) optimal planning programs multiple arms (function: optimal_multiarm, App: multiarm).","code":""},{"path":"https://sterniii3.github.io/drugdevelopR/reference/optimal_multiple_normal.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Optimal phase II/III drug development planning for programs with multiple endpoints — optimal_multiple_normal","text":"Preussler, S., Kirchner, M., Goette, H., Kieser, M. (2019). Optimal Designs Multi-Arm Phase II/III Drug Development Programs. Submitted peer-review journal. IQWiG (2016). Allgemeine Methoden. Version 5.0, 10.07.2016, Technical Report. Available https://www.iqwig.de/de/methoden/methodenpapier.3020.html, assessed last 15.05.19.","code":""},{"path":[]},{"path":"https://sterniii3.github.io/drugdevelopR/reference/optimal_multiple_tte.html","id":null,"dir":"Reference","previous_headings":"","what":"Optimal phase II/III drug development planning for programs with multiple endpoints — optimal_multiple_tte","title":"Optimal phase II/III drug development planning for programs with multiple endpoints — optimal_multiple_tte","text":"function optimal_multiple_tte drugdevelopR package enables planning phase II/III drug development programs optimal sample size allocation go/-go decision rules (Preussler et. al, 2019).  (planning also possible via user friendly R Shiny App: multiarm). Fast coputing enabled parallel programming.","code":""},{"path":"https://sterniii3.github.io/drugdevelopR/reference/optimal_multiple_tte.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Optimal phase II/III drug development planning for programs with multiple endpoints — optimal_multiple_tte","text":"","code":"optimal_multiple_tte(   hr1,   hr2,   id1,   id2,   ec,   d2min,   d2max,   stepd2,   hrgomin,   hrgomax,   stephrgo,   alpha,   beta,   c2,   c3,   c02,   c03,   K = Inf,   N = Inf,   S = -Inf,   b1,   b2,   b3,   rho,   fixed,   num_cl = 1 )"},{"path":"https://sterniii3.github.io/drugdevelopR/reference/optimal_multiple_tte.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Optimal phase II/III drug development planning for programs with multiple endpoints — optimal_multiple_tte","text":"hr1 assumed true treatment effect HR scale treatment 1 hr2 assumed true treatment effect HR scale treatment 2 id1 amount information hr1 terms number events id2 amount information hr2 terms number events ec control arm event rate phase II III hrgomin minimal threshold value go/-go decision rule hrgomax maximal threshold value go/-go decision rule stephrgo stepsize optimization HRgo alpha one-sided significance level/ family wise error rate beta 1-beta (-pair) power calculation number events phase III c2 variable per-patient cost phase II c3 variable per-patient cost phase III c02 fixed cost phase II c03 fixed cost phase III K constraint costs program, default: Inf, e.g. constraint N constraint total expected sample size program, default: Inf, e.g. constraint S constraint expected probability successful program, default: -Inf, e.g. constraint b1 expected gain effect size category \"small\" b2 expected gain effect size category \"medium\" b3 expected gain effect size category \"large\" rho correlation two endpoints fixed assumed fixed treatment effect num_cl number clusters used parallel computing, default: 1 n2min minimal total sample size phase II, must divisible 3 n2max maximal total sample size phase II, must divisible 3 stepn2 stepsize optimization n2, must divisible 3 steps1 lower boundary effect size category \"small\" HR scale, default: 1 stepm1 lower boundary effect size category \"medium\" HR scale = upper boundary effect size category \"small\" HR scale, default: 0.95 stepl1 lower boundary effect size category \"large\" HR scale = upper boundary effect size category \"medium\" HR scale, default: 0.85","code":""},{"path":"https://sterniii3.github.io/drugdevelopR/reference/optimal_multiple_tte.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Optimal phase II/III drug development planning for programs with multiple endpoints — optimal_multiple_tte","text":"output function optimal_multiple_tte data.frame containing optimization results: Strategy Strategy, 1: \"best promising\" 2: \"promising\" u maximal expected utility HRgo optimal threshold value decision rule go phase III n2 optimal total sample size phase II n3 total expected sample size phase III; rounded next natural number n total sample size program; n = n2 + n3 K maximal costs program pgo probability go phase III sProg probability successful program sProg1 probability successful program \"small\" treatment effect Phase III sProg2 probability successful program \"medium\" treatment effect Phase III sProg3 probability successful program \"large\" treatment effect Phase III K2 expected costs phase II K3 expected costs phase III OP probability one endpoint significant input parameters. res Taking cat(comment()) data.frame object lists used optimization sequences, start finish date optimization procedure.","code":""},{"path":"https://sterniii3.github.io/drugdevelopR/reference/optimal_multiple_tte.html","id":"drugdevelopr-functions","dir":"Reference","previous_headings":"","what":"drugdevelopR functions","title":"Optimal phase II/III drug development planning for programs with multiple endpoints — optimal_multiple_tte","text":"drugdevelopR package provides functions optimal_tte, optimal_binary optimal_normal plan optimal phase II/III drug development programs time--event (treatment effect measured hazard ratio (HR)), binary (treatment effect measured risk ratio (RR)) normally distributed (treatment effect measured standardized difference means (Delta)) endpoint, treatment effect modelled prior. Optimal phase II/III drug development planning fixed treatment effects can done help R Shiny application basic. Extensions optimal planning programs including methods discounting phase II results (function: optimal_bias, App: bias), optimal planning programs several phase III trials (function: optimal_multitrial, App: multitrial) optimal planning programs multiple arms (function: optimal_multiarm, App: multiarm).","code":""},{"path":"https://sterniii3.github.io/drugdevelopR/reference/optimal_multiple_tte.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Optimal phase II/III drug development planning for programs with multiple endpoints — optimal_multiple_tte","text":"Preussler, S., Kirchner, M., Goette, H., Kieser, M. (2019). Optimal Designs Multi-Arm Phase II/III Drug Development Programs. Submitted peer-review journal. IQWiG (2016). Allgemeine Methoden. Version 5.0, 10.07.2016, Technical Report. Available https://www.iqwig.de/de/methoden/methodenpapier.3020.html, assessed last 15.05.19.","code":""},{"path":"https://sterniii3.github.io/drugdevelopR/reference/optimal_multiple_tte.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Optimal phase II/III drug development planning for programs with multiple endpoints — optimal_multiple_tte","text":"","code":"res <- optimal_multiarm(hr1 = 0.75, hr2 = 0.80, ec = 0.6,# define assumed true HRs and control arm event rate   id1 = 210, id2 = 420,   n2min = 30, n2max = 90, stepn2 = 6,                    # define optimization set for n2   hrgomin = 0.7, hrgomax = 0.9, stephrgo = 0.05,         # define optimization set for HRgo   alpha = 0.05, beta = 0.1,                              # drug development planning parameters   c2 = 0.75, c3 = 1, c02 = 100, c03 = 150,               # define fixed and variable costs for phase II and III   K = Inf, N = Inf, S = -Inf,                            # set maximal costs/ expected sample size for the program or minimal expected probability of a successful program   steps1 = 1,                                            # define lower boundary for \"small\"   stepm1 = 0.95,                                         # \"medium\"   stepl1 = 0.85,                                         # and \"large\" treatment effect size categories as proposed by IQWiG (2016)   b1 = 1000, b2 = 2000, b3 = 3000,                       # define expected benefit for a \"small\", \"medium\" and \"large\" treatment effect   rho = 1/2, fixed = TRUE,                                # correlation and treatment effect   num_cl = 1)                                            # set number of cores used for parallelized computing (check maximum number possible with detectCores()) #> Error in optimal_multiarm(hr1 = 0.75, hr2 = 0.8, ec = 0.6, id1 = 210,     id2 = 420, n2min = 30, n2max = 90, stepn2 = 6, hrgomin = 0.7,     hrgomax = 0.9, stephrgo = 0.05, alpha = 0.05, beta = 0.1,     c2 = 0.75, c3 = 1, c02 = 100, c03 = 150, K = Inf, N = Inf,     S = -Inf, steps1 = 1, stepm1 = 0.95, stepl1 = 0.85, b1 = 1000,     b2 = 2000, b3 = 3000, rho = 1/2, fixed = TRUE, num_cl = 1): unused arguments (id1 = 210, id2 = 420, rho = 1/2, fixed = TRUE) res #> Error in eval(expr, envir, enclos): object 'res' not found cat(comment(res))                                        # displays the optimization sequence, start and finish date of the optimization procedure. #> Error in comment(res): object 'res' not found"},{"path":"https://sterniii3.github.io/drugdevelopR/reference/optimal_multitrial.html","id":null,"dir":"Reference","previous_headings":"","what":"Optimal phase II/III drug development planning where several phase III trials are performed — optimal_multitrial","title":"Optimal phase II/III drug development planning where several phase III trials are performed — optimal_multitrial","text":"function optimal_multitrial drugdevelopR package enables planning phase II/III drug development programs optimal sample size allocation go/-go decision rules programs several phase III trials (Preussler et. al, 2019). assumed true treatment effects can assumed fixed (planning also possible via user friendly R Shiny App: multitrial) modelled prior distribution. R Shiny application prior visualizes prior distributions used package. Fast coputing enabled parallel programming.","code":""},{"path":"https://sterniii3.github.io/drugdevelopR/reference/optimal_multitrial.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Optimal phase II/III drug development planning where several phase III trials are performed — optimal_multitrial","text":"","code":"optimal_multitrial(   w,   hr1,   hr2,   id1,   id2,   d2min,   d2max,   stepd2,   hrgomin,   hrgomax,   stephrgo,   alpha,   beta,   xi2,   xi3,   c2,   c3,   c02,   c03,   K = Inf,   N = Inf,   S = -Inf,   b1,   b2,   b3,   case,   strategy = TRUE,   fixed = FALSE,   num_cl = 1 )"},{"path":"https://sterniii3.github.io/drugdevelopR/reference/optimal_multitrial.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Optimal phase II/III drug development planning where several phase III trials are performed — optimal_multitrial","text":"w weight mixture prior distribution hr1 first assumed true treatment effect HR scale prior distribution hr2 second assumed true treatment effect HR scale prior distribution id1 amount information hr1 terms number events id2 amount information hr2 terms number events d2min minimal number events phase II d2max maximal number events phase II stepd2 stepsize optimization d2 hrgomin minimal threshold value go/-go decision rule hrgomax maximal threshold value go/-go decision rule stephrgo stepsize optimization HRgo alpha one- sided significance level beta 1-beta power calculation number events phase III Schoenfeld (1981) formula xi2 event rate phase II xi3 event rate phase III c2 variable per-patient cost phase II c3 variable per-patient cost phase III c02 fixed cost phase II c03 fixed cost phase III K constraint costs program, default: Inf, e.g. constraint N constraint total expected sample size program, default: Inf, e.g. constraint S constraint expected probability successful program, default: -Inf, e.g. constraint b1 expected gain effect size category \"small\" b2 expected gain effect size category \"medium\" b3 expected gain effect size category \"large\" case choose case: \"least 1, 2 3 significant trials needed approval\" strategy choose strategy: \"conduct 1, 2, 3 4 trial\"; TRUE calculates strategies selected Case fixed choose true treatment effects fixed random, TRUE hr1 used fixed effect num_cl number clusters used parallel computing, default: 1","code":""},{"path":"https://sterniii3.github.io/drugdevelopR/reference/optimal_multitrial.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Optimal phase II/III drug development planning where several phase III trials are performed — optimal_multitrial","text":"output function optimal_multitrial data.frame containing optimization results: Case Case: \"number significant trials needed\" Strategy Strategy: \"number conducted trials\" u maximal expected utility HRgo optimal threshold value decision rule go phase III d2 optimal total number events phase II d3 total expected number events phase III; rounded next natural number d total expected number events program; d = d2 + d3 n2 total sample size phase II; rounded next even natural number n3 total sample size phase III; rounded next even natural number n total sample size program; n = n2 + n3 K maximal costs program pgo probability go phase III sProg probability successful program sProg1 probability successful program \"small\" treatment effect Phase III (lower boundary HR scale set 1, proposed IQWiG (2016)) sProg2 probability successful program \"medium\" treatment effect Phase III (lower boundary HR scale set 0.95, proposed IQWiG (2016)) sProg3 probability successful program \"large\" treatment effect Phase III (lower boundary HR scale set 0.85, proposed IQWiG (2016)) K2 expected costs phase II K3 expected costs phase III input parameters. Taking cat(comment()) data.frame object lists used optimization sequences, start finish date optimization procedure.","code":""},{"path":"https://sterniii3.github.io/drugdevelopR/reference/optimal_multitrial.html","id":"drugdevelopr-functions","dir":"Reference","previous_headings":"","what":"drugdevelopR functions","title":"Optimal phase II/III drug development planning where several phase III trials are performed — optimal_multitrial","text":"drugdevelopR package provides functions optimal_tte, optimal_binary optimal_normal plan optimal phase II/III drug development programs time--event (treatment effect measured hazard ratio (HR)), binary (treatment effect measured risk ratio (RR)) normally distributed (treatment effect measured standardized difference means (Delta)) endpoint, treatment effect modelled prior. Optimal phase II/III drug development planning fixed treatment effects can done help R Shiny application base. Extensions optimal planning programs including methods discounting phase II results (function: optimal_bias, App: bias), optimal planning programs several phase III trials (function: optimal_multitrial, App: multitrial) optimal planning programs multiple arms (function: optimal_multiarm, App: multiarm).","code":""},{"path":"https://sterniii3.github.io/drugdevelopR/reference/optimal_multitrial.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Optimal phase II/III drug development planning where several phase III trials are performed — optimal_multitrial","text":"IQWiG (2016). Allgemeine Methoden. Version 5.0, 10.07.2016, Technical Report. Available https://www.iqwig.de/de/methoden/methodenpapier.3020.html, assessed last 15.05.19. Preussler, S., Kieser, M., Kirchner, M. (2019). Optimal sample size allocation go/-go decision rules phase II/III programs several phase III trials performed. Biometrical Journal, 61(2), 357-378. Schoenfeld, D. (1981). asymptotic properties nonparametric tests comparing survival distributions. Biometrika, 68(1), 316-319.","code":""},{"path":"https://sterniii3.github.io/drugdevelopR/reference/optimal_multitrial.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Optimal phase II/III drug development planning where several phase III trials are performed — optimal_multitrial","text":"","code":"res <- optimal_multitrial(w = 0.3,                              # define parameters for prior   hr1 = 0.69, hr2 = 0.88, id1 = 210, id2 = 420,          # (https://web.imbi.uni-heidelberg.de/prior/)   d2min = 20, d2max = 100, stepd2 = 5,                   # define optimization set for d2   hrgomin = 0.7, hrgomax = 0.9, stephrgo = 0.05,         # define optimization set for HRgo   alpha = 0.025, beta = 0.1, xi2 = 0.7, xi3 = 0.7,       # drug development planning parameters   c2 = 0.75, c3 = 1, c02 = 100, c03 = 150,               # define fixed and variable costs for phase II and III   K = Inf, N = Inf, S = -Inf,                            # set maximal costs/ expected sample size for the program or minimal expected probability of a successful program   b1 = 1000, b2 = 2000, b3 = 3000,                       # define expected benefit for a \"small\", \"medium\" and \"large\" treatment effect   case = 1, strategy = TRUE,                             # chose Case and Strategy   fixed = TRUE,                                          # choose if true treatment effects are fixed or random   num_cl = 1)                                            # set number of cores used for parallelized computing (check maximum number possible with detectCores()) #> Error in qnorm(1 - alpha): object 'alpha' not found res #> Error in eval(expr, envir, enclos): object 'res' not found cat(comment(res))                                        # displays the optimization sequence, start and finish date of the optimization procedure. #> Error in comment(res): object 'res' not found"},{"path":"https://sterniii3.github.io/drugdevelopR/reference/optimal_multitrial_binary.html","id":null,"dir":"Reference","previous_headings":"","what":"Optimal phase II/III drug development planning where several phase III trials are performed — optimal_multitrial_binary","title":"Optimal phase II/III drug development planning where several phase III trials are performed — optimal_multitrial_binary","text":"drugdevelopR package enables planning phase II/III drug development programs optimal sample size allocation go/-go decision rules. binary endpoints treatment effect measured risk ratio (RR).assumed true treatment effects can assumed fixed modelled prior distribution. R Shiny application prior visualizes prior distributions used package. Fast coputing enabled parallel programming.","code":""},{"path":"https://sterniii3.github.io/drugdevelopR/reference/optimal_multitrial_binary.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Optimal phase II/III drug development planning where several phase III trials are performed — optimal_multitrial_binary","text":"","code":"optimal_multitrial_binary(   w,   p0,   p11,   p12,   in1,   in2,   n2min,   n2max,   stepn2,   rrgomin,   rrgomax,   steprrgo,   alpha,   beta,   c2,   c3,   c02,   c03,   K = Inf,   N = Inf,   S = -Inf,   b1,   b2,   b3,   case,   strategy = TRUE,   fixed = FALSE,   num_cl = 1 )"},{"path":"https://sterniii3.github.io/drugdevelopR/reference/optimal_multitrial_binary.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Optimal phase II/III drug development planning where several phase III trials are performed — optimal_multitrial_binary","text":"w weight mixture prior distribution p0 assumed true rate control group p11 assumed true rate treatment group p12 assumed true rate treatment group in1 amount information p11 terms sample size in2 amount information p12 terms sample size n2min minimal total sample size phase II; must even number n2max maximal total sample size phase II, must even number stepn2 stepsize optimization n2; must even number rrgomin minimal threshold value go/-go decision rule rrgomax maximal threshold value go/-go decision rule steprrgo stepsize optimization RRgo alpha significance level beta 1-beta power calculation sample size phase III c2 variable per-patient cost phase II c3 variable per-patient cost phase III c02 fixed cost phase II c03 fixed cost phase III K constraint costs program, default: Inf, e.g. constraint N constraint total expected sample size program, default: Inf, e.g. constraint S constraint expected probability successful program, default: -Inf, e.g. constraint b1 expected gain effect size category \"small\" b2 expected gain effect size category \"medium\" b3 expected gain effect size category \"large\" case choose case: \"least 1, 2 3 significant trials needed approval\" strategy choose strategy: \"conduct 1, 2, 3 4 trial\"; TRUE calculates strategies selected Case fixed choose true treatment effects fixed random, TRUE p11 used fixed effect p1 num_cl number clusters used parallel computing, default: 1 steps1 lower boundary effect size category \"small\" RR scale, default: 1 stepm1 lower boundary effect size category \"medium\" RR scale = upper boundary effect size category \"small\" RR scale, default: 0.95 stepl1 lower boundary effect size category \"large\" RR scale = upper boundary effect size category \"medium\" RR scale, default: 0.85","code":""},{"path":"https://sterniii3.github.io/drugdevelopR/reference/optimal_multitrial_binary.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Optimal phase II/III drug development planning where several phase III trials are performed — optimal_multitrial_binary","text":"output function optimal_binary data.frame containing optimization results: Case Case: \"number significant trials needed\" Strategy Strategy: \"number conducted trials\" u maximal expected utility RRgo optimal threshold value decision rule go phase III n2 total sample size phase II n3 total sample size phase III; rounded next even natural number n total sample size program; n = n2 + n3 K maximal costs program pgo probability go phase III sProg probability successful program sProg1 probability successful program \"small\" treatment effect Phase III sProg2 probability successful program \"medium\" treatment effect Phase III sProg3 probability successful program \"large\" treatment effect Phase III K2 expected costs phase II K3 expected costs phase III input parameters. Taking cat(comment()) data.frame object lists used optimization sequences, start finish date optimization procedure.","code":""},{"path":"https://sterniii3.github.io/drugdevelopR/reference/optimal_multitrial_binary.html","id":"drugdevelopr-functions","dir":"Reference","previous_headings":"","what":"drugdevelopR functions","title":"Optimal phase II/III drug development planning where several phase III trials are performed — optimal_multitrial_binary","text":"drugdevelopR package provides functions optimal_tte, optimal_binary optimal_normal plan optimal phase II/III drug development programs time--event (treatment effect measured hazard ratio (HR)), binary (treatment effect measured risk ratio (RR)) normally distributed (treatment effect measured standardized difference means (Delta)) endpoint, treatment effect modelled prior. Optimal phase II/III drug development planning fixed treatment effects can done help R Shiny application basic. Extensions optimal planning programs including methods discounting phase II results (function: optimal_bias, App: bias), optimal planning programs several phase III trials (function: optimal_multitrial, App: multitrial) optimal planning programs multiple arms (function: optimal_multiarm, App: multiarm).","code":""},{"path":"https://sterniii3.github.io/drugdevelopR/reference/optimal_multitrial_binary.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Optimal phase II/III drug development planning where several phase III trials are performed — optimal_multitrial_binary","text":"IQWiG (2016). Allgemeine Methoden. Version 5.0, 10.07.2016, Technical Report. Available https://www.iqwig.de/de/methoden/methodenpapier.3020.html, assessed last 15.05.19.","code":""},{"path":"https://sterniii3.github.io/drugdevelopR/reference/optimal_multitrial_binary.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Optimal phase II/III drug development planning where several phase III trials are performed — optimal_multitrial_binary","text":"","code":"res <- optimal_multitrial_binary(w = 0.3,                # define parameters for prior   p0 = 0.6, p11 =  0.3, p12 = 0.5, in1 = 30, in2 = 60,   # (https://web.imbi.uni-heidelberg.de/prior/)   n2min = 20, n2max = 100, stepn2 = 4,                   # define optimization set for n2   rrgomin = 0.7, rrgomax = 0.9, steprrgo = 0.05,         # define optimization set for RRgo   alpha = 0.05, beta = 0.1,                              # drug development planning parameters   c2 = 0.75, c3 = 1, c02 = 100, c03 = 150,               # define fixed and variable costs for phase II and III,   K = Inf, N = Inf, S = -Inf,                            # set maximal costs/ expected sample size for the program or minimal expected probability of a successful program   steps1 = 1,                                            # define lower boundary for \"small\"   stepm1 = 0.95,                                         # \"medium\"   stepl1 = 0.85,                                         # and \"large\" treatment effect size categories as proposed by IQWiG (2016)   b1 = 1000, b2 = 2000, b3 = 3000,                       # define expected benefit for a \"small\", \"medium\" and \"large\" treatment effect   fixed = FALSE,                                         # choose if true treatment effects are fixed or random   num_cl = 1)                                            # set number of cores used for parallelized computing (check maximum number possible with detectCores()) #> Error in optimal_multitrial_binary(w = 0.3, p0 = 0.6, p11 = 0.3, p12 = 0.5,     in1 = 30, in2 = 60, n2min = 20, n2max = 100, stepn2 = 4,     rrgomin = 0.7, rrgomax = 0.9, steprrgo = 0.05, alpha = 0.05,     beta = 0.1, c2 = 0.75, c3 = 1, c02 = 100, c03 = 150, K = Inf,     N = Inf, S = -Inf, steps1 = 1, stepm1 = 0.95, stepl1 = 0.85,     b1 = 1000, b2 = 2000, b3 = 3000, fixed = FALSE, num_cl = 1): unused arguments (steps1 = 1, stepm1 = 0.95, stepl1 = 0.85) res #> Error in eval(expr, envir, enclos): object 'res' not found cat(comment(res))                                        # displays the optimization sequence, start and finish date of the optimization procedure. #> Error in comment(res): object 'res' not found"},{"path":"https://sterniii3.github.io/drugdevelopR/reference/optimal_multitrial_normal.html","id":null,"dir":"Reference","previous_headings":"","what":"Optimal phase II/III drug development planning where several phase III trials are performed — optimal_multitrial_normal","title":"Optimal phase II/III drug development planning where several phase III trials are performed — optimal_multitrial_normal","text":"drugdevelopR package enables planning phase II/III drug development programs optimal sample size allocation go/-go decision rules. normally distributed endpoints treatment effect measured standardized difference means (Delta). assumed true treatment effects can assumed fixed modelled prior distribution. R Shiny application prior visualizes prior distributions used package. Fast coputing enabled parallel programming.","code":""},{"path":"https://sterniii3.github.io/drugdevelopR/reference/optimal_multitrial_normal.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Optimal phase II/III drug development planning where several phase III trials are performed — optimal_multitrial_normal","text":"","code":"optimal_multitrial_normal(   w,   Delta1,   Delta2,   in1,   in2,   a,   b,   n2min,   n2max,   stepn2,   kappamin,   kappamax,   stepkappa,   alpha,   beta,   c2,   c3,   c02,   c03,   K = Inf,   N = Inf,   S = -Inf,   b1,   b2,   b3,   case,   strategy = TRUE,   fixed = FALSE,   num_cl = 1 )"},{"path":"https://sterniii3.github.io/drugdevelopR/reference/optimal_multitrial_normal.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Optimal phase II/III drug development planning where several phase III trials are performed — optimal_multitrial_normal","text":"w weight mixture prior distribution Delta1 assumed true treatment effect standardized difference means Delta2 assumed true treatment effect standardized difference means in1 amount information Delta2 terms sample size in2 amount information Delta1 terms sample size lower boundary truncation b upper boundary truncation n2min minimal total sample size phase II; must even number n2max maximal total sample size phase II, must even number stepn2 stepsize optimization n2; must even number kappamin minimal threshold value go/-go decision rule kappamax maximal threshold value go/-go decision rule stepkappa stepsize optimization kappa alpha significance level beta 1-beta power calculation sample size phase III c2 variable per-patient cost phase II c3 variable per-patient cost phase III c02 fixed cost phase II c03 fixed cost phase III K constraint costs program, default: Inf, e.g. constraint N constraint total expected sample size program, default: Inf, e.g. constraint S constraint expected probability successful program, default: -Inf, e.g. constraint b1 expected gain effect size category \"small\" b2 expected gain effect size category \"medium\" b3 expected gain effect size category \"large\" case choose case: \"least 1, 2 3 significant trials needed approval\" strategy choose strategy: \"conduct 1, 2, 3 4 trial\"; TRUE calculates strategies selected Case fixed choose true treatment effects fixed random, TRUE hr1 used fixed effect num_cl number clusters used parallel computing, default: 1 steps1 lower boundary effect size category \"small\", default: 0 stepm1 lower boundary effect size category \"medium\" = upper boundary effect size category \"small\" default: 0.5 stepl1 lower boundary effect size category \"large\" = upper boundary effect size category \"medium\", default: 0.8","code":""},{"path":"https://sterniii3.github.io/drugdevelopR/reference/optimal_multitrial_normal.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Optimal phase II/III drug development planning where several phase III trials are performed — optimal_multitrial_normal","text":"output function optimal_multitrial_normal data.frame containing optimization results: Case Case: \"number significant trials needed\" Strategy Strategy: \"number conducted trials\" u maximal expected utility kappa optimal threshold value decision rule go phase III n2 total sample size phase II n3 total sample size phase III; rounded next even natural number n total sample size program; n = n2 + n3 K maximal costs program pgo probability go phase III sProg probability successful program sProg1 probability successful program \"small\" treatment effect Phase III sProg2 probability successful program \"medium\" treatment effect Phase III sProg3 probability successful program \"large\" treatment effect Phase III K2 expected costs phase II K3 expected costs phase III input parameters. Taking cat(comment()) data.frame object lists used optimization sequences, start finish date optimization procedure.","code":""},{"path":"https://sterniii3.github.io/drugdevelopR/reference/optimal_multitrial_normal.html","id":"drugdevelopr-functions","dir":"Reference","previous_headings":"","what":"drugdevelopR functions","title":"Optimal phase II/III drug development planning where several phase III trials are performed — optimal_multitrial_normal","text":"drugdevelopR package provides functions optimal_tte, optimal_binary optimal_normal plan optimal phase II/III drug development programs time--event (treatment effect measured hazard ratio (HR)), binary (treatment effect measured risk ratio (RR)) normally distributed (treatment effect measured standardized difference means (Delta)) endpoint, treatment effect assumed fixed modelled prior. Optimal phase II/III drug development planning fixed treatment effects can also done help R Shiny application basic. Extensions optimal planning programs including methods discounting phase II results (function: optimal_bias, App: bias), optimal planning programs several phase III trials (function: optimal_multitrial, App: multitrial) optimal planning programs multiple arms (function: optimal_multiarm, App: multiarm).","code":""},{"path":"https://sterniii3.github.io/drugdevelopR/reference/optimal_multitrial_normal.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Optimal phase II/III drug development planning where several phase III trials are performed — optimal_multitrial_normal","text":"Cohen, J. (1988). Statistical power analysis behavioral sciences.","code":""},{"path":"https://sterniii3.github.io/drugdevelopR/reference/optimal_multitrial_normal.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Optimal phase II/III drug development planning where several phase III trials are performed — optimal_multitrial_normal","text":"","code":"res <- optimal_multitrial_normal(w=0.3,                             # define parameters for prior   Delta1 = 0.375, Delta2 = 0.625, in1=300, in2=600,      # (https://web.imbi.uni-heidelberg.de/prior/)   a = 0.25, b = 0.75,   n2min = 20, n2max = 100, stepn2 = 4,                   # define optimization set for n2   kappamin = 0.02, kappamax = 0.2, stepkappa = 0.02,     # define optimization set for kappa   alpha = 0.05, beta = 0.1,                              # drug development planning parameters   c2 = 0.675, c3 = 0.72, c02 = 15, c03 = 20,             # define fixed and variable costs for phase II and III   K = Inf, N = Inf, S = -Inf,                            # set maximal costs/ expected sample size for the program or minimal expected probability of a successful program   b1 = 3000, b2 = 8000, b3 = 10000,                      # define expected benefit for a \"small\", \"medium\" and \"large\" treatment effect                                             # assume different/same population structures in phase II and III   case = 1, strategy = TRUE,                             # chose Case and Strategy   fixed = TRUE,                                          # choose if true treatment effects are fixed or random   num_cl = 1)                                            # set number of cores used for parallelized computing (check maximum number possible with detectCores()) #> Error in qnorm(1 - alpha): object 'alpha' not found res #> Error in eval(expr, envir, enclos): object 'res' not found  cat(comment(res))                                        # displays the optimization sequence, start and finish date of the optimization procedure. #> Error in comment(res): object 'res' not found"},{"path":"https://sterniii3.github.io/drugdevelopR/reference/optimal_normal.html","id":null,"dir":"Reference","previous_headings":"","what":"Optimal phase II/III drug development planning with normally distributed endpoint — optimal_normal","title":"Optimal phase II/III drug development planning with normally distributed endpoint — optimal_normal","text":"drugdevelopR package enables planning phase II/III drug development programs optimal sample size allocation go/-go decision rules. normally distributed endpoints treatment effect measured standardized difference means (Delta). assumed true treatment effects can assumed fixed modelled prior distribution. R Shiny application prior visualizes prior distributions used package. Fast coputing enabled parallel programming.","code":""},{"path":"https://sterniii3.github.io/drugdevelopR/reference/optimal_normal.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Optimal phase II/III drug development planning with normally distributed endpoint — optimal_normal","text":"","code":"optimal_normal(   w,   Delta1,   Delta2,   in1,   in2,   a,   b,   n2min,   n2max,   stepn2,   kappamin,   kappamax,   stepkappa,   alpha,   beta,   c2,   c3,   c02,   c03,   K = Inf,   N = Inf,   S = -Inf,   steps1 = 0,   stepm1 = 0.5,   stepl1 = 0.8,   b1,   b2,   b3,   gamma = 0,   fixed = FALSE,   skipII = FALSE,   num_cl = 1 )"},{"path":"https://sterniii3.github.io/drugdevelopR/reference/optimal_normal.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Optimal phase II/III drug development planning with normally distributed endpoint — optimal_normal","text":"w weight mixture prior distribution Delta1 assumed true treatment effect standardized difference means Delta2 assumed true treatment effect standardized difference means in1 amount information Delta2 terms sample size in2 amount information Delta1 terms sample size lower boundary truncation b upper boundary truncation n2min minimal total sample size phase II; must even number n2max maximal total sample size phase II, must even number stepn2 stepsize optimization n2; must even number kappamin minimal threshold value go/-go decision rule kappamax maximal threshold value go/-go decision rule stepkappa stepsize optimization kappa alpha significance level beta 1-beta power calculation sample size phase III c2 variable per-patient cost phase II c3 variable per-patient cost phase III c02 fixed cost phase II c03 fixed cost phase III K constraint costs program, default: Inf, e.g. constraint N constraint total expected sample size program, default: Inf, e.g. constraint S constraint expected probability successful program, default: -Inf, e.g. constraint steps1 lower boundary effect size category \"small\", default: 0 stepm1 lower boundary effect size category \"medium\" = upper boundary effect size category \"small\" default: 0.5 stepl1 lower boundary effect size category \"large\" = upper boundary effect size category \"medium\", default: 0.8 b1 expected gain effect size category \"small\" b2 expected gain effect size category \"medium\" b3 expected gain effect size category \"large\" gamma model different populations phase II III choose gamma!=0, default: 0 fixed choose true treatment effects fixed random, TRUE hr1 used fixed effect skipII choose skipping phase II option, default: FASLE num_cl number clusters used parallel computing, default: 1","code":""},{"path":"https://sterniii3.github.io/drugdevelopR/reference/optimal_normal.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Optimal phase II/III drug development planning with normally distributed endpoint — optimal_normal","text":"output function optimal_normal data.frame containing optimization results: u maximal expected utility kappa optimal threshold value decision rule go phase III n2 total sample size phase II n3 total sample size phase III; rounded next even natural number n total sample size program; n = n2 + n3 K maximal costs program pgo probability go phase III sProg probability successful program sProg1 probability successful program \"small\" treatment effect Phase III sProg2 probability successful program \"medium\" treatment effect Phase III sProg3 probability successful program \"large\" treatment effect Phase III K2 expected costs phase II K3 expected costs phase III input parameters. Taking cat(comment()) data.frame object lists used optimization sequences, start finish date optimization procedure.","code":""},{"path":"https://sterniii3.github.io/drugdevelopR/reference/optimal_normal.html","id":"drugdevelopr-functions","dir":"Reference","previous_headings":"","what":"drugdevelopR functions","title":"Optimal phase II/III drug development planning with normally distributed endpoint — optimal_normal","text":"drugdevelopR package provides functions optimal_tte, optimal_binary optimal_normal plan optimal phase II/III drug development programs time--event (treatment effect measured hazard ratio (HR)), binary (treatment effect measured risk ratio (RR)) normally distributed (treatment effect measured standardized difference means (Delta)) endpoint, treatment effect assumed fixed modelled prior. Optimal phase II/III drug development planning fixed treatment effects can also done help R Shiny application basic. Extensions optimal planning programs including methods discounting phase II results (function: optimal_bias, App: bias), optimal planning programs several phase III trials (function: optimal_multitrial, App: multitrial) optimal planning programs multiple arms (function: optimal_multiarm, App: multiarm).","code":""},{"path":"https://sterniii3.github.io/drugdevelopR/reference/optimal_normal.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Optimal phase II/III drug development planning with normally distributed endpoint — optimal_normal","text":"Cohen, J. (1988). Statistical power analysis behavioral sciences.","code":""},{"path":"https://sterniii3.github.io/drugdevelopR/reference/optimal_normal.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Optimal phase II/III drug development planning with normally distributed endpoint — optimal_normal","text":"","code":"res <- optimal_normal(w=0.3,                             # define parameters for prior   Delta1 = 0.375, Delta2 = 0.625, in1=300, in2=600,      # (https://web.imbi.uni-heidelberg.de/prior/)   a = 0.25, b = 0.75,   n2min = 20, n2max = 100, stepn2 = 4,                   # define optimization set for n2   kappamin = 0.02, kappamax = 0.2, stepkappa = 0.02,     # define optimization set for kappa   alpha = 0.05, beta = 0.1,                              # drug development planning parameters   c2 = 0.675, c3 = 0.72, c02 = 15, c03 = 20,             # define fixed and variable costs for phase II and III   K = Inf, N = Inf, S = -Inf,                            # set maximal costs/ expected sample size for the program or minimal expected probability of a successful program   steps1 = 0,                                            # define lower boundary for \"small\"   stepm1 = 0.5,                                          # \"medium\"   stepl1 = 0.8,                                          # and \"large\" treatment effect size categories as proposed by e.g. Cohen (1988)   b1 = 3000, b2 = 8000, b3 = 10000,                      # define expected benefit for a \"small\", \"medium\" and \"large\" treatment effect   gamma = 0,                                             # assume different/same population structures in phase II and III   fixed = FALSE,                                         # choose if true treatment effects are fixed or random   skipII = FALSE,                                        # choose if skipping phase II would be an option   num_cl = 1)                                            # set number of cores used for parallelized computing (check maximum number possible with detectCores()) #> Optimization progress: #>  #>    |                                                                               |                                                                      |   0% #> Error in c(\"pmvnorm\", \"dmvnorm\", \"dtnorm\", \"prior_normal\", \"Epgo_normal\",     \"En3_normal\", \"EPsProg_normal\", \"alpha\", \"beta\", \"steps1\",     \"stepm1\", \"stepl1\", \"K\", \"N\", \"S\", \"gamma\", \"fixed\", \"c2\",     \"c3\", \"c02\", \"c03\", \"b1\", \"b2\", \"b3\", \"w\", \"kappa\", \"Delta1\",     \"Delta2\", \"in1\", \"in2\", \"a\", \"b\"): unused arguments (\"dtnorm\", \"prior_normal\", \"Epgo_normal\", \"En3_normal\", \"EPsProg_normal\", \"alpha\", \"beta\", \"steps1\", \"stepm1\", \"stepl1\", \"K\", \"N\", \"S\", \"gamma\", \"fixed\", \"c2\", \"c3\", \"c02\", \"c03\", \"b1\", \"b2\", \"b3\", \"w\", \"kappa\", \"Delta1\", \"Delta2\", \"in1\", \"in2\", \"a\", \"b\") res #> Error in eval(expr, envir, enclos): object 'res' not found cat(comment(res))                                        # displays the optimization sequence, start and finish date of the optimization procedure. #> Error in comment(res): object 'res' not found"},{"path":"https://sterniii3.github.io/drugdevelopR/reference/optimal_tte.html","id":null,"dir":"Reference","previous_headings":"","what":"Optimal phase II/III drug development planning with time-to-event endpoint — optimal_tte","title":"Optimal phase II/III drug development planning with time-to-event endpoint — optimal_tte","text":"function optimal_tte drugdevelopR package enables planning phase II/III drug development programs optimal sample size allocation go/-go decision rules time--event endpoints (Kirchner et al., 2016). assumed true treatment effects can assumed fixed modelled prior distribution. assuming fixed true tratment effects, planning can also done user friendly R Shiny App basic. App prior visualizes prior distributions used package. Fast computing enabled parallel programming. function optimal_tte drugdevelopR package enables planning phase II/III drug development programs optimal sample size allocation go/-go decision rules time--event endpoints (Kirchner et al., 2016). assumed true treatment effects can assumed fixed modelled prior distribution. assuming fixed true tratment effects, planning can also done user friendly R Shiny App basic. App prior visualizes prior distributions used package. Fast computing enabled parallel programming.","code":""},{"path":"https://sterniii3.github.io/drugdevelopR/reference/optimal_tte.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Optimal phase II/III drug development planning with time-to-event endpoint — optimal_tte","text":"","code":"optimal_tte(   w,   hr1,   hr2,   id1,   id2,   d2min,   d2max,   stepd2,   hrgomin,   hrgomax,   stephrgo,   alpha,   beta,   xi2,   xi3,   c2,   c3,   c02,   c03,   K = Inf,   N = Inf,   S = -Inf,   steps1 = 1,   stepm1 = 0.95,   stepl1 = 0.85,   b1,   b2,   b3,   gamma = 0,   fixed = FALSE,   skipII = FALSE,   num_cl = 1 )  optimal_tte(   w,   hr1,   hr2,   id1,   id2,   d2min,   d2max,   stepd2,   hrgomin,   hrgomax,   stephrgo,   alpha,   beta,   xi2,   xi3,   c2,   c3,   c02,   c03,   K = Inf,   N = Inf,   S = -Inf,   steps1 = 1,   stepm1 = 0.95,   stepl1 = 0.85,   b1,   b2,   b3,   gamma = 0,   fixed = FALSE,   skipII = FALSE,   num_cl = 1 )"},{"path":"https://sterniii3.github.io/drugdevelopR/reference/optimal_tte.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Optimal phase II/III drug development planning with time-to-event endpoint — optimal_tte","text":"data.frame containing optimization results (see Value) data.frame containing optimization results (see Value)","code":""},{"path":"https://sterniii3.github.io/drugdevelopR/reference/optimal_tte.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Optimal phase II/III drug development planning with time-to-event endpoint — optimal_tte","text":"w weight mixture prior distribution hr1 first assumed true treatment effect HR scale prior distribution hr2 second assumed true treatment effect HR scale prior distribution id1 amount information hr1 terms number events id2 amount information hr2 terms number events d2min minimal number events phase II d2max maximal number events phase II stepd2 stepsize optimization d2 hrgomin minimal threshold value go/-go decision rule hrgomax maximal threshold value go/-go decision rule stephrgo stepsize optimization HRgo alpha significance level beta 1-beta power calculation number events phase III Schoenfeld (1981) formula xi2 event rate phase II xi3 event rate phase III c2 variable per-patient cost phase II c3 variable per-patient cost phase III c02 fixed cost phase II c03 fixed cost phase III K constraint costs program, default: Inf, e.g. constraint N constraint total expected sample size program, default: Inf, e.g. constraint S constraint expected probability successful program, default: -Inf, e.g. constraint steps1 lower boundary effect size category \"small\" HR scale, default: 1 stepm1 lower boundary effect size category \"medium\" HR scale = upper boundary effect size category \"small\" HR scale, default: 0.95 stepl1 lower boundary effect size category \"large\" HR scale = upper boundary effect size category \"medium\" HR scale, default: 0.85 b1 expected gain effect size category \"small\" b2 expected gain effect size category \"medium\" b3 expected gain effect size category \"large\" gamma model different populations phase II III choose gamma!=0, default: 0 fixed choose true treatment effects fixed random, TRUE hr1 used fixed effect skipII choose skipping phase II option, default: FASLE num_cl number clusters used parallel computing, default: 1","code":""},{"path":"https://sterniii3.github.io/drugdevelopR/reference/optimal_tte.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Optimal phase II/III drug development planning with time-to-event endpoint — optimal_tte","text":"output function optimal_tte data.frame containing optimization results: u maximal expected utility HRgo optimal threshold value decision rule go phase III d2 optimal total number events phase II d3 total expected number events phase III; rounded next natural number d total expected number events program; d = d2 + d3 n2 total sample size phase II; rounded next even natural number n3 total sample size phase III; rounded next even natural number n total sample size program; n = n2 + n3 K maximal costs program pgo probability go phase III sProg probability successful program sProg1 probability successful program \"small\" treatment effect Phase III sProg2 probability successful program \"medium\" treatment effect Phase III sProg3 probability successful program \"large\" treatment effect Phase III K2 expected costs phase II K3 expected costs phase III input parameters. Taking cat(comment()) data.frame object lists used optimization sequences, start finish date optimization procedure. output function optimal_tte data.frame containing optimization results: u maximal expected utility HRgo optimal threshold value decision rule go phase III d2 optimal total number events phase II d3 total expected number events phase III; rounded next natural number d total expected number events program; d = d2 + d3 n2 total sample size phase II; rounded next even natural number n3 total sample size phase III; rounded next even natural number n total sample size program; n = n2 + n3 K maximal costs program pgo probability go phase III sProg probability successful program sProg1 probability successful program \"small\" treatment effect Phase III sProg2 probability successful program \"medium\" treatment effect Phase III sProg3 probability successful program \"large\" treatment effect Phase III K2 expected costs phase II K3 expected costs phase III input parameters. Taking cat(comment()) data.frame object lists used optimization sequences, start finish date optimization procedure.","code":""},{"path":"https://sterniii3.github.io/drugdevelopR/reference/optimal_tte.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Optimal phase II/III drug development planning with time-to-event endpoint — optimal_tte","text":"Kirchner, M., Kieser, M., Goette, H., & Schueler, . (2016). Utility-based optimization phase II/III programs. Statistics Medicine, 35(2), 305-316. IQWiG (2016). Allgemeine Methoden. Version 5.0, 10.07.2016, Technical Report. Available https://www.iqwig.de/de/methoden/methodenpapier.3020.html, assessed last 15.05.19. Schoenfeld, D. (1981). asymptotic properties nonparametric tests comparing survival distributions. Biometrika, 68(1), 316-319. Kirchner, M., Kieser, M., Goette, H., & Schueler, . (2016). Utility-based optimization phase II/III programs. Statistics Medicine, 35(2), 305-316. IQWiG (2016). Allgemeine Methoden. Version 5.0, 10.07.2016, Technical Report. Available https://www.iqwig.de/de/methoden/methodenpapier.3020.html, assessed last 15.05.19. Schoenfeld, D. (1981). asymptotic properties nonparametric tests comparing survival distributions. Biometrika, 68(1), 316-319.","code":""},{"path":[]},{"path":"https://sterniii3.github.io/drugdevelopR/reference/optimal_tte.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Optimal phase II/III drug development planning with time-to-event endpoint — optimal_tte","text":"","code":"res <- optimal_tte(w = 0.3,                              # define parameters for prior   hr1 = 0.69, hr2 = 0.88, id1 = 210, id2 = 420,          # (https://web.imbi.uni-heidelberg.de/prior/)   d2min = 20, d2max = 100, stepd2 = 5,                   # define optimization set for d2   hrgomin = 0.7, hrgomax = 0.9, stephrgo = 0.05,         # define optimization set for HRgo   alpha = 0.05, beta = 0.1, xi2 = 0.7, xi3 = 0.7,        # drug development planning parameters   c2 = 0.75, c3 = 1, c02 = 100, c03 = 150,               # define fixed and variable costs for phase II and III   K = Inf, N = Inf, S = -Inf,                            # set maximal costs/ expected sample size for the program or minimal expected probability of a successful program   steps1 = 1,                                            # define lower boundary for \"small\"   stepm1 = 0.95,                                         # \"medium\"   stepl1 = 0.85,                                         # and \"large\" treatment effect size categories as proposed by IQWiG (2016)   b1 = 1000, b2 = 2000, b3 = 3000,                       # define expected benefit for a \"small\", \"medium\" and \"large\" treatment effect   gamma = 0,                                             # assume different/same population structures in phase II and III   fixed = FALSE,                                         # choose if true treatment effects are fixed or random   skipII = FALSE,                                        # choose if skipping phase II would be an option   num_cl = 1)                                            # set number of cores used for parallelized computing (check maximum number possible with detectCores()) #>  #> Optimization progress: #>  #>    |                                                                               |                                                                      |   0% #> Error in c(\"pmvnorm\", \"dmvnorm\", \"prior_tte\", \"Epgo_tte\", \"Ed3_tte\", \"EPsProg_tte\",     \"alpha\", \"beta\", \"steps1\", \"steps2\", \"stepm1\", \"stepm2\",     \"stepl1\", \"stepl2\", \"K\", \"N\", \"S\", \"gamma\", \"fixed\", \"xi2\",     \"xi3\", \"c2\", \"c3\", \"c02\", \"c03\", \"b1\", \"b2\", \"b3\", \"w\", \"HRgo\",     \"hr1\", \"hr2\", \"id1\", \"id2\"): unused arguments (\"prior_tte\", \"Epgo_tte\", \"Ed3_tte\", \"EPsProg_tte\", \"alpha\", \"beta\", \"steps1\", \"steps2\", \"stepm1\", \"stepm2\", \"stepl1\", \"stepl2\", \"K\", \"N\", \"S\", \"gamma\", \"fixed\", \"xi2\", \"xi3\", \"c2\", \"c3\", \"c02\", \"c03\", \"b1\", \"b2\", \"b3\", \"w\", \"HRgo\", \"hr1\", \"hr2\", \"id1\", \"id2\") res #> Error in eval(expr, envir, enclos): object 'res' not found cat(comment(res))                                        # displays the optimization sequence, start and finish date of the optimization procedure. #> Error in comment(res): object 'res' not found res <- optimal_tte(w = 0.3,                              # define parameters for prior   hr1 = 0.69, hr2 = 0.88, id1 = 210, id2 = 420,          # (https://web.imbi.uni-heidelberg.de/prior/)   d2min = 20, d2max = 100, stepd2 = 5,                   # define optimization set for d2   hrgomin = 0.7, hrgomax = 0.9, stephrgo = 0.05,         # define optimization set for HRgo   alpha = 0.05, beta = 0.1, xi2 = 0.7, xi3 = 0.7,        # drug development planning parameters   c2 = 0.75, c3 = 1, c02 = 100, c03 = 150,               # define fixed and variable costs for phase II and III   K = Inf, N = Inf, S = -Inf,                            # set maximal costs/ expected sample size for the program or minimal expected probability of a successful program   steps1 = 1,                                            # define lower boundary for \"small\"   stepm1 = 0.95,                                         # \"medium\"   stepl1 = 0.85,                                         # and \"large\" treatment effect size categories as proposed by IQWiG (2016)   b1 = 1000, b2 = 2000, b3 = 3000,                       # define expected benefit for a \"small\", \"medium\" and \"large\" treatment effect   gamma = 0,                                             # assume different/same population structures in phase II and III   fixed = FALSE,                                         # choose if true treatment effects are fixed or random   skipII = FALSE,                                        # choose if skipping phase II would be an option   num_cl = 1)                                            # set number of cores used for parallelized computing (check maximum number possible with detectCores()) #>  #> Optimization progress: #>  #>    |                                                                               |                                                                      |   0% #> Error in c(\"pmvnorm\", \"dmvnorm\", \"prior_tte\", \"Epgo_tte\", \"Ed3_tte\", \"EPsProg_tte\",     \"alpha\", \"beta\", \"steps1\", \"steps2\", \"stepm1\", \"stepm2\",     \"stepl1\", \"stepl2\", \"K\", \"N\", \"S\", \"gamma\", \"fixed\", \"xi2\",     \"xi3\", \"c2\", \"c3\", \"c02\", \"c03\", \"b1\", \"b2\", \"b3\", \"w\", \"HRgo\",     \"hr1\", \"hr2\", \"id1\", \"id2\"): unused arguments (\"prior_tte\", \"Epgo_tte\", \"Ed3_tte\", \"EPsProg_tte\", \"alpha\", \"beta\", \"steps1\", \"steps2\", \"stepm1\", \"stepm2\", \"stepl1\", \"stepl2\", \"K\", \"N\", \"S\", \"gamma\", \"fixed\", \"xi2\", \"xi3\", \"c2\", \"c3\", \"c02\", \"c03\", \"b1\", \"b2\", \"b3\", \"w\", \"HRgo\", \"hr1\", \"hr2\", \"id1\", \"id2\") res #> Error in eval(expr, envir, enclos): object 'res' not found cat(comment(res))                                        # displays the optimization sequence, start and finish date of the optimization procedure. #> Error in comment(res): object 'res' not found"},{"path":"https://sterniii3.github.io/drugdevelopR/reference/pgo_binary.html","id":null,"dir":"Reference","previous_headings":"","what":"probability to go to phase III — pgo_binary","title":"probability to go to phase III — pgo_binary","text":"probability go phase III","code":""},{"path":"https://sterniii3.github.io/drugdevelopR/reference/pgo_binary.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"probability to go to phase III — pgo_binary","text":"","code":"pgo_binary(RRgo, n2, p0, p11, p12, strategy, case)"},{"path":"https://sterniii3.github.io/drugdevelopR/reference/pgo_binary.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"probability to go to phase III — pgo_binary","text":"RRgo threshold value go/-go decision rule n2 total sample size phase II; must even number p0 assumed true rate control group p11 assumed true rate treatment group p12 assumed true rate treatment group strategy choose Strategy: 1 (\"best promising\"), 2 (\"promising\") 3 () case different cases: 1 (\"nogo\"), 21 (treatment 1 promising, treatment 2 ), 22 (treatment 2 promising, treatment 1 ), 31 (treatments promising, treatment 1 better), 32 (treatments promising, treatment 2 better)","code":""},{"path":"https://sterniii3.github.io/drugdevelopR/reference/pgo_binary.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"probability to go to phase III — pgo_binary","text":"function pgo_binary returns probability go phase III","code":""},{"path":"https://sterniii3.github.io/drugdevelopR/reference/pgo_binary.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"probability to go to phase III — pgo_binary","text":"","code":"res <- pgo_binary(RRgo = 0.8 ,n2 = 50 ,p0 = 0.6, p11 =  0.3, p12 = 0.5,strategy = 3, case = 31) #> Error in pgo_binary(RRgo = 0.8, n2 = 50, p0 = 0.6, p11 = 0.3, p12 = 0.5,     strategy = 3, case = 31): could not find function \"pgo_binary\""},{"path":"https://sterniii3.github.io/drugdevelopR/reference/pgo_normal.html","id":null,"dir":"Reference","previous_headings":"","what":"probability to go to phase III — pgo_normal","title":"probability to go to phase III — pgo_normal","text":"probability go phase III","code":""},{"path":"https://sterniii3.github.io/drugdevelopR/reference/pgo_normal.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"probability to go to phase III — pgo_normal","text":"","code":"pgo_normal(kappa, n2, Delta1, Delta2, in1, in2, sigma1, sigma2, fixed, rho)"},{"path":"https://sterniii3.github.io/drugdevelopR/reference/pgo_normal.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"probability to go to phase III — pgo_normal","text":"kappa threshold value go/-go decision rule n2 total sample size phase II; must even number Delta1 assumed true treatment effect standardized difference means Delta2 assumed true treatment effect standardized difference means strategy choose Strategy: 1 (\"best promising\"), 2 (\"promising\") 3 () case different cases: 1 (\"nogo\"), 21 (treatment 1 promising, treatment 2 ), 22 (treatment 2 promising, treatment 1 ), 31 (treatments promising, treatment 1 better), 32 (treatments promising, treatment 2 better)","code":""},{"path":"https://sterniii3.github.io/drugdevelopR/reference/pgo_normal.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"probability to go to phase III — pgo_normal","text":"function pgo_normal returns probability go phase III","code":""},{"path":"https://sterniii3.github.io/drugdevelopR/reference/pgo_normal.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"probability to go to phase III — pgo_normal","text":"","code":"res <- pgo_normal(kappa = 0.1, n2 = 50, Delta1 = 0.375, Delta2 = 0.625, strategy = 3, case = 31) #> Error in pgo_normal(kappa = 0.1, n2 = 50, Delta1 = 0.375, Delta2 = 0.625,     strategy = 3, case = 31): could not find function \"pgo_normal\""},{"path":"https://sterniii3.github.io/drugdevelopR/reference/ss_binary.html","id":null,"dir":"Reference","previous_headings":"","what":"total sample size for phase III trial with l treatments and equal allocation ratio\n l=1: according to Schoenfeld to guarantee power for the log rank test to detect treatment effect of phase II; \n l=2: according to Dunnett to guarantee y any-pair power (Horn & Vollandt)\n @param alpha significance level\n @param beta  1-beta power for calculation of sample size for phase III\n @param y hat_theta_2; estimator in phase II\n @param l l=1: according to Schoenfeld to guarantee power for the log rank test to detect treatment effect of phase II;  l=2: according to Dunnett to guarantee y any-pair power (Horn & Vollandt)\n @return the function ss_binary returns the total sample size for phase III trial with l treatments and equal allocation ratio\n @examples res <- ss_binary(alpha = 0.05, beta = 0.1, y = 0.5, l=1,) — ss_binary","title":"total sample size for phase III trial with l treatments and equal allocation ratio\n l=1: according to Schoenfeld to guarantee power for the log rank test to detect treatment effect of phase II; \n l=2: according to Dunnett to guarantee y any-pair power (Horn & Vollandt)\n @param alpha significance level\n @param beta  1-beta power for calculation of sample size for phase III\n @param y hat_theta_2; estimator in phase II\n @param l l=1: according to Schoenfeld to guarantee power for the log rank test to detect treatment effect of phase II;  l=2: according to Dunnett to guarantee y any-pair power (Horn & Vollandt)\n @return the function ss_binary returns the total sample size for phase III trial with l treatments and equal allocation ratio\n @examples res <- ss_binary(alpha = 0.05, beta = 0.1, y = 0.5, l=1,) — ss_binary","text":"total sample size phase III trial l treatments equal allocation ratio  l=1: according Schoenfeld guarantee power log rank test detect treatment effect phase II;   l=2: according Dunnett guarantee y -pair power (Horn & Vollandt)  @param alpha significance level  @param beta  1-beta power calculation sample size phase III  @param y hat_theta_2; estimator phase II  @param l l=1: according Schoenfeld guarantee power log rank test detect treatment effect phase II;  l=2: according Dunnett guarantee y -pair power (Horn & Vollandt)  @return function ss_binary returns total sample size phase III trial l treatments equal allocation ratio  @examples res <- ss_binary(alpha = 0.05, beta = 0.1, y = 0.5, l=1,)","code":""},{"path":"https://sterniii3.github.io/drugdevelopR/reference/ss_binary.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"total sample size for phase III trial with l treatments and equal allocation ratio\n l=1: according to Schoenfeld to guarantee power for the log rank test to detect treatment effect of phase II; \n l=2: according to Dunnett to guarantee y any-pair power (Horn & Vollandt)\n @param alpha significance level\n @param beta  1-beta power for calculation of sample size for phase III\n @param y hat_theta_2; estimator in phase II\n @param l l=1: according to Schoenfeld to guarantee power for the log rank test to detect treatment effect of phase II;  l=2: according to Dunnett to guarantee y any-pair power (Horn & Vollandt)\n @return the function ss_binary returns the total sample size for phase III trial with l treatments and equal allocation ratio\n @examples res <- ss_binary(alpha = 0.05, beta = 0.1, y = 0.5, l=1,) — ss_binary","text":"","code":"ss_binary(alpha, beta, y, l)"},{"path":"https://sterniii3.github.io/drugdevelopR/reference/ss_normal.html","id":null,"dir":"Reference","previous_headings":"","what":"total sample size for phase III trial with l treatments and equal allocation ratio\n l=1: according to Schoenfeld to guarantee power for the log rank test to detect treatment effect of phase II; \n l=2: according to Dunnett to guarantee y any-pair power (Horn & Vollandt)\n @param alpha significance level\n @param beta  1-beta power for calculation of sample size for phase III\n @param y hat_theta_2; estimator in phase II\n @param l l=1: according to Schoenfeld to guarantee power for the log rank test to detect treatment effect of phase II;  l=2: according to Dunnett to guarantee y any-pair power (Horn & Vollandt)\n @return the function ss_normal returns the total sample size for phase III trial with l treatments and equal allocation ratio\n @examples res <- ss_normal(alpha = 0.05, beta = 0.1, y = 0.5, l=1,) — ss_normal","title":"total sample size for phase III trial with l treatments and equal allocation ratio\n l=1: according to Schoenfeld to guarantee power for the log rank test to detect treatment effect of phase II; \n l=2: according to Dunnett to guarantee y any-pair power (Horn & Vollandt)\n @param alpha significance level\n @param beta  1-beta power for calculation of sample size for phase III\n @param y hat_theta_2; estimator in phase II\n @param l l=1: according to Schoenfeld to guarantee power for the log rank test to detect treatment effect of phase II;  l=2: according to Dunnett to guarantee y any-pair power (Horn & Vollandt)\n @return the function ss_normal returns the total sample size for phase III trial with l treatments and equal allocation ratio\n @examples res <- ss_normal(alpha = 0.05, beta = 0.1, y = 0.5, l=1,) — ss_normal","text":"total sample size phase III trial l treatments equal allocation ratio  l=1: according Schoenfeld guarantee power log rank test detect treatment effect phase II;   l=2: according Dunnett guarantee y -pair power (Horn & Vollandt)  @param alpha significance level  @param beta  1-beta power calculation sample size phase III  @param y hat_theta_2; estimator phase II  @param l l=1: according Schoenfeld guarantee power log rank test detect treatment effect phase II;  l=2: according Dunnett guarantee y -pair power (Horn & Vollandt)  @return function ss_normal returns total sample size phase III trial l treatments equal allocation ratio  @examples res <- ss_normal(alpha = 0.05, beta = 0.1, y = 0.5, l=1,)","code":""},{"path":"https://sterniii3.github.io/drugdevelopR/reference/ss_normal.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"total sample size for phase III trial with l treatments and equal allocation ratio\n l=1: according to Schoenfeld to guarantee power for the log rank test to detect treatment effect of phase II; \n l=2: according to Dunnett to guarantee y any-pair power (Horn & Vollandt)\n @param alpha significance level\n @param beta  1-beta power for calculation of sample size for phase III\n @param y hat_theta_2; estimator in phase II\n @param l l=1: according to Schoenfeld to guarantee power for the log rank test to detect treatment effect of phase II;  l=2: according to Dunnett to guarantee y any-pair power (Horn & Vollandt)\n @return the function ss_normal returns the total sample size for phase III trial with l treatments and equal allocation ratio\n @examples res <- ss_normal(alpha = 0.05, beta = 0.1, y = 0.5, l=1,) — ss_normal","text":"","code":"ss_normal(alpha, beta, y, l)"},{"path":"https://sterniii3.github.io/drugdevelopR/reference/utility23_binary.html","id":null,"dir":"Reference","previous_headings":"","what":"Utility function — utility23_binary","title":"Utility function — utility23_binary","text":"Utility function","code":""},{"path":"https://sterniii3.github.io/drugdevelopR/reference/utility23_binary.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Utility function — utility23_binary","text":"","code":"utility23_binary(   n2,   RRgo,   w,   p0,   p11,   p12,   in1,   in2,   alpha,   beta,   c2,   c3,   c02,   c03,   b1,   b2,   b3 )"},{"path":"https://sterniii3.github.io/drugdevelopR/reference/utility23_binary.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Utility function — utility23_binary","text":"n2 total sample size phase II; must even number RRgo threshold value go/-go decision rule w weight mixture prior distribution p0 assumed true rate control group p11 assumed true rate treatment group p12 assumed true rate treatment group in1 amount information p11 terms sample size in2 amount information p12 terms sample size alpha significance level beta 1-beta power calculation sample size phase III c2 variable per-patient cost phase II c3 variable per-patient cost phase III c02 fixed cost phase II c03 fixed cost phase III b1 expected gain effect size category \"small\" b2 expected gain effect size category \"medium\" b3 expected gain effect size category \"large\" Adj adjustment parameter K constraint costs program, default: Inf, e.g. constraint N constraint total expected sample size program, default: Inf, e.g. constraint S constraint expected probability successful program, default: -Inf, e.g. constraint fixed choose true treatment effects fixed random","code":""},{"path":"https://sterniii3.github.io/drugdevelopR/reference/utility23_binary.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Utility function — utility23_binary","text":"output function utility23_binary expected utility program conservative decision rule sample size calculation: use lower bound one-sided confidence intervall","code":""},{"path":"https://sterniii3.github.io/drugdevelopR/reference/utility23_binary.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Utility function — utility23_binary","text":"","code":"res <- utility23_binary(n2 = 50, RRgo = 0.8,  w = 0.3,                                   p0 = 0.6, p11 =  0.3, p12 = 0.5,                                   in1 = 300, in2 = 600, alpha = 0.025, beta = 0.1,                                  c2 = 0.75, c3 = 1, c02 = 100, c03 = 150,                                  b1 = 1000, b2 = 2000, b3 = 3000) #> Error in utility23_binary(n2 = 50, RRgo = 0.8, w = 0.3, p0 = 0.6, p11 = 0.3,     p12 = 0.5, in1 = 300, in2 = 600, alpha = 0.025, beta = 0.1,     c2 = 0.75, c3 = 1, c02 = 100, c03 = 150, b1 = 1000, b2 = 2000,     b3 = 3000): could not find function \"utility23_binary\""},{"path":"https://sterniii3.github.io/drugdevelopR/reference/utility23_normal.html","id":null,"dir":"Reference","previous_headings":"","what":"Utility function — utility23_normal","title":"Utility function — utility23_normal","text":"Utility function","code":""},{"path":"https://sterniii3.github.io/drugdevelopR/reference/utility23_normal.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Utility function — utility23_normal","text":"","code":"utility23_normal(   n2,   kappa,   w,   Delta1,   Delta2,   in1,   in2,   a,   b,   alpha,   beta,   c2,   c3,   c02,   c03,   b1,   b2,   b3 )"},{"path":"https://sterniii3.github.io/drugdevelopR/reference/utility23_normal.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Utility function — utility23_normal","text":"n2 total sample size phase II; must even number kappa threshold value go/-go decision rule w weight mixture prior distribution Delta1 assumed true treatment effect standardized difference means Delta2 assumed true treatment effect standardized difference means in1 amount information Delta1 terms sample size in2 amount information Delta2 terms sample size lower boundary truncation b upper boundary truncation alpha significance level beta 1-beta power calculation sample size phase III c2 variable per-patient cost phase II c3 variable per-patient cost phase III c02 fixed cost phase II c03 fixed cost phase III b1 expected gain effect size category \"small\" b2 expected gain effect size category \"medium\" b3 expected gain effect size category \"large\" step1 lower boundary effect size step2 upper boundary effect size","code":""},{"path":"https://sterniii3.github.io/drugdevelopR/reference/utility23_normal.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Utility function — utility23_normal","text":"output function utility23_normal expected utility program conservative sample size calculation: use lower bound one-sided confidence intervall","code":""},{"path":"https://sterniii3.github.io/drugdevelopR/reference/utility23_normal.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Utility function — utility23_normal","text":"","code":"res <- utility23_normal(kappa = 0.1, n2 = 50,  alpha = 0.025, beta = 0.1, w = 0.3,                                  Delta1 = 0.375, Delta2 = 0.625, in1 = 300, in2 = 600,                                   a = 0.25, b = 0.75,                                   c2 = 0.675, c3 = 0.72, c02 = 15, c03 = 20,                                  b1 = 3000, b2 = 8000, b3 = 10000) #> Error in utility23_normal(kappa = 0.1, n2 = 50, alpha = 0.025, beta = 0.1,     w = 0.3, Delta1 = 0.375, Delta2 = 0.625, in1 = 300, in2 = 600,     a = 0.25, b = 0.75, c2 = 0.675, c3 = 0.72, c02 = 15, c03 = 20,     b1 = 3000, b2 = 8000, b3 = 10000): could not find function \"utility23_normal\""},{"path":"https://sterniii3.github.io/drugdevelopR/reference/utility2_binary.html","id":null,"dir":"Reference","previous_headings":"","what":"Utility function — utility2_binary","title":"Utility function — utility2_binary","text":"Utility function","code":""},{"path":"https://sterniii3.github.io/drugdevelopR/reference/utility2_binary.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Utility function — utility2_binary","text":"","code":"utility2_binary(   n2,   RRgo,   w,   p0,   p11,   p12,   in1,   in2,   alpha,   beta,   c2,   c3,   c02,   c03,   K,   N,   S,   b1,   b2,   b3,   case,   fixed )"},{"path":"https://sterniii3.github.io/drugdevelopR/reference/utility2_binary.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Utility function — utility2_binary","text":"n2 total sample size phase II; must even number RRgo threshold value go/-go decision rule w weight mixture prior distribution p0 assumed true rate control group p11 assumed true rate treatment group p12 assumed true rate treatment group in1 amount information p11 terms sample size in2 amount information p12 terms sample size alpha significance level beta 1-beta power calculation sample size phase III c2 variable per-patient cost phase II c3 variable per-patient cost phase III c02 fixed cost phase II c03 fixed cost phase III K constraint costs program, default: Inf, e.g. constraint N constraint total expected sample size program, default: Inf, e.g. constraint S constraint expected probability successful program, default: -Inf, e.g. constraint b1 expected gain effect size category \"small\" b2 expected gain effect size category \"medium\" b3 expected gain effect size category \"large\" fixed choose true treatment effects fixed random Adj adjustment parameter","code":""},{"path":"https://sterniii3.github.io/drugdevelopR/reference/utility2_binary.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Utility function — utility2_binary","text":"output function utility2_binary expected utility program conservative decision rule sample size calculation: use lower bound one-sided confidence intervall","code":""},{"path":"https://sterniii3.github.io/drugdevelopR/reference/utility2_binary.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Utility function — utility2_binary","text":"","code":"res <- utility2_binary(n2 = 50, RRgo = 0.8,  w = 0.3,                                   p0 = 0.6, p11 =  0.3, p12 = 0.5,                                   in1 = 300, in2 = 600, alpha = 0.025, beta = 0.1,                                  c2 = 0.75, c3 = 1, c02 = 100, c03 = 150,                                  K = Inf, N = Inf, S = -Inf,                                  b1 = 1000, b2 = 2000, b3 = 3000,                                   case = 2, fixed = FALSE) #> Error in utility2_binary(n2 = 50, RRgo = 0.8, w = 0.3, p0 = 0.6, p11 = 0.3,     p12 = 0.5, in1 = 300, in2 = 600, alpha = 0.025, beta = 0.1,     c2 = 0.75, c3 = 1, c02 = 100, c03 = 150, K = Inf, N = Inf,     S = -Inf, b1 = 1000, b2 = 2000, b3 = 3000, case = 2, fixed = FALSE): could not find function \"utility2_binary\""},{"path":"https://sterniii3.github.io/drugdevelopR/reference/utility2_normal.html","id":null,"dir":"Reference","previous_headings":"","what":"Utility function — utility2_normal","title":"Utility function — utility2_normal","text":"Utility function","code":""},{"path":"https://sterniii3.github.io/drugdevelopR/reference/utility2_normal.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Utility function — utility2_normal","text":"","code":"utility2_normal(   n2,   kappa,   w,   Delta1,   Delta2,   in1,   in2,   a,   b,   alpha,   beta,   c2,   c3,   c02,   c03,   K,   N,   S,   b1,   b2,   b3,   case,   fixed )"},{"path":"https://sterniii3.github.io/drugdevelopR/reference/utility2_normal.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Utility function — utility2_normal","text":"n2 total sample size phase II; must even number kappa threshold value go/-go decision rule w weight mixture prior distribution Delta1 assumed true treatment effect standardized difference means Delta2 assumed true treatment effect standardized difference means in1 amount information Delta1 terms sample size in2 amount information Delta2 terms sample size lower boundary truncation b upper boundary truncation alpha significance level beta 1-beta power calculation sample size phase III c2 variable per-patient cost phase II c3 variable per-patient cost phase III c02 fixed cost phase II c03 fixed cost phase III K constraint costs program, default: Inf, e.g. constraint N constraint total expected sample size program, default: Inf, e.g. constraint S constraint expected probability successful program, default: -Inf, e.g. constraint b1 expected gain effect size category \"small\" b2 expected gain effect size category \"medium\" b3 expected gain effect size category \"large\" case choose case: \"least 1, 2 3 significant trials needed approval\" fixed choose true treatment effects fixed random step1 lower boundary effect size step2 upper boundary effect size","code":""},{"path":"https://sterniii3.github.io/drugdevelopR/reference/utility2_normal.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Utility function — utility2_normal","text":"output function utility2_normal expected utility program conservative sample size calculation: use lower bound one-sided confidence intervall","code":""},{"path":"https://sterniii3.github.io/drugdevelopR/reference/utility2_normal.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Utility function — utility2_normal","text":"","code":"res <- utility2_normal(kappa = 0.1, n2 = 50,  alpha = 0.025, beta = 0.1, w = 0.3,                                  step1 = 0, step2 = 0.5,                                  Delta1 = 0.375, Delta2 = 0.625, in1 = 300, in2 = 600,                                   a = 0.25, b = 0.75,                                   c2 = 0.675, c3 = 0.72, c02 = 15, c03 = 20,                                  K = Inf, N = Inf, S = -Inf,                                   b1 = 3000, b2 = 8000, b3 = 10000,                                   case = 2, fixed = FALSE) #> Error in utility2_normal(kappa = 0.1, n2 = 50, alpha = 0.025, beta = 0.1,     w = 0.3, step1 = 0, step2 = 0.5, Delta1 = 0.375, Delta2 = 0.625,     in1 = 300, in2 = 600, a = 0.25, b = 0.75, c2 = 0.675, c3 = 0.72,     c02 = 15, c03 = 20, K = Inf, N = Inf, S = -Inf, b1 = 3000,     b2 = 8000, b3 = 10000, case = 2, fixed = FALSE): could not find function \"utility2_normal\""},{"path":"https://sterniii3.github.io/drugdevelopR/reference/utility3_binary.html","id":null,"dir":"Reference","previous_headings":"","what":"Utility function — utility3_binary","title":"Utility function — utility3_binary","text":"Utility function","code":""},{"path":"https://sterniii3.github.io/drugdevelopR/reference/utility3_binary.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Utility function — utility3_binary","text":"","code":"utility3_binary(   n2,   RRgo,   w,   p0,   p11,   p12,   in1,   in2,   alpha,   beta,   c2,   c3,   c02,   c03,   K,   N,   S,   b1,   b2,   b3,   case,   fixed )"},{"path":"https://sterniii3.github.io/drugdevelopR/reference/utility3_binary.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Utility function — utility3_binary","text":"n2 total sample size phase II; must even number RRgo threshold value go/-go decision rule w weight mixture prior distribution p0 assumed true rate control group p11 assumed true rate treatment group p12 assumed true rate treatment group in1 amount information p11 terms sample size in2 amount information p12 terms sample size alpha significance level beta 1-beta power calculation sample size phase III c2 variable per-patient cost phase II c3 variable per-patient cost phase III c02 fixed cost phase II c03 fixed cost phase III K constraint costs program, default: Inf, e.g. constraint N constraint total expected sample size program, default: Inf, e.g. constraint S constraint expected probability successful program, default: -Inf, e.g. constraint b1 expected gain effect size category \"small\" b2 expected gain effect size category \"medium\" b3 expected gain effect size category \"large\" fixed choose true treatment effects fixed random Adj adjustment parameter","code":""},{"path":"https://sterniii3.github.io/drugdevelopR/reference/utility3_binary.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Utility function — utility3_binary","text":"output function utility3_binary expected utility program conservative decision rule sample size calculation: use lower bound one-sided confidence intervall","code":""},{"path":"https://sterniii3.github.io/drugdevelopR/reference/utility3_binary.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Utility function — utility3_binary","text":"","code":"res <- utility3_binary(n2 = 50, RRgo = 0.8,  w = 0.3,                                   p0 = 0.6, p11 =  0.3, p12 = 0.5,                                   in1 = 300, in2 = 600, alpha = 0.025, beta = 0.1,                                  c2 = 0.75, c3 = 1, c02 = 100, c03 = 150,                                  K = Inf, N = Inf, S = -Inf,                                  b1 = 1000, b2 = 2000, b3 = 3000,                                   case = 2, fixed = FALSE) #> Error in utility3_binary(n2 = 50, RRgo = 0.8, w = 0.3, p0 = 0.6, p11 = 0.3,     p12 = 0.5, in1 = 300, in2 = 600, alpha = 0.025, beta = 0.1,     c2 = 0.75, c3 = 1, c02 = 100, c03 = 150, K = Inf, N = Inf,     S = -Inf, b1 = 1000, b2 = 2000, b3 = 3000, case = 2, fixed = FALSE): could not find function \"utility3_binary\""},{"path":"https://sterniii3.github.io/drugdevelopR/reference/utility3_normal.html","id":null,"dir":"Reference","previous_headings":"","what":"Utility function — utility3_normal","title":"Utility function — utility3_normal","text":"Utility function","code":""},{"path":"https://sterniii3.github.io/drugdevelopR/reference/utility3_normal.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Utility function — utility3_normal","text":"","code":"utility3_normal(   n2,   kappa,   w,   Delta1,   Delta2,   in1,   in2,   a,   b,   alpha,   beta,   c2,   c3,   c02,   c03,   K,   N,   S,   b1,   b2,   b3,   case,   fixed )"},{"path":"https://sterniii3.github.io/drugdevelopR/reference/utility3_normal.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Utility function — utility3_normal","text":"n2 total sample size phase II; must even number kappa threshold value go/-go decision rule w weight mixture prior distribution Delta1 assumed true treatment effect standardized difference means Delta2 assumed true treatment effect standardized difference means in1 amount information Delta1 terms sample size in2 amount information Delta2 terms sample size lower boundary truncation b upper boundary truncation alpha significance level beta 1-beta power calculation sample size phase III c2 variable per-patient cost phase II c3 variable per-patient cost phase III c02 fixed cost phase II c03 fixed cost phase III K constraint costs program, default: Inf, e.g. constraint N constraint total expected sample size program, default: Inf, e.g. constraint S constraint expected probability successful program, default: -Inf, e.g. constraint b1 expected gain effect size category \"small\" b2 expected gain effect size category \"medium\" b3 expected gain effect size category \"large\" case choose case: \"least 1, 2 3 significant trials needed approval\" fixed choose true treatment effects fixed random step1 lower boundary effect size step2 upper boundary effect size","code":""},{"path":"https://sterniii3.github.io/drugdevelopR/reference/utility3_normal.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Utility function — utility3_normal","text":"output function utility3_normal expected utility program conservative sample size calculation: use lower bound one-sided confidence intervall","code":""},{"path":"https://sterniii3.github.io/drugdevelopR/reference/utility3_normal.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Utility function — utility3_normal","text":"","code":"res <- utility3_normal(kappa = 0.1, n2 = 50,  alpha = 0.025, beta = 0.1, w = 0.3,                                  step1 = 0, step2 = 0.5,                                  Delta1 = 0.375, Delta2 = 0.625, in1 = 300, in2 = 600,                                   a = 0.25, b = 0.75,                                   c2 = 0.675, c3 = 0.72, c02 = 15, c03 = 20,                                  K = Inf, N = Inf, S = -Inf,                                   b1 = 3000, b2 = 8000, b3 = 10000,                                   case = 2, fixed = FALSE) #> Error in utility3_normal(kappa = 0.1, n2 = 50, alpha = 0.025, beta = 0.1,     w = 0.3, step1 = 0, step2 = 0.5, Delta1 = 0.375, Delta2 = 0.625,     in1 = 300, in2 = 600, a = 0.25, b = 0.75, c2 = 0.675, c3 = 0.72,     c02 = 15, c03 = 20, K = Inf, N = Inf, S = -Inf, b1 = 3000,     b2 = 8000, b3 = 10000, case = 2, fixed = FALSE): could not find function \"utility3_normal\""},{"path":"https://sterniii3.github.io/drugdevelopR/reference/utility4_binary.html","id":null,"dir":"Reference","previous_headings":"","what":"Utility function — utility4_binary","title":"Utility function — utility4_binary","text":"Utility function","code":""},{"path":"https://sterniii3.github.io/drugdevelopR/reference/utility4_binary.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Utility function — utility4_binary","text":"","code":"utility4_binary(   n2,   RRgo,   w,   p0,   p11,   p12,   in1,   in2,   alpha,   beta,   c2,   c3,   c02,   c03,   K,   N,   S,   b1,   b2,   b3,   case,   fixed )"},{"path":"https://sterniii3.github.io/drugdevelopR/reference/utility4_binary.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Utility function — utility4_binary","text":"n2 total sample size phase II; must even number RRgo threshold value go/-go decision rule w weight mixture prior distribution p0 assumed true rate control group p11 assumed true rate treatment group p12 assumed true rate treatment group in1 amount information p11 terms sample size in2 amount information p12 terms sample size alpha significance level beta 1-beta power calculation sample size phase III c2 variable per-patient cost phase II c3 variable per-patient cost phase III c02 fixed cost phase II c03 fixed cost phase III K constraint costs program, default: Inf, e.g. constraint N constraint total expected sample size program, default: Inf, e.g. constraint S constraint expected probability successful program, default: -Inf, e.g. constraint b1 expected gain effect size category \"small\" b2 expected gain effect size category \"medium\" b3 expected gain effect size category \"large\" fixed choose true treatment effects fixed random Adj adjustment parameter","code":""},{"path":"https://sterniii3.github.io/drugdevelopR/reference/utility4_binary.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Utility function — utility4_binary","text":"output function utility4_binary expected utility program conservative decision rule sample size calculation: use lower bound one-sided confidence intervall","code":""},{"path":"https://sterniii3.github.io/drugdevelopR/reference/utility4_binary.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Utility function — utility4_binary","text":"","code":"res <- utility4_binary(n2 = 50, RRgo = 0.8,  w = 0.3,                                   p0 = 0.6, p11 =  0.3, p12 = 0.5,                                   in1 = 300, in2 = 600, alpha = 0.025, beta = 0.1,                                  c2 = 0.75, c3 = 1, c02 = 100, c03 = 150,                                  K = Inf, N = Inf, S = -Inf,                                  b1 = 1000, b2 = 2000, b3 = 3000,                                   case = 3, fixed = FALSE) #> Error in utility4_binary(n2 = 50, RRgo = 0.8, w = 0.3, p0 = 0.6, p11 = 0.3,     p12 = 0.5, in1 = 300, in2 = 600, alpha = 0.025, beta = 0.1,     c2 = 0.75, c3 = 1, c02 = 100, c03 = 150, K = Inf, N = Inf,     S = -Inf, b1 = 1000, b2 = 2000, b3 = 3000, case = 3, fixed = FALSE): could not find function \"utility4_binary\""},{"path":"https://sterniii3.github.io/drugdevelopR/reference/utility4_normal.html","id":null,"dir":"Reference","previous_headings":"","what":"Utility function — utility4_normal","title":"Utility function — utility4_normal","text":"Utility function","code":""},{"path":"https://sterniii3.github.io/drugdevelopR/reference/utility4_normal.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Utility function — utility4_normal","text":"","code":"utility4_normal(   n2,   kappa,   w,   Delta1,   Delta2,   in1,   in2,   a,   b,   alpha,   beta,   c2,   c3,   c02,   c03,   K,   N,   S,   b1,   b2,   b3,   case,   fixed )"},{"path":"https://sterniii3.github.io/drugdevelopR/reference/utility4_normal.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Utility function — utility4_normal","text":"n2 total sample size phase II; must even number kappa threshold value go/-go decision rule w weight mixture prior distribution Delta1 assumed true treatment effect standardized difference means Delta2 assumed true treatment effect standardized difference means in1 amount information Delta1 terms sample size in2 amount information Delta2 terms sample size lower boundary truncation b upper boundary truncation alpha significance level beta 1-beta power calculation sample size phase III c2 variable per-patient cost phase II c3 variable per-patient cost phase III c02 fixed cost phase II c03 fixed cost phase III K constraint costs program, default: Inf, e.g. constraint N constraint total expected sample size program, default: Inf, e.g. constraint S constraint expected probability successful program, default: -Inf, e.g. constraint b1 expected gain effect size category \"small\" b2 expected gain effect size category \"medium\" b3 expected gain effect size category \"large\" case choose case: \"least 1, 2 3 significant trials needed approval\" fixed choose true treatment effects fixed random step1 lower boundary effect size step2 upper boundary effect size","code":""},{"path":"https://sterniii3.github.io/drugdevelopR/reference/utility4_normal.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Utility function — utility4_normal","text":"output function utility4_normal expected utility program conservative sample size calculation: use lower bound one-sided confidence intervall","code":""},{"path":"https://sterniii3.github.io/drugdevelopR/reference/utility4_normal.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Utility function — utility4_normal","text":"","code":"res <- utility4_normal(kappa = 0.1, n2 = 50,  alpha = 0.025, beta = 0.1, w = 0.3,                                  step1 = 0, step2 = 0.5,                                  Delta1 = 0.375, Delta2 = 0.625, in1 = 300, in2 = 600,                                   a = 0.25, b = 0.75,                                   c2 = 0.675, c3 = 0.72, c02 = 15, c03 = 20,                                  K = Inf, N = Inf, S = -Inf,                                   b1 = 3000, b2 = 8000, b3 = 10000,                                   case = 3, fixed = FALSE) #> Error in utility4_normal(kappa = 0.1, n2 = 50, alpha = 0.025, beta = 0.1,     w = 0.3, step1 = 0, step2 = 0.5, Delta1 = 0.375, Delta2 = 0.625,     in1 = 300, in2 = 600, a = 0.25, b = 0.75, c2 = 0.675, c3 = 0.72,     c02 = 15, c03 = 20, K = Inf, N = Inf, S = -Inf, b1 = 3000,     b2 = 8000, b3 = 10000, case = 3, fixed = FALSE): could not find function \"utility4_normal\""},{"path":"https://sterniii3.github.io/drugdevelopR/reference/utility_binary_L.html","id":null,"dir":"Reference","previous_headings":"","what":"Utility function — utility_binary_L","title":"Utility function — utility_binary_L","text":"Utility function","code":""},{"path":"https://sterniii3.github.io/drugdevelopR/reference/utility_binary_L.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Utility function — utility_binary_L","text":"","code":"utility_binary_L(   n2,   RRgo,   Adj,   w,   p0,   p11,   p12,   in1,   in2,   alpha,   beta,   c2,   c3,   c02,   c03,   K,   N,   S,   steps1,   stepm1,   stepl1,   b1,   b2,   b3,   fixed )"},{"path":"https://sterniii3.github.io/drugdevelopR/reference/utility_binary_L.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Utility function — utility_binary_L","text":"n2 total sample size phase II; must even number RRgo threshold value go/-go decision rule Adj adjustment parameter w weight mixture prior distribution p0 assumed true rate control group p11 assumed true rate treatment group p12 assumed true rate treatment group in1 amount information p11 terms sample size in2 amount information p12 terms sample size alpha significance level beta 1-beta power calculation sample size phase III c2 variable per-patient cost phase II c3 variable per-patient cost phase III c02 fixed cost phase II c03 fixed cost phase III K constraint costs program, default: Inf, e.g. constraint N constraint total expected sample size program, default: Inf, e.g. constraint S constraint expected probability successful program, default: -Inf, e.g. constraint steps1 lower boundary effect size category \"small\" RR scale, default: 1 stepm1 lower boundary effect size category \"medium\" RR scale = upper boundary effect size category \"small\" RR scale, default: 0.95 stepl1 lower boundary effect size category \"large\" RR scale = upper boundary effect size category \"medium\" RR scale, default: 0.85 b1 expected gain effect size category \"small\" b2 expected gain effect size category \"medium\" b3 expected gain effect size category \"large\" fixed choose true treatment effects fixed random, TRUE Delta1 used fixed effect","code":""},{"path":"https://sterniii3.github.io/drugdevelopR/reference/utility_binary_L.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Utility function — utility_binary_L","text":"output function utility_binary_L expected utility program conservative sample size calculation: use lower bound one-sided confidence intervall","code":""},{"path":"https://sterniii3.github.io/drugdevelopR/reference/utility_binary_L.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Utility function — utility_binary_L","text":"","code":"res <- utility_binary_L(n2 = 50, RRgo = 0.8, Adj = 0, w = 0.3,                                   p0 = 0.6, p11 =  0.3, p12 = 0.5,                                   in1 = 300, in2 = 600, alpha = 0.025, beta = 0.1,                                  c2 = 0.75, c3 = 1, c02 = 100, c03 = 150,                                  K = Inf, N = Inf, S = -Inf,                                  steps1 = 1, stepm1 = 0.95, stepl1 = 0.85,                                  b1 = 1000, b2 = 2000, b3 = 3000,                                   fixed = FALSE) #> Error in utility_binary_L(n2 = 50, RRgo = 0.8, Adj = 0, w = 0.3, p0 = 0.6,     p11 = 0.3, p12 = 0.5, in1 = 300, in2 = 600, alpha = 0.025,     beta = 0.1, c2 = 0.75, c3 = 1, c02 = 100, c03 = 150, K = Inf,     N = Inf, S = -Inf, steps1 = 1, stepm1 = 0.95, stepl1 = 0.85,     b1 = 1000, b2 = 2000, b3 = 3000, fixed = FALSE): could not find function \"utility_binary_L\""},{"path":"https://sterniii3.github.io/drugdevelopR/reference/utility_binary_L2.html","id":null,"dir":"Reference","previous_headings":"","what":"Utility function — utility_binary_L2","title":"Utility function — utility_binary_L2","text":"Utility function","code":""},{"path":"https://sterniii3.github.io/drugdevelopR/reference/utility_binary_L2.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Utility function — utility_binary_L2","text":"","code":"utility_binary_L2(   n2,   RRgo,   Adj,   w,   p0,   p11,   p12,   in1,   in2,   alpha,   beta,   c2,   c3,   c02,   c03,   K,   N,   S,   steps1,   stepm1,   stepl1,   b1,   b2,   b3,   fixed )"},{"path":"https://sterniii3.github.io/drugdevelopR/reference/utility_binary_L2.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Utility function — utility_binary_L2","text":"n2 total sample size phase II; must even number RRgo threshold value go/-go decision rule Adj adjustment parameter w weight mixture prior distribution p0 assumed true rate control group p11 assumed true rate treatment group p12 assumed true rate treatment group in1 amount information p11 terms sample size in2 amount information p12 terms sample size alpha significance level beta 1-beta power calculation sample size phase III c2 variable per-patient cost phase II c3 variable per-patient cost phase III c02 fixed cost phase II c03 fixed cost phase III K constraint costs program, default: Inf, e.g. constraint N constraint total expected sample size program, default: Inf, e.g. constraint S constraint expected probability successful program, default: -Inf, e.g. constraint steps1 lower boundary effect size category \"small\" RR scale, default: 1 stepm1 lower boundary effect size category \"medium\" RR scale = upper boundary effect size category \"small\" RR scale, default: 0.95 stepl1 lower boundary effect size category \"large\" RR scale = upper boundary effect size category \"medium\" RR scale, default: 0.85 b1 expected gain effect size category \"small\" b2 expected gain effect size category \"medium\" b3 expected gain effect size category \"large\" fixed choose true treatment effects fixed random, TRUE Delta1 used fixed effect","code":""},{"path":"https://sterniii3.github.io/drugdevelopR/reference/utility_binary_L2.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Utility function — utility_binary_L2","text":"output function utility_binary_L2 expected utility program conservative decision rule sample size calculation: use lower bound one-sided confidence intervall","code":""},{"path":"https://sterniii3.github.io/drugdevelopR/reference/utility_binary_L2.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Utility function — utility_binary_L2","text":"","code":"res <- utility_binary_L2(n2 = 50, RRgo = 0.8, Adj = 0, w = 0.3,                                   p0 = 0.6, p11 =  0.3, p12 = 0.5,                                   in1 = 300, in2 = 600, alpha = 0.025, beta = 0.1,                                  c2 = 0.75, c3 = 1, c02 = 100, c03 = 150,                                  K = Inf, N = Inf, S = -Inf,                                  steps1 = 1, stepm1 = 0.95, stepl1 = 0.85,                                  b1 = 1000, b2 = 2000, b3 = 3000,                                   fixed = FALSE) #> Error in utility_binary_L2(n2 = 50, RRgo = 0.8, Adj = 0, w = 0.3, p0 = 0.6,     p11 = 0.3, p12 = 0.5, in1 = 300, in2 = 600, alpha = 0.025,     beta = 0.1, c2 = 0.75, c3 = 1, c02 = 100, c03 = 150, K = Inf,     N = Inf, S = -Inf, steps1 = 1, stepm1 = 0.95, stepl1 = 0.85,     b1 = 1000, b2 = 2000, b3 = 3000, fixed = FALSE): could not find function \"utility_binary_L2\""},{"path":"https://sterniii3.github.io/drugdevelopR/reference/utility_binary_R.html","id":null,"dir":"Reference","previous_headings":"","what":"Utility function — utility_binary_R","title":"Utility function — utility_binary_R","text":"Utility function","code":""},{"path":"https://sterniii3.github.io/drugdevelopR/reference/utility_binary_R.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Utility function — utility_binary_R","text":"","code":"utility_binary_R(   n2,   RRgo,   Adj,   w,   p0,   p11,   p12,   in1,   in2,   alpha,   beta,   c2,   c3,   c02,   c03,   K,   N,   S,   steps1,   stepm1,   stepl1,   b1,   b2,   b3,   fixed )"},{"path":"https://sterniii3.github.io/drugdevelopR/reference/utility_binary_R.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Utility function — utility_binary_R","text":"n2 total sample size phase II; must even number RRgo threshold value go/-go decision rule Adj adjustment parameter w weight mixture prior distribution p0 assumed true rate control group p11 assumed true rate treatment group p12 assumed true rate treatment group in1 amount information p11 terms sample size in2 amount information p12 terms sample size alpha significance level beta 1-beta power calculation sample size phase III c2 variable per-patient cost phase II c3 variable per-patient cost phase III c02 fixed cost phase II c03 fixed cost phase III K constraint costs program, default: Inf, e.g. constraint N constraint total expected sample size program, default: Inf, e.g. constraint S constraint expected probability successful program, default: -Inf, e.g. constraint steps1 lower boundary effect size category \"small\" RR scale, default: 1 stepm1 lower boundary effect size category \"medium\" RR scale = upper boundary effect size category \"small\" RR scale, default: 0.95 stepl1 lower boundary effect size category \"large\" RR scale = upper boundary effect size category \"medium\" RR scale, default: 0.85 b1 expected gain effect size category \"small\" b2 expected gain effect size category \"medium\" b3 expected gain effect size category \"large\" fixed choose true treatment effects fixed random, TRUE Delta1 used fixed effect","code":""},{"path":"https://sterniii3.github.io/drugdevelopR/reference/utility_binary_R.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Utility function — utility_binary_R","text":"output function utility_binary_R expected utility program conservative sample size calculation: use retention factor","code":""},{"path":"https://sterniii3.github.io/drugdevelopR/reference/utility_binary_R.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Utility function — utility_binary_R","text":"","code":"res <- utility_binary_R(n2 = 50, RRgo = 0.8, Adj = 0, w = 0.3,                                   p0 = 0.6, p11 =  0.3, p12 = 0.5,                                   in1 = 300, in2 = 600, alpha = 0.025, beta = 0.1,                                  c2 = 0.75, c3 = 1, c02 = 100, c03 = 150,                                  K = Inf, N = Inf, S = -Inf,                                  steps1 = 1, stepm1 = 0.95, stepl1 = 0.85,                                  b1 = 1000, b2 = 2000, b3 = 3000,                                   fixed = FALSE) #> Error in utility_binary_R(n2 = 50, RRgo = 0.8, Adj = 0, w = 0.3, p0 = 0.6,     p11 = 0.3, p12 = 0.5, in1 = 300, in2 = 600, alpha = 0.025,     beta = 0.1, c2 = 0.75, c3 = 1, c02 = 100, c03 = 150, K = Inf,     N = Inf, S = -Inf, steps1 = 1, stepm1 = 0.95, stepl1 = 0.85,     b1 = 1000, b2 = 2000, b3 = 3000, fixed = FALSE): could not find function \"utility_binary_R\""},{"path":"https://sterniii3.github.io/drugdevelopR/reference/utility_binary_R2.html","id":null,"dir":"Reference","previous_headings":"","what":"Utility function — utility_binary_R2","title":"Utility function — utility_binary_R2","text":"Utility function","code":""},{"path":"https://sterniii3.github.io/drugdevelopR/reference/utility_binary_R2.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Utility function — utility_binary_R2","text":"","code":"utility_binary_R2(   n2,   RRgo,   Adj,   w,   p0,   p11,   p12,   in1,   in2,   alpha,   beta,   c2,   c3,   c02,   c03,   K,   N,   S,   steps1,   stepm1,   stepl1,   b1,   b2,   b3,   fixed )"},{"path":"https://sterniii3.github.io/drugdevelopR/reference/utility_binary_R2.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Utility function — utility_binary_R2","text":"n2 total sample size phase II; must even number RRgo threshold value go/-go decision rule Adj adjustment parameter w weight mixture prior distribution p0 assumed true rate control group p11 assumed true rate treatment group p12 assumed true rate treatment group in1 amount information p11 terms sample size in2 amount information p12 terms sample size alpha significance level beta 1-beta power calculation sample size phase III c2 variable per-patient cost phase II c3 variable per-patient cost phase III c02 fixed cost phase II c03 fixed cost phase III K constraint costs program, default: Inf, e.g. constraint N constraint total expected sample size program, default: Inf, e.g. constraint S constraint expected probability successful program, default: -Inf, e.g. constraint steps1 lower boundary effect size category \"small\" RR scale, default: 1 stepm1 lower boundary effect size category \"medium\" RR scale = upper boundary effect size category \"small\" RR scale, default: 0.95 stepl1 lower boundary effect size category \"large\" RR scale = upper boundary effect size category \"medium\" RR scale, default: 0.85 b1 expected gain effect size category \"small\" b2 expected gain effect size category \"medium\" b3 expected gain effect size category \"large\" fixed choose true treatment effects fixed random, TRUE Delta1 used fixed effect","code":""},{"path":"https://sterniii3.github.io/drugdevelopR/reference/utility_binary_R2.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Utility function — utility_binary_R2","text":"output function utility_binary_R2 expected utility program conservative decision rule sample size calculation: use retention factor","code":""},{"path":"https://sterniii3.github.io/drugdevelopR/reference/utility_binary_R2.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Utility function — utility_binary_R2","text":"","code":"res <- utility_binary_R2(n2 = 50, RRgo = 0.8, Adj = 0, w = 0.3,                                   p0 = 0.6, p11 =  0.3, p12 = 0.5,                                   in1 = 300, in2 = 600, alpha = 0.025, beta = 0.1,                                  c2 = 0.75, c3 = 1, c02 = 100, c03 = 150,                                  K = Inf, N = Inf, S = -Inf,                                  steps1 = 1, stepm1 = 0.95, stepl1 = 0.85,                                  b1 = 1000, b2 = 2000, b3 = 3000,                                   fixed = FALSE) #> Error in utility_binary_R2(n2 = 50, RRgo = 0.8, Adj = 0, w = 0.3, p0 = 0.6,     p11 = 0.3, p12 = 0.5, in1 = 300, in2 = 600, alpha = 0.025,     beta = 0.1, c2 = 0.75, c3 = 1, c02 = 100, c03 = 150, K = Inf,     N = Inf, S = -Inf, steps1 = 1, stepm1 = 0.95, stepl1 = 0.85,     b1 = 1000, b2 = 2000, b3 = 3000, fixed = FALSE): could not find function \"utility_binary_R2\""},{"path":"https://sterniii3.github.io/drugdevelopR/reference/utility_multiarm_binary.html","id":null,"dir":"Reference","previous_headings":"","what":"utility function — utility_multiarm_binary","title":"utility function — utility_multiarm_binary","text":"utility function","code":""},{"path":"https://sterniii3.github.io/drugdevelopR/reference/utility_multiarm_binary.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"utility function — utility_multiarm_binary","text":"","code":"utility_multiarm_binary(   n2,   RRgo,   alpha,   beta,   p0 = p0,   p11 = p11,   p12 = p12,   strategy,   c2,   c02,   c3,   c03,   K,   N,   S,   steps1,   stepm1,   stepl1,   b1,   b2,   b3 )"},{"path":"https://sterniii3.github.io/drugdevelopR/reference/utility_multiarm_binary.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"utility function — utility_multiarm_binary","text":"n2 total sample size phase II; must even number RRgo threshold value go/-go decision rule alpha significance level beta 1-beta power calculation sample size phase III p0 assumed true rate control group p11 assumed true rate treatment group p12 assumed true rate treatment group strategy choose Strategy: 1 (\"best promising\"), 2 (\"promising\") 3 () c2 variable per-patient cost phase II c02 fixed cost phase II c3 variable per-patient cost phase III c03 fixed cost phase III K constraint costs program, default: Inf, e.g. constraint N constraint total expected sample size program, default: Inf, e.g. constraint S constraint expected probability successful program, default: -Inf, e.g. constraint steps1 lower boundary effect size category \"small\" RR scale, default: 1 stepm1 lower boundary effect size category \"medium\" RR scale = upper boundary effect size category \"small\" RR scale, default: 0.95 stepl1 lower boundary effect size category \"large\" RR scale = upper boundary effect size category \"medium\" RR scale, default: 0.85 b1 expected gain effect size category \"small\" b2 expected gain effect size category \"medium\" b3 expected gain effect size category \"large\"","code":""},{"path":"https://sterniii3.github.io/drugdevelopR/reference/utility_multiarm_binary.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"utility function — utility_multiarm_binary","text":"output function utility_multiarm_binary expected utility program","code":""},{"path":[]},{"path":"https://sterniii3.github.io/drugdevelopR/reference/utility_multiarm_normal.html","id":null,"dir":"Reference","previous_headings":"","what":"utility function — utility_multiarm_normal","title":"utility function — utility_multiarm_normal","text":"utility function","code":""},{"path":"https://sterniii3.github.io/drugdevelopR/reference/utility_multiarm_normal.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"utility function — utility_multiarm_normal","text":"","code":"utility_multiarm_normal(   n2,   kappa,   alpha,   beta,   Delta1,   Delta2,   strategy,   c2,   c02,   c3,   c03,   K,   N,   S,   steps1,   stepm1,   stepl1,   b1,   b2,   b3 )"},{"path":"https://sterniii3.github.io/drugdevelopR/reference/utility_multiarm_normal.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"utility function — utility_multiarm_normal","text":"n2 total sample size phase II; must even number kappa threshold value go/-go decision rule alpha significance level beta 1-beta power calculation sample size phase III Delta1 assumed true treatment effect standardized difference means Delta2 assumed true treatment effect standardized difference means strategy choose Strategy: 1 (\"best promising\"), 2 (\"promising\") 3 () c2 variable per-patient cost phase II c02 fixed cost phase II c3 variable per-patient cost phase III c03 fixed cost phase III K constraint costs program, default: Inf, e.g. constraint N constraint total expected sample size program, default: Inf, e.g. constraint S constraint expected probability successful program, default: -Inf, e.g. constraint steps1 lower boundary effect size category \"small\", default: 0 stepm1 lower boundary effect size category \"medium\" = upper boundary effect size category \"small\" default: 0.5 stepl1 lower boundary effect size category \"large\" = upper boundary effect size category \"medium\", default: 0.8 b1 expected gain effect size category \"small\" b2 expected gain effect size category \"medium\" b3 expected gain effect size category \"large\"","code":""},{"path":"https://sterniii3.github.io/drugdevelopR/reference/utility_multiarm_normal.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"utility function — utility_multiarm_normal","text":"output function utility_multiarm_normal expected utility program","code":""},{"path":[]},{"path":"https://sterniii3.github.io/drugdevelopR/reference/utility_normal_L.html","id":null,"dir":"Reference","previous_headings":"","what":"Utility function — utility_normal_L","title":"Utility function — utility_normal_L","text":"Utility function","code":""},{"path":"https://sterniii3.github.io/drugdevelopR/reference/utility_normal_L.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Utility function — utility_normal_L","text":"","code":"utility_normal_L(   n2,   kappa,   Adj,   w,   Delta1,   Delta2,   in1,   in2,   a,   b,   alpha,   beta,   c2,   c3,   c02,   c03,   K,   N,   S,   steps1,   stepm1,   stepl1,   b1,   b2,   b3,   fixed )"},{"path":"https://sterniii3.github.io/drugdevelopR/reference/utility_normal_L.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Utility function — utility_normal_L","text":"n2 total sample size phase II; must even number kappa threshold value go/-go decision rule Adj adjustment parameter w weight mixture prior distribution Delta1 assumed true treatment effect standardized difference means Delta2 assumed true treatment effect standardized difference means in1 amount information Delta1 terms sample size in2 amount information Delta2 terms sample size lower boundary truncation b upper boundary truncation alpha significance level beta 1-beta power calculation sample size phase III c2 variable per-patient cost phase II c3 variable per-patient cost phase III c02 fixed cost phase II c03 fixed cost phase III K constraint costs program, default: Inf, e.g. constraint N constraint total expected sample size program, default: Inf, e.g. constraint S constraint expected probability successful program, default: -Inf, e.g. constraint steps1 lower boundary effect size category \"small\", default: 0 stepm1 lower boundary effect size category \"medium\" = upper boundary effect size category \"small\" default: 0.5 stepl1 lower boundary effect size category \"large\" = upper boundary effect size category \"medium\", default: 0.8 b1 expected gain effect size category \"small\" b2 expected gain effect size category \"medium\" b3 expected gain effect size category \"large\" fixed choose true treatment effects fixed random, TRUE Delta1 used fixed effect step1 lower boundary effect size step2 upper boundary effect size","code":""},{"path":"https://sterniii3.github.io/drugdevelopR/reference/utility_normal_L.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Utility function — utility_normal_L","text":"output function utility_normal_L expected utility program conservative sample size calculation: use lower bound one-sided confidence intervall","code":""},{"path":"https://sterniii3.github.io/drugdevelopR/reference/utility_normal_L.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Utility function — utility_normal_L","text":"","code":"res <- utility_normal_L(kappa = 0.1, n2 = 50, Adj = 0, alpha = 0.025, beta = 0.1, w = 0.3,                                  step1 = 0, step2 = 0.5,                                  Delta1 = 0.375, Delta2 = 0.625, in1 = 300, in2 = 600,                                   a = 0.25, b = 0.75,                                   K = Inf, N = Inf, S = -Inf,                                   steps1 = 0, stepm1 = 0.5, stepl1 = 0.8,                                  b1 = 3000, b2 = 8000, b3 = 10000,                                   fixed = FALSE) #> Error in utility_normal_L(kappa = 0.1, n2 = 50, Adj = 0, alpha = 0.025,     beta = 0.1, w = 0.3, step1 = 0, step2 = 0.5, Delta1 = 0.375,     Delta2 = 0.625, in1 = 300, in2 = 600, a = 0.25, b = 0.75,     K = Inf, N = Inf, S = -Inf, steps1 = 0, stepm1 = 0.5, stepl1 = 0.8,     b1 = 3000, b2 = 8000, b3 = 10000, fixed = FALSE): could not find function \"utility_normal_L\""},{"path":"https://sterniii3.github.io/drugdevelopR/reference/utility_normal_L2.html","id":null,"dir":"Reference","previous_headings":"","what":"Utility function — utility_normal_L2","title":"Utility function — utility_normal_L2","text":"Utility function","code":""},{"path":"https://sterniii3.github.io/drugdevelopR/reference/utility_normal_L2.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Utility function — utility_normal_L2","text":"","code":"utility_normal_L2(   n2,   kappa,   Adj,   w,   Delta1,   Delta2,   in1,   in2,   a,   b,   alpha,   beta,   c2,   c3,   c02,   c03,   K,   N,   S,   steps1,   stepm1,   stepl1,   b1,   b2,   b3,   fixed )"},{"path":"https://sterniii3.github.io/drugdevelopR/reference/utility_normal_L2.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Utility function — utility_normal_L2","text":"n2 total sample size phase II; must even number kappa threshold value go/-go decision rule Adj adjustment parameter w weight mixture prior distribution Delta1 assumed true treatment effect standardized difference means Delta2 assumed true treatment effect standardized difference means in1 amount information Delta1 terms sample size in2 amount information Delta2 terms sample size lower boundary truncation b upper boundary truncation alpha significance level beta 1-beta power calculation sample size phase III c2 variable per-patient cost phase II c3 variable per-patient cost phase III c02 fixed cost phase II c03 fixed cost phase III K constraint costs program, default: Inf, e.g. constraint N constraint total expected sample size program, default: Inf, e.g. constraint S constraint expected probability successful program, default: -Inf, e.g. constraint steps1 lower boundary effect size category \"small\", default: 0 stepm1 lower boundary effect size category \"medium\" = upper boundary effect size category \"small\" default: 0.5 stepl1 lower boundary effect size category \"large\" = upper boundary effect size category \"medium\", default: 0.8 b1 expected gain effect size category \"small\" b2 expected gain effect size category \"medium\" b3 expected gain effect size category \"large\" fixed choose true treatment effects fixed random, TRUE Delta1 used fixed effect step1 lower boundary effect size step2 upper boundary effect size","code":""},{"path":"https://sterniii3.github.io/drugdevelopR/reference/utility_normal_L2.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Utility function — utility_normal_L2","text":"output function utility_normal_L2 expected utility program conservative decision rule sample size calculation: use lower bound one-sided confidence intervall","code":""},{"path":"https://sterniii3.github.io/drugdevelopR/reference/utility_normal_L2.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Utility function — utility_normal_L2","text":"","code":"res <- utility_normal_L2(kappa = 0.1, n2 = 50, Adj = 0, alpha = 0.025, beta = 0.1, w = 0.3,                                  step1 = 0, step2 = 0.5,                                  Delta1 = 0.375, Delta2 = 0.625, in1 = 300, in2 = 600,                                   a = 0.25, b = 0.75,                                   K = Inf, N = Inf, S = -Inf,                                   steps1 = 0, stepm1 = 0.5, stepl1 = 0.8,                                  b1 = 3000, b2 = 8000, b3 = 10000,                                   fixed = FALSE) #> Error in utility_normal_L2(kappa = 0.1, n2 = 50, Adj = 0, alpha = 0.025,     beta = 0.1, w = 0.3, step1 = 0, step2 = 0.5, Delta1 = 0.375,     Delta2 = 0.625, in1 = 300, in2 = 600, a = 0.25, b = 0.75,     K = Inf, N = Inf, S = -Inf, steps1 = 0, stepm1 = 0.5, stepl1 = 0.8,     b1 = 3000, b2 = 8000, b3 = 10000, fixed = FALSE): could not find function \"utility_normal_L2\""},{"path":"https://sterniii3.github.io/drugdevelopR/reference/utility_normal_R.html","id":null,"dir":"Reference","previous_headings":"","what":"Utility function — utility_normal_R","title":"Utility function — utility_normal_R","text":"Utility function","code":""},{"path":"https://sterniii3.github.io/drugdevelopR/reference/utility_normal_R.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Utility function — utility_normal_R","text":"","code":"utility_normal_R(   n2,   kappa,   Adj,   w,   Delta1,   Delta2,   in1,   in2,   a,   b,   alpha,   beta,   c2,   c3,   c02,   c03,   K,   N,   S,   steps1,   stepm1,   stepl1,   b1,   b2,   b3,   fixed )"},{"path":"https://sterniii3.github.io/drugdevelopR/reference/utility_normal_R.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Utility function — utility_normal_R","text":"n2 total sample size phase II; must even number kappa threshold value go/-go decision rule Adj adjustment parameter w weight mixture prior distribution Delta1 assumed true treatment effect standardized difference means Delta2 assumed true treatment effect standardized difference means in1 amount information Delta1 terms sample size in2 amount information Delta2 terms sample size lower boundary truncation b upper boundary truncation alpha significance level beta 1-beta power calculation sample size phase III c2 variable per-patient cost phase II c3 variable per-patient cost phase III c02 fixed cost phase II c03 fixed cost phase III K constraint costs program, default: Inf, e.g. constraint N constraint total expected sample size program, default: Inf, e.g. constraint S constraint expected probability successful program, default: -Inf, e.g. constraint steps1 lower boundary effect size category \"small\", default: 0 stepm1 lower boundary effect size category \"medium\" = upper boundary effect size category \"small\" default: 0.5 stepl1 lower boundary effect size category \"large\" = upper boundary effect size category \"medium\", default: 0.8 b1 expected gain effect size category \"small\" b2 expected gain effect size category \"medium\" b3 expected gain effect size category \"large\" fixed choose true treatment effects fixed random, TRUE Delta1 used fixed effect step1 lower boundary effect size step2 upper boundary effect size","code":""},{"path":"https://sterniii3.github.io/drugdevelopR/reference/utility_normal_R.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Utility function — utility_normal_R","text":"output function utility_normal_R expected utility program conservative sample size calculation: use estimate retetion factor","code":""},{"path":"https://sterniii3.github.io/drugdevelopR/reference/utility_normal_R.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Utility function — utility_normal_R","text":"","code":"res <- utility_normal_R(kappa = 0.1, n2 = 50, Adj = 0, alpha = 0.025, beta = 0.1, w = 0.3,                                  step1 = 0, step2 = 0.5,                                  Delta1 = 0.375, Delta2 = 0.625, in1 = 300, in2 = 600,                                   a = 0.25, b = 0.75,                                   K = Inf, N = Inf, S = -Inf,                                   steps1 = 0, stepm1 = 0.5, stepl1 = 0.8,                                  b1 = 3000, b2 = 8000, b3 = 10000,                                   fixed = FALSE) #> Error in utility_normal_R(kappa = 0.1, n2 = 50, Adj = 0, alpha = 0.025,     beta = 0.1, w = 0.3, step1 = 0, step2 = 0.5, Delta1 = 0.375,     Delta2 = 0.625, in1 = 300, in2 = 600, a = 0.25, b = 0.75,     K = Inf, N = Inf, S = -Inf, steps1 = 0, stepm1 = 0.5, stepl1 = 0.8,     b1 = 3000, b2 = 8000, b3 = 10000, fixed = FALSE): could not find function \"utility_normal_R\""},{"path":"https://sterniii3.github.io/drugdevelopR/reference/utility_normal_R2.html","id":null,"dir":"Reference","previous_headings":"","what":"Utility function — utility_normal_R2","title":"Utility function — utility_normal_R2","text":"Utility function","code":""},{"path":"https://sterniii3.github.io/drugdevelopR/reference/utility_normal_R2.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Utility function — utility_normal_R2","text":"","code":"utility_normal_R2(   n2,   kappa,   Adj,   w,   Delta1,   Delta2,   in1,   in2,   a,   b,   alpha,   beta,   c2,   c3,   c02,   c03,   K,   N,   S,   steps1,   stepm1,   stepl1,   b1,   b2,   b3,   fixed )"},{"path":"https://sterniii3.github.io/drugdevelopR/reference/utility_normal_R2.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Utility function — utility_normal_R2","text":"n2 total sample size phase II; must even number kappa threshold value go/-go decision rule Adj adjustment parameter w weight mixture prior distribution Delta1 assumed true treatment effect standardized difference means Delta2 assumed true treatment effect standardized difference means in1 amount information Delta1 terms sample size in2 amount information Delta2 terms sample size lower boundary truncation b upper boundary truncation alpha significance level beta 1-beta power calculation sample size phase III c2 variable per-patient cost phase II c3 variable per-patient cost phase III c02 fixed cost phase II c03 fixed cost phase III K constraint costs program, default: Inf, e.g. constraint N constraint total expected sample size program, default: Inf, e.g. constraint S constraint expected probability successful program, default: -Inf, e.g. constraint steps1 lower boundary effect size category \"small\", default: 0 stepm1 lower boundary effect size category \"medium\" = upper boundary effect size category \"small\" default: 0.5 stepl1 lower boundary effect size category \"large\" = upper boundary effect size category \"medium\", default: 0.8 b1 expected gain effect size category \"small\" b2 expected gain effect size category \"medium\" b3 expected gain effect size category \"large\" fixed choose true treatment effects fixed random, TRUE Delta1 used fixed effect step1 lower boundary effect size step2 upper boundary effect size","code":""},{"path":"https://sterniii3.github.io/drugdevelopR/reference/utility_normal_R2.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Utility function — utility_normal_R2","text":"output function utility_normal_R2 expected utility program conservative decision rule sample size calculation:  use estimate retetion factor","code":""},{"path":"https://sterniii3.github.io/drugdevelopR/reference/utility_normal_R2.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Utility function — utility_normal_R2","text":"","code":"res <- utility_normal_R2(kappa = 0.1, n2 = 50, Adj = 0, alpha = 0.025, beta = 0.1, w = 0.3,                                  step1 = 0, step2 = 0.5,                                  Delta1 = 0.375, Delta2 = 0.625, in1 = 300, in2 = 600,                                   a = 0.25, b = 0.75,                                   K = Inf, N = Inf, S = -Inf,                                   steps1 = 0, stepm1 = 0.5, stepl1 = 0.8,                                  b1 = 3000, b2 = 8000, b3 = 10000,                                   fixed = FALSE) #> Error in utility_normal_R2(kappa = 0.1, n2 = 50, Adj = 0, alpha = 0.025,     beta = 0.1, w = 0.3, step1 = 0, step2 = 0.5, Delta1 = 0.375,     Delta2 = 0.625, in1 = 300, in2 = 600, a = 0.25, b = 0.75,     K = Inf, N = Inf, S = -Inf, steps1 = 0, stepm1 = 0.5, stepl1 = 0.8,     b1 = 3000, b2 = 8000, b3 = 10000, fixed = FALSE): could not find function \"utility_normal_R2\""},{"path":"https://sterniii3.github.io/drugdevelopR/news/index.html","id":"drugdevelopr-010","dir":"Changelog","previous_headings":"","what":"drugdevelopR 0.1.0","title":"drugdevelopR 0.1.0","text":"Added NEWS.md file track changes package.","code":""}]
